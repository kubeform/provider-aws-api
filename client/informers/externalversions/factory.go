/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	reflect "reflect"
	sync "sync"
	time "time"

	versioned "kubeform.dev/provider-aws-api/client/clientset/versioned"
	accessanalyzer "kubeform.dev/provider-aws-api/client/informers/externalversions/accessanalyzer"
	acm "kubeform.dev/provider-aws-api/client/informers/externalversions/acm"
	acmpca "kubeform.dev/provider-aws-api/client/informers/externalversions/acmpca"
	alb "kubeform.dev/provider-aws-api/client/informers/externalversions/alb"
	ami "kubeform.dev/provider-aws-api/client/informers/externalversions/ami"
	amplify "kubeform.dev/provider-aws-api/client/informers/externalversions/amplify"
	apigateway "kubeform.dev/provider-aws-api/client/informers/externalversions/apigateway"
	apigatewayv2 "kubeform.dev/provider-aws-api/client/informers/externalversions/apigatewayv2"
	app "kubeform.dev/provider-aws-api/client/informers/externalversions/app"
	appautoscaling "kubeform.dev/provider-aws-api/client/informers/externalversions/appautoscaling"
	appmesh "kubeform.dev/provider-aws-api/client/informers/externalversions/appmesh"
	apprunner "kubeform.dev/provider-aws-api/client/informers/externalversions/apprunner"
	appsync "kubeform.dev/provider-aws-api/client/informers/externalversions/appsync"
	athena "kubeform.dev/provider-aws-api/client/informers/externalversions/athena"
	autoscaling "kubeform.dev/provider-aws-api/client/informers/externalversions/autoscaling"
	autoscalingplans "kubeform.dev/provider-aws-api/client/informers/externalversions/autoscalingplans"
	backup "kubeform.dev/provider-aws-api/client/informers/externalversions/backup"
	batch "kubeform.dev/provider-aws-api/client/informers/externalversions/batch"
	budgets "kubeform.dev/provider-aws-api/client/informers/externalversions/budgets"
	cloud9 "kubeform.dev/provider-aws-api/client/informers/externalversions/cloud9"
	cloudformationstack "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudformationstack"
	cloudformationtype "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudformationtype"
	cloudfront "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudfront"
	cloudhsmv2 "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudhsmv2"
	cloudtrail "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudtrail"
	cloudwatch "kubeform.dev/provider-aws-api/client/informers/externalversions/cloudwatch"
	codeartifact "kubeform.dev/provider-aws-api/client/informers/externalversions/codeartifact"
	codebuild "kubeform.dev/provider-aws-api/client/informers/externalversions/codebuild"
	codecommit "kubeform.dev/provider-aws-api/client/informers/externalversions/codecommit"
	codedeploy "kubeform.dev/provider-aws-api/client/informers/externalversions/codedeploy"
	codepipeline "kubeform.dev/provider-aws-api/client/informers/externalversions/codepipeline"
	codestarconnections "kubeform.dev/provider-aws-api/client/informers/externalversions/codestarconnections"
	codestarnotifications "kubeform.dev/provider-aws-api/client/informers/externalversions/codestarnotifications"
	cognito "kubeform.dev/provider-aws-api/client/informers/externalversions/cognito"
	config "kubeform.dev/provider-aws-api/client/informers/externalversions/config"
	cur "kubeform.dev/provider-aws-api/client/informers/externalversions/cur"
	customer "kubeform.dev/provider-aws-api/client/informers/externalversions/customer"
	datapipeline "kubeform.dev/provider-aws-api/client/informers/externalversions/datapipeline"
	datasync "kubeform.dev/provider-aws-api/client/informers/externalversions/datasync"
	dax "kubeform.dev/provider-aws-api/client/informers/externalversions/dax"
	db "kubeform.dev/provider-aws-api/client/informers/externalversions/db"
	_default "kubeform.dev/provider-aws-api/client/informers/externalversions/default"
	devicefarm "kubeform.dev/provider-aws-api/client/informers/externalversions/devicefarm"
	directoryservice "kubeform.dev/provider-aws-api/client/informers/externalversions/directoryservice"
	dlm "kubeform.dev/provider-aws-api/client/informers/externalversions/dlm"
	dms "kubeform.dev/provider-aws-api/client/informers/externalversions/dms"
	docdb "kubeform.dev/provider-aws-api/client/informers/externalversions/docdb"
	dx "kubeform.dev/provider-aws-api/client/informers/externalversions/dx"
	dynamodb "kubeform.dev/provider-aws-api/client/informers/externalversions/dynamodb"
	ebs "kubeform.dev/provider-aws-api/client/informers/externalversions/ebs"
	ec2 "kubeform.dev/provider-aws-api/client/informers/externalversions/ec2"
	ecr "kubeform.dev/provider-aws-api/client/informers/externalversions/ecr"
	ecrpublic "kubeform.dev/provider-aws-api/client/informers/externalversions/ecrpublic"
	ecs "kubeform.dev/provider-aws-api/client/informers/externalversions/ecs"
	efs "kubeform.dev/provider-aws-api/client/informers/externalversions/efs"
	egress "kubeform.dev/provider-aws-api/client/informers/externalversions/egress"
	eip "kubeform.dev/provider-aws-api/client/informers/externalversions/eip"
	eks "kubeform.dev/provider-aws-api/client/informers/externalversions/eks"
	elasticache "kubeform.dev/provider-aws-api/client/informers/externalversions/elasticache"
	elasticbeanstalk "kubeform.dev/provider-aws-api/client/informers/externalversions/elasticbeanstalk"
	elasticsearchdomain "kubeform.dev/provider-aws-api/client/informers/externalversions/elasticsearchdomain"
	elastictranscoder "kubeform.dev/provider-aws-api/client/informers/externalversions/elastictranscoder"
	elb "kubeform.dev/provider-aws-api/client/informers/externalversions/elb"
	emr "kubeform.dev/provider-aws-api/client/informers/externalversions/emr"
	flow "kubeform.dev/provider-aws-api/client/informers/externalversions/flow"
	fms "kubeform.dev/provider-aws-api/client/informers/externalversions/fms"
	fsx "kubeform.dev/provider-aws-api/client/informers/externalversions/fsx"
	gamelift "kubeform.dev/provider-aws-api/client/informers/externalversions/gamelift"
	glaciervault "kubeform.dev/provider-aws-api/client/informers/externalversions/glaciervault"
	globalaccelerator "kubeform.dev/provider-aws-api/client/informers/externalversions/globalaccelerator"
	glue "kubeform.dev/provider-aws-api/client/informers/externalversions/glue"
	guardduty "kubeform.dev/provider-aws-api/client/informers/externalversions/guardduty"
	iam "kubeform.dev/provider-aws-api/client/informers/externalversions/iam"
	imagebuilder "kubeform.dev/provider-aws-api/client/informers/externalversions/imagebuilder"
	inspector "kubeform.dev/provider-aws-api/client/informers/externalversions/inspector"
	instance "kubeform.dev/provider-aws-api/client/informers/externalversions/instance"
	internalinterfaces "kubeform.dev/provider-aws-api/client/informers/externalversions/internalinterfaces"
	internet "kubeform.dev/provider-aws-api/client/informers/externalversions/internet"
	iot "kubeform.dev/provider-aws-api/client/informers/externalversions/iot"
	key "kubeform.dev/provider-aws-api/client/informers/externalversions/key"
	kinesis "kubeform.dev/provider-aws-api/client/informers/externalversions/kinesis"
	kinesisanalyticsv2 "kubeform.dev/provider-aws-api/client/informers/externalversions/kinesisanalyticsv2"
	kms "kubeform.dev/provider-aws-api/client/informers/externalversions/kms"
	lakeformation "kubeform.dev/provider-aws-api/client/informers/externalversions/lakeformation"
	lambda "kubeform.dev/provider-aws-api/client/informers/externalversions/lambda"
	launch "kubeform.dev/provider-aws-api/client/informers/externalversions/launch"
	lb "kubeform.dev/provider-aws-api/client/informers/externalversions/lb"
	lex "kubeform.dev/provider-aws-api/client/informers/externalversions/lex"
	licensemanager "kubeform.dev/provider-aws-api/client/informers/externalversions/licensemanager"
	lightsail "kubeform.dev/provider-aws-api/client/informers/externalversions/lightsail"
	loadbalancer "kubeform.dev/provider-aws-api/client/informers/externalversions/loadbalancer"
	macie "kubeform.dev/provider-aws-api/client/informers/externalversions/macie"
	macie2 "kubeform.dev/provider-aws-api/client/informers/externalversions/macie2"
	main "kubeform.dev/provider-aws-api/client/informers/externalversions/main"
	media "kubeform.dev/provider-aws-api/client/informers/externalversions/media"
	mq "kubeform.dev/provider-aws-api/client/informers/externalversions/mq"
	msk "kubeform.dev/provider-aws-api/client/informers/externalversions/msk"
	mwaa "kubeform.dev/provider-aws-api/client/informers/externalversions/mwaa"
	nat "kubeform.dev/provider-aws-api/client/informers/externalversions/nat"
	neptune "kubeform.dev/provider-aws-api/client/informers/externalversions/neptune"
	network "kubeform.dev/provider-aws-api/client/informers/externalversions/network"
	networkfirewall "kubeform.dev/provider-aws-api/client/informers/externalversions/networkfirewall"
	opsworks "kubeform.dev/provider-aws-api/client/informers/externalversions/opsworks"
	organizations "kubeform.dev/provider-aws-api/client/informers/externalversions/organizations"
	pinpoint "kubeform.dev/provider-aws-api/client/informers/externalversions/pinpoint"
	placement "kubeform.dev/provider-aws-api/client/informers/externalversions/placement"
	prometheus "kubeform.dev/provider-aws-api/client/informers/externalversions/prometheus"
	proxy "kubeform.dev/provider-aws-api/client/informers/externalversions/proxy"
	qldb "kubeform.dev/provider-aws-api/client/informers/externalversions/qldb"
	quicksight "kubeform.dev/provider-aws-api/client/informers/externalversions/quicksight"
	ram "kubeform.dev/provider-aws-api/client/informers/externalversions/ram"
	rds "kubeform.dev/provider-aws-api/client/informers/externalversions/rds"
	redshift "kubeform.dev/provider-aws-api/client/informers/externalversions/redshift"
	resourcegroups "kubeform.dev/provider-aws-api/client/informers/externalversions/resourcegroups"
	route "kubeform.dev/provider-aws-api/client/informers/externalversions/route"
	route53 "kubeform.dev/provider-aws-api/client/informers/externalversions/route53"
	s3 "kubeform.dev/provider-aws-api/client/informers/externalversions/s3"
	s3control "kubeform.dev/provider-aws-api/client/informers/externalversions/s3control"
	s3outposts "kubeform.dev/provider-aws-api/client/informers/externalversions/s3outposts"
	sagemaker "kubeform.dev/provider-aws-api/client/informers/externalversions/sagemaker"
	schemas "kubeform.dev/provider-aws-api/client/informers/externalversions/schemas"
	secretsmanager "kubeform.dev/provider-aws-api/client/informers/externalversions/secretsmanager"
	security "kubeform.dev/provider-aws-api/client/informers/externalversions/security"
	securityhub "kubeform.dev/provider-aws-api/client/informers/externalversions/securityhub"
	serverlessapplicationrepository "kubeform.dev/provider-aws-api/client/informers/externalversions/serverlessapplicationrepository"
	servicecatalog "kubeform.dev/provider-aws-api/client/informers/externalversions/servicecatalog"
	servicediscovery "kubeform.dev/provider-aws-api/client/informers/externalversions/servicediscovery"
	servicequotas "kubeform.dev/provider-aws-api/client/informers/externalversions/servicequotas"
	ses "kubeform.dev/provider-aws-api/client/informers/externalversions/ses"
	sfn "kubeform.dev/provider-aws-api/client/informers/externalversions/sfn"
	shield "kubeform.dev/provider-aws-api/client/informers/externalversions/shield"
	signer "kubeform.dev/provider-aws-api/client/informers/externalversions/signer"
	simpledb "kubeform.dev/provider-aws-api/client/informers/externalversions/simpledb"
	snapshot "kubeform.dev/provider-aws-api/client/informers/externalversions/snapshot"
	sns "kubeform.dev/provider-aws-api/client/informers/externalversions/sns"
	spot "kubeform.dev/provider-aws-api/client/informers/externalversions/spot"
	sqsqueue "kubeform.dev/provider-aws-api/client/informers/externalversions/sqsqueue"
	ssm "kubeform.dev/provider-aws-api/client/informers/externalversions/ssm"
	ssoadmin "kubeform.dev/provider-aws-api/client/informers/externalversions/ssoadmin"
	storagegateway "kubeform.dev/provider-aws-api/client/informers/externalversions/storagegateway"
	subnet "kubeform.dev/provider-aws-api/client/informers/externalversions/subnet"
	swf "kubeform.dev/provider-aws-api/client/informers/externalversions/swf"
	synthetics "kubeform.dev/provider-aws-api/client/informers/externalversions/synthetics"
	timestreamwrite "kubeform.dev/provider-aws-api/client/informers/externalversions/timestreamwrite"
	transfer "kubeform.dev/provider-aws-api/client/informers/externalversions/transfer"
	volume "kubeform.dev/provider-aws-api/client/informers/externalversions/volume"
	vpc "kubeform.dev/provider-aws-api/client/informers/externalversions/vpc"
	vpn "kubeform.dev/provider-aws-api/client/informers/externalversions/vpn"
	waf "kubeform.dev/provider-aws-api/client/informers/externalversions/waf"
	wafregional "kubeform.dev/provider-aws-api/client/informers/externalversions/wafregional"
	wafv2 "kubeform.dev/provider-aws-api/client/informers/externalversions/wafv2"
	worklink "kubeform.dev/provider-aws-api/client/informers/externalversions/worklink"
	workspaces "kubeform.dev/provider-aws-api/client/informers/externalversions/workspaces"
	xray "kubeform.dev/provider-aws-api/client/informers/externalversions/xray"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
)

// SharedInformerOption defines the functional option type for SharedInformerFactory.
type SharedInformerOption func(*sharedInformerFactory) *sharedInformerFactory

type sharedInformerFactory struct {
	client           versioned.Interface
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
	lock             sync.Mutex
	defaultResync    time.Duration
	customResync     map[reflect.Type]time.Duration

	informers map[reflect.Type]cache.SharedIndexInformer
	// startedInformers is used for tracking which informers have been started.
	// This allows Start() to be called multiple times safely.
	startedInformers map[reflect.Type]bool
}

// WithCustomResyncConfig sets a custom resync period for the specified informer types.
func WithCustomResyncConfig(resyncConfig map[v1.Object]time.Duration) SharedInformerOption {
	return func(factory *sharedInformerFactory) *sharedInformerFactory {
		for k, v := range resyncConfig {
			factory.customResync[reflect.TypeOf(k)] = v
		}
		return factory
	}
}

// WithTweakListOptions sets a custom filter on all listers of the configured SharedInformerFactory.
func WithTweakListOptions(tweakListOptions internalinterfaces.TweakListOptionsFunc) SharedInformerOption {
	return func(factory *sharedInformerFactory) *sharedInformerFactory {
		factory.tweakListOptions = tweakListOptions
		return factory
	}
}

// WithNamespace limits the SharedInformerFactory to the specified namespace.
func WithNamespace(namespace string) SharedInformerOption {
	return func(factory *sharedInformerFactory) *sharedInformerFactory {
		factory.namespace = namespace
		return factory
	}
}

// NewSharedInformerFactory constructs a new instance of sharedInformerFactory for all namespaces.
func NewSharedInformerFactory(client versioned.Interface, defaultResync time.Duration) SharedInformerFactory {
	return NewSharedInformerFactoryWithOptions(client, defaultResync)
}

// NewFilteredSharedInformerFactory constructs a new instance of sharedInformerFactory.
// Listers obtained via this SharedInformerFactory will be subject to the same filters
// as specified here.
// Deprecated: Please use NewSharedInformerFactoryWithOptions instead
func NewFilteredSharedInformerFactory(client versioned.Interface, defaultResync time.Duration, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) SharedInformerFactory {
	return NewSharedInformerFactoryWithOptions(client, defaultResync, WithNamespace(namespace), WithTweakListOptions(tweakListOptions))
}

// NewSharedInformerFactoryWithOptions constructs a new instance of a SharedInformerFactory with additional options.
func NewSharedInformerFactoryWithOptions(client versioned.Interface, defaultResync time.Duration, options ...SharedInformerOption) SharedInformerFactory {
	factory := &sharedInformerFactory{
		client:           client,
		namespace:        v1.NamespaceAll,
		defaultResync:    defaultResync,
		informers:        make(map[reflect.Type]cache.SharedIndexInformer),
		startedInformers: make(map[reflect.Type]bool),
		customResync:     make(map[reflect.Type]time.Duration),
	}

	// Apply all options
	for _, opt := range options {
		factory = opt(factory)
	}

	return factory
}

// Start initializes all requested informers.
func (f *sharedInformerFactory) Start(stopCh <-chan struct{}) {
	f.lock.Lock()
	defer f.lock.Unlock()

	for informerType, informer := range f.informers {
		if !f.startedInformers[informerType] {
			go informer.Run(stopCh)
			f.startedInformers[informerType] = true
		}
	}
}

// WaitForCacheSync waits for all started informers' cache were synced.
func (f *sharedInformerFactory) WaitForCacheSync(stopCh <-chan struct{}) map[reflect.Type]bool {
	informers := func() map[reflect.Type]cache.SharedIndexInformer {
		f.lock.Lock()
		defer f.lock.Unlock()

		informers := map[reflect.Type]cache.SharedIndexInformer{}
		for informerType, informer := range f.informers {
			if f.startedInformers[informerType] {
				informers[informerType] = informer
			}
		}
		return informers
	}()

	res := map[reflect.Type]bool{}
	for informType, informer := range informers {
		res[informType] = cache.WaitForCacheSync(stopCh, informer.HasSynced)
	}
	return res
}

// InternalInformerFor returns the SharedIndexInformer for obj using an internal
// client.
func (f *sharedInformerFactory) InformerFor(obj runtime.Object, newFunc internalinterfaces.NewInformerFunc) cache.SharedIndexInformer {
	f.lock.Lock()
	defer f.lock.Unlock()

	informerType := reflect.TypeOf(obj)
	informer, exists := f.informers[informerType]
	if exists {
		return informer
	}

	resyncPeriod, exists := f.customResync[informerType]
	if !exists {
		resyncPeriod = f.defaultResync
	}

	informer = newFunc(f.client, resyncPeriod)
	f.informers[informerType] = informer

	return informer
}

// SharedInformerFactory provides shared informers for resources in all known
// API group versions.
type SharedInformerFactory interface {
	internalinterfaces.SharedInformerFactory
	ForResource(resource schema.GroupVersionResource) (GenericInformer, error)
	WaitForCacheSync(stopCh <-chan struct{}) map[reflect.Type]bool

	Accessanalyzer() accessanalyzer.Interface
	Acm() acm.Interface
	Acmpca() acmpca.Interface
	Alb() alb.Interface
	Ami() ami.Interface
	Amplify() amplify.Interface
	Apigateway() apigateway.Interface
	Apigatewayv2() apigatewayv2.Interface
	App() app.Interface
	Appautoscaling() appautoscaling.Interface
	Appmesh() appmesh.Interface
	Apprunner() apprunner.Interface
	Appsync() appsync.Interface
	Athena() athena.Interface
	Autoscaling() autoscaling.Interface
	Autoscalingplans() autoscalingplans.Interface
	Backup() backup.Interface
	Batch() batch.Interface
	Budgets() budgets.Interface
	Cloud9() cloud9.Interface
	Cloudformationstack() cloudformationstack.Interface
	Cloudformationtype() cloudformationtype.Interface
	Cloudfront() cloudfront.Interface
	Cloudhsmv2() cloudhsmv2.Interface
	Cloudtrail() cloudtrail.Interface
	Cloudwatch() cloudwatch.Interface
	Codeartifact() codeartifact.Interface
	Codebuild() codebuild.Interface
	Codecommit() codecommit.Interface
	Codedeploy() codedeploy.Interface
	Codepipeline() codepipeline.Interface
	Codestarconnections() codestarconnections.Interface
	Codestarnotifications() codestarnotifications.Interface
	Cognito() cognito.Interface
	Config() config.Interface
	Cur() cur.Interface
	Customer() customer.Interface
	Datapipeline() datapipeline.Interface
	Datasync() datasync.Interface
	Dax() dax.Interface
	Db() db.Interface
	Default() _default.Interface
	Devicefarm() devicefarm.Interface
	Directoryservice() directoryservice.Interface
	Dlm() dlm.Interface
	Dms() dms.Interface
	Docdb() docdb.Interface
	Dx() dx.Interface
	Dynamodb() dynamodb.Interface
	Ebs() ebs.Interface
	Ec2() ec2.Interface
	Ecr() ecr.Interface
	Ecrpublic() ecrpublic.Interface
	Ecs() ecs.Interface
	Efs() efs.Interface
	Egress() egress.Interface
	Eip() eip.Interface
	Eks() eks.Interface
	Elasticache() elasticache.Interface
	Elasticbeanstalk() elasticbeanstalk.Interface
	Elasticsearchdomain() elasticsearchdomain.Interface
	Elastictranscoder() elastictranscoder.Interface
	Elb() elb.Interface
	Emr() emr.Interface
	Flow() flow.Interface
	Fms() fms.Interface
	Fsx() fsx.Interface
	Gamelift() gamelift.Interface
	Glaciervault() glaciervault.Interface
	Globalaccelerator() globalaccelerator.Interface
	Glue() glue.Interface
	Guardduty() guardduty.Interface
	Iam() iam.Interface
	Imagebuilder() imagebuilder.Interface
	Inspector() inspector.Interface
	Instance() instance.Interface
	Internet() internet.Interface
	Iot() iot.Interface
	Key() key.Interface
	Kinesis() kinesis.Interface
	Kinesisanalyticsv2() kinesisanalyticsv2.Interface
	Kms() kms.Interface
	Lakeformation() lakeformation.Interface
	Lambda() lambda.Interface
	Launch() launch.Interface
	Lb() lb.Interface
	Lex() lex.Interface
	Licensemanager() licensemanager.Interface
	Lightsail() lightsail.Interface
	Loadbalancer() loadbalancer.Interface
	Macie() macie.Interface
	Macie2() macie2.Interface
	Main() main.Interface
	Media() media.Interface
	Mq() mq.Interface
	Msk() msk.Interface
	Mwaa() mwaa.Interface
	Nat() nat.Interface
	Neptune() neptune.Interface
	Network() network.Interface
	Networkfirewall() networkfirewall.Interface
	Opsworks() opsworks.Interface
	Organizations() organizations.Interface
	Pinpoint() pinpoint.Interface
	Placement() placement.Interface
	Prometheus() prometheus.Interface
	Proxy() proxy.Interface
	Qldb() qldb.Interface
	Quicksight() quicksight.Interface
	Ram() ram.Interface
	Rds() rds.Interface
	Redshift() redshift.Interface
	Resourcegroups() resourcegroups.Interface
	Route() route.Interface
	Route53() route53.Interface
	S3() s3.Interface
	S3control() s3control.Interface
	S3outposts() s3outposts.Interface
	Sagemaker() sagemaker.Interface
	Schemas() schemas.Interface
	Secretsmanager() secretsmanager.Interface
	Security() security.Interface
	Securityhub() securityhub.Interface
	Serverlessapplicationrepository() serverlessapplicationrepository.Interface
	Servicecatalog() servicecatalog.Interface
	Servicediscovery() servicediscovery.Interface
	Servicequotas() servicequotas.Interface
	Ses() ses.Interface
	Sfn() sfn.Interface
	Shield() shield.Interface
	Signer() signer.Interface
	Simpledb() simpledb.Interface
	Snapshot() snapshot.Interface
	Sns() sns.Interface
	Spot() spot.Interface
	Sqsqueue() sqsqueue.Interface
	Ssm() ssm.Interface
	Ssoadmin() ssoadmin.Interface
	Storagegateway() storagegateway.Interface
	Subnet() subnet.Interface
	Swf() swf.Interface
	Synthetics() synthetics.Interface
	Timestreamwrite() timestreamwrite.Interface
	Transfer() transfer.Interface
	Volume() volume.Interface
	Vpc() vpc.Interface
	Vpn() vpn.Interface
	Waf() waf.Interface
	Wafregional() wafregional.Interface
	Wafv2() wafv2.Interface
	Worklink() worklink.Interface
	Workspaces() workspaces.Interface
	Xray() xray.Interface
}

func (f *sharedInformerFactory) Accessanalyzer() accessanalyzer.Interface {
	return accessanalyzer.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Acm() acm.Interface {
	return acm.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Acmpca() acmpca.Interface {
	return acmpca.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Alb() alb.Interface {
	return alb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ami() ami.Interface {
	return ami.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Amplify() amplify.Interface {
	return amplify.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Apigateway() apigateway.Interface {
	return apigateway.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Apigatewayv2() apigatewayv2.Interface {
	return apigatewayv2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) App() app.Interface {
	return app.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Appautoscaling() appautoscaling.Interface {
	return appautoscaling.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Appmesh() appmesh.Interface {
	return appmesh.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Apprunner() apprunner.Interface {
	return apprunner.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Appsync() appsync.Interface {
	return appsync.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Athena() athena.Interface {
	return athena.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Autoscaling() autoscaling.Interface {
	return autoscaling.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Autoscalingplans() autoscalingplans.Interface {
	return autoscalingplans.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Backup() backup.Interface {
	return backup.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Batch() batch.Interface {
	return batch.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Budgets() budgets.Interface {
	return budgets.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloud9() cloud9.Interface {
	return cloud9.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudformationstack() cloudformationstack.Interface {
	return cloudformationstack.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudformationtype() cloudformationtype.Interface {
	return cloudformationtype.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudfront() cloudfront.Interface {
	return cloudfront.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudhsmv2() cloudhsmv2.Interface {
	return cloudhsmv2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudtrail() cloudtrail.Interface {
	return cloudtrail.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cloudwatch() cloudwatch.Interface {
	return cloudwatch.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codeartifact() codeartifact.Interface {
	return codeartifact.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codebuild() codebuild.Interface {
	return codebuild.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codecommit() codecommit.Interface {
	return codecommit.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codedeploy() codedeploy.Interface {
	return codedeploy.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codepipeline() codepipeline.Interface {
	return codepipeline.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codestarconnections() codestarconnections.Interface {
	return codestarconnections.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Codestarnotifications() codestarnotifications.Interface {
	return codestarnotifications.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cognito() cognito.Interface {
	return cognito.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Config() config.Interface {
	return config.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Cur() cur.Interface {
	return cur.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Customer() customer.Interface {
	return customer.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Datapipeline() datapipeline.Interface {
	return datapipeline.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Datasync() datasync.Interface {
	return datasync.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Dax() dax.Interface {
	return dax.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Db() db.Interface {
	return db.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Default() _default.Interface {
	return _default.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Devicefarm() devicefarm.Interface {
	return devicefarm.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Directoryservice() directoryservice.Interface {
	return directoryservice.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Dlm() dlm.Interface {
	return dlm.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Dms() dms.Interface {
	return dms.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Docdb() docdb.Interface {
	return docdb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Dx() dx.Interface {
	return dx.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Dynamodb() dynamodb.Interface {
	return dynamodb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ebs() ebs.Interface {
	return ebs.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ec2() ec2.Interface {
	return ec2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ecr() ecr.Interface {
	return ecr.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ecrpublic() ecrpublic.Interface {
	return ecrpublic.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ecs() ecs.Interface {
	return ecs.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Efs() efs.Interface {
	return efs.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Egress() egress.Interface {
	return egress.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Eip() eip.Interface {
	return eip.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Eks() eks.Interface {
	return eks.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Elasticache() elasticache.Interface {
	return elasticache.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Elasticbeanstalk() elasticbeanstalk.Interface {
	return elasticbeanstalk.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Elasticsearchdomain() elasticsearchdomain.Interface {
	return elasticsearchdomain.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Elastictranscoder() elastictranscoder.Interface {
	return elastictranscoder.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Elb() elb.Interface {
	return elb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Emr() emr.Interface {
	return emr.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Flow() flow.Interface {
	return flow.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Fms() fms.Interface {
	return fms.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Fsx() fsx.Interface {
	return fsx.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Gamelift() gamelift.Interface {
	return gamelift.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Glaciervault() glaciervault.Interface {
	return glaciervault.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Globalaccelerator() globalaccelerator.Interface {
	return globalaccelerator.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Glue() glue.Interface {
	return glue.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Guardduty() guardduty.Interface {
	return guardduty.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Iam() iam.Interface {
	return iam.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Imagebuilder() imagebuilder.Interface {
	return imagebuilder.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Inspector() inspector.Interface {
	return inspector.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Instance() instance.Interface {
	return instance.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Internet() internet.Interface {
	return internet.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Iot() iot.Interface {
	return iot.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Key() key.Interface {
	return key.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Kinesis() kinesis.Interface {
	return kinesis.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Kinesisanalyticsv2() kinesisanalyticsv2.Interface {
	return kinesisanalyticsv2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Kms() kms.Interface {
	return kms.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Lakeformation() lakeformation.Interface {
	return lakeformation.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Lambda() lambda.Interface {
	return lambda.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Launch() launch.Interface {
	return launch.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Lb() lb.Interface {
	return lb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Lex() lex.Interface {
	return lex.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Licensemanager() licensemanager.Interface {
	return licensemanager.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Lightsail() lightsail.Interface {
	return lightsail.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Loadbalancer() loadbalancer.Interface {
	return loadbalancer.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Macie() macie.Interface {
	return macie.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Macie2() macie2.Interface {
	return macie2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Main() main.Interface {
	return main.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Media() media.Interface {
	return media.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Mq() mq.Interface {
	return mq.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Msk() msk.Interface {
	return msk.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Mwaa() mwaa.Interface {
	return mwaa.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Nat() nat.Interface {
	return nat.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Neptune() neptune.Interface {
	return neptune.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Network() network.Interface {
	return network.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Networkfirewall() networkfirewall.Interface {
	return networkfirewall.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Opsworks() opsworks.Interface {
	return opsworks.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Organizations() organizations.Interface {
	return organizations.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Pinpoint() pinpoint.Interface {
	return pinpoint.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Placement() placement.Interface {
	return placement.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Prometheus() prometheus.Interface {
	return prometheus.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Proxy() proxy.Interface {
	return proxy.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Qldb() qldb.Interface {
	return qldb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Quicksight() quicksight.Interface {
	return quicksight.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ram() ram.Interface {
	return ram.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Rds() rds.Interface {
	return rds.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Redshift() redshift.Interface {
	return redshift.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Resourcegroups() resourcegroups.Interface {
	return resourcegroups.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Route() route.Interface {
	return route.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Route53() route53.Interface {
	return route53.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) S3() s3.Interface {
	return s3.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) S3control() s3control.Interface {
	return s3control.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) S3outposts() s3outposts.Interface {
	return s3outposts.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Sagemaker() sagemaker.Interface {
	return sagemaker.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Schemas() schemas.Interface {
	return schemas.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Secretsmanager() secretsmanager.Interface {
	return secretsmanager.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Security() security.Interface {
	return security.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Securityhub() securityhub.Interface {
	return securityhub.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Serverlessapplicationrepository() serverlessapplicationrepository.Interface {
	return serverlessapplicationrepository.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Servicecatalog() servicecatalog.Interface {
	return servicecatalog.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Servicediscovery() servicediscovery.Interface {
	return servicediscovery.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Servicequotas() servicequotas.Interface {
	return servicequotas.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ses() ses.Interface {
	return ses.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Sfn() sfn.Interface {
	return sfn.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Shield() shield.Interface {
	return shield.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Signer() signer.Interface {
	return signer.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Simpledb() simpledb.Interface {
	return simpledb.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Snapshot() snapshot.Interface {
	return snapshot.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Sns() sns.Interface {
	return sns.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Spot() spot.Interface {
	return spot.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Sqsqueue() sqsqueue.Interface {
	return sqsqueue.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ssm() ssm.Interface {
	return ssm.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Ssoadmin() ssoadmin.Interface {
	return ssoadmin.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Storagegateway() storagegateway.Interface {
	return storagegateway.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Subnet() subnet.Interface {
	return subnet.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Swf() swf.Interface {
	return swf.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Synthetics() synthetics.Interface {
	return synthetics.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Timestreamwrite() timestreamwrite.Interface {
	return timestreamwrite.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Transfer() transfer.Interface {
	return transfer.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Volume() volume.Interface {
	return volume.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Vpc() vpc.Interface {
	return vpc.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Vpn() vpn.Interface {
	return vpn.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Waf() waf.Interface {
	return waf.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Wafregional() wafregional.Interface {
	return wafregional.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Wafv2() wafv2.Interface {
	return wafv2.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Worklink() worklink.Interface {
	return worklink.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Workspaces() workspaces.Interface {
	return workspaces.New(f, f.namespace, f.tweakListOptions)
}

func (f *sharedInformerFactory) Xray() xray.Interface {
	return xray.New(f, f.namespace, f.tweakListOptions)
}
