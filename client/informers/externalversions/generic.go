/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	"fmt"

	v1alpha1 "kubeform.dev/provider-aws-api/apis/accessanalyzer/v1alpha1"
	acmv1alpha1 "kubeform.dev/provider-aws-api/apis/acm/v1alpha1"
	acmpcav1alpha1 "kubeform.dev/provider-aws-api/apis/acmpca/v1alpha1"
	albv1alpha1 "kubeform.dev/provider-aws-api/apis/alb/v1alpha1"
	amiv1alpha1 "kubeform.dev/provider-aws-api/apis/ami/v1alpha1"
	amplifyv1alpha1 "kubeform.dev/provider-aws-api/apis/amplify/v1alpha1"
	apigatewayv1alpha1 "kubeform.dev/provider-aws-api/apis/apigateway/v1alpha1"
	apigatewayv2v1alpha1 "kubeform.dev/provider-aws-api/apis/apigatewayv2/v1alpha1"
	appv1alpha1 "kubeform.dev/provider-aws-api/apis/app/v1alpha1"
	appautoscalingv1alpha1 "kubeform.dev/provider-aws-api/apis/appautoscaling/v1alpha1"
	appmeshv1alpha1 "kubeform.dev/provider-aws-api/apis/appmesh/v1alpha1"
	apprunnerv1alpha1 "kubeform.dev/provider-aws-api/apis/apprunner/v1alpha1"
	appsyncv1alpha1 "kubeform.dev/provider-aws-api/apis/appsync/v1alpha1"
	athenav1alpha1 "kubeform.dev/provider-aws-api/apis/athena/v1alpha1"
	autoscalingv1alpha1 "kubeform.dev/provider-aws-api/apis/autoscaling/v1alpha1"
	autoscalingplansv1alpha1 "kubeform.dev/provider-aws-api/apis/autoscalingplans/v1alpha1"
	backupv1alpha1 "kubeform.dev/provider-aws-api/apis/backup/v1alpha1"
	batchv1alpha1 "kubeform.dev/provider-aws-api/apis/batch/v1alpha1"
	budgetsv1alpha1 "kubeform.dev/provider-aws-api/apis/budgets/v1alpha1"
	cloud9v1alpha1 "kubeform.dev/provider-aws-api/apis/cloud9/v1alpha1"
	cloudformationstackv1alpha1 "kubeform.dev/provider-aws-api/apis/cloudformationstack/v1alpha1"
	cloudformationtypev1alpha1 "kubeform.dev/provider-aws-api/apis/cloudformationtype/v1alpha1"
	cloudfrontv1alpha1 "kubeform.dev/provider-aws-api/apis/cloudfront/v1alpha1"
	cloudhsmv2v1alpha1 "kubeform.dev/provider-aws-api/apis/cloudhsmv2/v1alpha1"
	cloudtrailv1alpha1 "kubeform.dev/provider-aws-api/apis/cloudtrail/v1alpha1"
	cloudwatchv1alpha1 "kubeform.dev/provider-aws-api/apis/cloudwatch/v1alpha1"
	codeartifactv1alpha1 "kubeform.dev/provider-aws-api/apis/codeartifact/v1alpha1"
	codebuildv1alpha1 "kubeform.dev/provider-aws-api/apis/codebuild/v1alpha1"
	codecommitv1alpha1 "kubeform.dev/provider-aws-api/apis/codecommit/v1alpha1"
	codedeployv1alpha1 "kubeform.dev/provider-aws-api/apis/codedeploy/v1alpha1"
	codepipelinev1alpha1 "kubeform.dev/provider-aws-api/apis/codepipeline/v1alpha1"
	codestarconnectionsv1alpha1 "kubeform.dev/provider-aws-api/apis/codestarconnections/v1alpha1"
	codestarnotificationsv1alpha1 "kubeform.dev/provider-aws-api/apis/codestarnotifications/v1alpha1"
	cognitov1alpha1 "kubeform.dev/provider-aws-api/apis/cognito/v1alpha1"
	configv1alpha1 "kubeform.dev/provider-aws-api/apis/config/v1alpha1"
	curv1alpha1 "kubeform.dev/provider-aws-api/apis/cur/v1alpha1"
	customerv1alpha1 "kubeform.dev/provider-aws-api/apis/customer/v1alpha1"
	datapipelinev1alpha1 "kubeform.dev/provider-aws-api/apis/datapipeline/v1alpha1"
	datasyncv1alpha1 "kubeform.dev/provider-aws-api/apis/datasync/v1alpha1"
	daxv1alpha1 "kubeform.dev/provider-aws-api/apis/dax/v1alpha1"
	dbv1alpha1 "kubeform.dev/provider-aws-api/apis/db/v1alpha1"
	defaultv1alpha1 "kubeform.dev/provider-aws-api/apis/default/v1alpha1"
	devicefarmv1alpha1 "kubeform.dev/provider-aws-api/apis/devicefarm/v1alpha1"
	directoryservicev1alpha1 "kubeform.dev/provider-aws-api/apis/directoryservice/v1alpha1"
	dlmv1alpha1 "kubeform.dev/provider-aws-api/apis/dlm/v1alpha1"
	dmsv1alpha1 "kubeform.dev/provider-aws-api/apis/dms/v1alpha1"
	docdbv1alpha1 "kubeform.dev/provider-aws-api/apis/docdb/v1alpha1"
	dxv1alpha1 "kubeform.dev/provider-aws-api/apis/dx/v1alpha1"
	dynamodbv1alpha1 "kubeform.dev/provider-aws-api/apis/dynamodb/v1alpha1"
	ebsv1alpha1 "kubeform.dev/provider-aws-api/apis/ebs/v1alpha1"
	ec2v1alpha1 "kubeform.dev/provider-aws-api/apis/ec2/v1alpha1"
	ecrv1alpha1 "kubeform.dev/provider-aws-api/apis/ecr/v1alpha1"
	ecrpublicv1alpha1 "kubeform.dev/provider-aws-api/apis/ecrpublic/v1alpha1"
	ecsv1alpha1 "kubeform.dev/provider-aws-api/apis/ecs/v1alpha1"
	efsv1alpha1 "kubeform.dev/provider-aws-api/apis/efs/v1alpha1"
	egressv1alpha1 "kubeform.dev/provider-aws-api/apis/egress/v1alpha1"
	eipv1alpha1 "kubeform.dev/provider-aws-api/apis/eip/v1alpha1"
	eksv1alpha1 "kubeform.dev/provider-aws-api/apis/eks/v1alpha1"
	elasticachev1alpha1 "kubeform.dev/provider-aws-api/apis/elasticache/v1alpha1"
	elasticbeanstalkv1alpha1 "kubeform.dev/provider-aws-api/apis/elasticbeanstalk/v1alpha1"
	elasticsearchdomainv1alpha1 "kubeform.dev/provider-aws-api/apis/elasticsearchdomain/v1alpha1"
	elastictranscoderv1alpha1 "kubeform.dev/provider-aws-api/apis/elastictranscoder/v1alpha1"
	elbv1alpha1 "kubeform.dev/provider-aws-api/apis/elb/v1alpha1"
	emrv1alpha1 "kubeform.dev/provider-aws-api/apis/emr/v1alpha1"
	flowv1alpha1 "kubeform.dev/provider-aws-api/apis/flow/v1alpha1"
	fmsv1alpha1 "kubeform.dev/provider-aws-api/apis/fms/v1alpha1"
	fsxv1alpha1 "kubeform.dev/provider-aws-api/apis/fsx/v1alpha1"
	gameliftv1alpha1 "kubeform.dev/provider-aws-api/apis/gamelift/v1alpha1"
	glaciervaultv1alpha1 "kubeform.dev/provider-aws-api/apis/glaciervault/v1alpha1"
	globalacceleratorv1alpha1 "kubeform.dev/provider-aws-api/apis/globalaccelerator/v1alpha1"
	gluev1alpha1 "kubeform.dev/provider-aws-api/apis/glue/v1alpha1"
	guarddutyv1alpha1 "kubeform.dev/provider-aws-api/apis/guardduty/v1alpha1"
	iamv1alpha1 "kubeform.dev/provider-aws-api/apis/iam/v1alpha1"
	imagebuilderv1alpha1 "kubeform.dev/provider-aws-api/apis/imagebuilder/v1alpha1"
	inspectorv1alpha1 "kubeform.dev/provider-aws-api/apis/inspector/v1alpha1"
	instancev1alpha1 "kubeform.dev/provider-aws-api/apis/instance/v1alpha1"
	internetv1alpha1 "kubeform.dev/provider-aws-api/apis/internet/v1alpha1"
	iotv1alpha1 "kubeform.dev/provider-aws-api/apis/iot/v1alpha1"
	keyv1alpha1 "kubeform.dev/provider-aws-api/apis/key/v1alpha1"
	kinesisv1alpha1 "kubeform.dev/provider-aws-api/apis/kinesis/v1alpha1"
	kinesisanalyticsv2v1alpha1 "kubeform.dev/provider-aws-api/apis/kinesisanalyticsv2/v1alpha1"
	kmsv1alpha1 "kubeform.dev/provider-aws-api/apis/kms/v1alpha1"
	lakeformationv1alpha1 "kubeform.dev/provider-aws-api/apis/lakeformation/v1alpha1"
	lambdav1alpha1 "kubeform.dev/provider-aws-api/apis/lambda/v1alpha1"
	launchv1alpha1 "kubeform.dev/provider-aws-api/apis/launch/v1alpha1"
	lbv1alpha1 "kubeform.dev/provider-aws-api/apis/lb/v1alpha1"
	lexv1alpha1 "kubeform.dev/provider-aws-api/apis/lex/v1alpha1"
	licensemanagerv1alpha1 "kubeform.dev/provider-aws-api/apis/licensemanager/v1alpha1"
	lightsailv1alpha1 "kubeform.dev/provider-aws-api/apis/lightsail/v1alpha1"
	loadbalancerv1alpha1 "kubeform.dev/provider-aws-api/apis/loadbalancer/v1alpha1"
	maciev1alpha1 "kubeform.dev/provider-aws-api/apis/macie/v1alpha1"
	macie2v1alpha1 "kubeform.dev/provider-aws-api/apis/macie2/v1alpha1"
	mainv1alpha1 "kubeform.dev/provider-aws-api/apis/main/v1alpha1"
	mediav1alpha1 "kubeform.dev/provider-aws-api/apis/media/v1alpha1"
	mqv1alpha1 "kubeform.dev/provider-aws-api/apis/mq/v1alpha1"
	mskv1alpha1 "kubeform.dev/provider-aws-api/apis/msk/v1alpha1"
	mwaav1alpha1 "kubeform.dev/provider-aws-api/apis/mwaa/v1alpha1"
	natv1alpha1 "kubeform.dev/provider-aws-api/apis/nat/v1alpha1"
	neptunev1alpha1 "kubeform.dev/provider-aws-api/apis/neptune/v1alpha1"
	networkv1alpha1 "kubeform.dev/provider-aws-api/apis/network/v1alpha1"
	networkfirewallv1alpha1 "kubeform.dev/provider-aws-api/apis/networkfirewall/v1alpha1"
	opsworksv1alpha1 "kubeform.dev/provider-aws-api/apis/opsworks/v1alpha1"
	organizationsv1alpha1 "kubeform.dev/provider-aws-api/apis/organizations/v1alpha1"
	pinpointv1alpha1 "kubeform.dev/provider-aws-api/apis/pinpoint/v1alpha1"
	placementv1alpha1 "kubeform.dev/provider-aws-api/apis/placement/v1alpha1"
	prometheusv1alpha1 "kubeform.dev/provider-aws-api/apis/prometheus/v1alpha1"
	proxyv1alpha1 "kubeform.dev/provider-aws-api/apis/proxy/v1alpha1"
	qldbv1alpha1 "kubeform.dev/provider-aws-api/apis/qldb/v1alpha1"
	quicksightv1alpha1 "kubeform.dev/provider-aws-api/apis/quicksight/v1alpha1"
	ramv1alpha1 "kubeform.dev/provider-aws-api/apis/ram/v1alpha1"
	rdsv1alpha1 "kubeform.dev/provider-aws-api/apis/rds/v1alpha1"
	redshiftv1alpha1 "kubeform.dev/provider-aws-api/apis/redshift/v1alpha1"
	resourcegroupsv1alpha1 "kubeform.dev/provider-aws-api/apis/resourcegroups/v1alpha1"
	routev1alpha1 "kubeform.dev/provider-aws-api/apis/route/v1alpha1"
	route53v1alpha1 "kubeform.dev/provider-aws-api/apis/route53/v1alpha1"
	s3v1alpha1 "kubeform.dev/provider-aws-api/apis/s3/v1alpha1"
	s3controlv1alpha1 "kubeform.dev/provider-aws-api/apis/s3control/v1alpha1"
	s3outpostsv1alpha1 "kubeform.dev/provider-aws-api/apis/s3outposts/v1alpha1"
	sagemakerv1alpha1 "kubeform.dev/provider-aws-api/apis/sagemaker/v1alpha1"
	schemasv1alpha1 "kubeform.dev/provider-aws-api/apis/schemas/v1alpha1"
	secretsmanagerv1alpha1 "kubeform.dev/provider-aws-api/apis/secretsmanager/v1alpha1"
	securityv1alpha1 "kubeform.dev/provider-aws-api/apis/security/v1alpha1"
	securityhubv1alpha1 "kubeform.dev/provider-aws-api/apis/securityhub/v1alpha1"
	serverlessapplicationrepositoryv1alpha1 "kubeform.dev/provider-aws-api/apis/serverlessapplicationrepository/v1alpha1"
	servicecatalogv1alpha1 "kubeform.dev/provider-aws-api/apis/servicecatalog/v1alpha1"
	servicediscoveryv1alpha1 "kubeform.dev/provider-aws-api/apis/servicediscovery/v1alpha1"
	servicequotasv1alpha1 "kubeform.dev/provider-aws-api/apis/servicequotas/v1alpha1"
	sesv1alpha1 "kubeform.dev/provider-aws-api/apis/ses/v1alpha1"
	sfnv1alpha1 "kubeform.dev/provider-aws-api/apis/sfn/v1alpha1"
	shieldv1alpha1 "kubeform.dev/provider-aws-api/apis/shield/v1alpha1"
	signerv1alpha1 "kubeform.dev/provider-aws-api/apis/signer/v1alpha1"
	simpledbv1alpha1 "kubeform.dev/provider-aws-api/apis/simpledb/v1alpha1"
	snapshotv1alpha1 "kubeform.dev/provider-aws-api/apis/snapshot/v1alpha1"
	snsv1alpha1 "kubeform.dev/provider-aws-api/apis/sns/v1alpha1"
	spotv1alpha1 "kubeform.dev/provider-aws-api/apis/spot/v1alpha1"
	sqsqueuev1alpha1 "kubeform.dev/provider-aws-api/apis/sqsqueue/v1alpha1"
	ssmv1alpha1 "kubeform.dev/provider-aws-api/apis/ssm/v1alpha1"
	ssoadminv1alpha1 "kubeform.dev/provider-aws-api/apis/ssoadmin/v1alpha1"
	storagegatewayv1alpha1 "kubeform.dev/provider-aws-api/apis/storagegateway/v1alpha1"
	subnetv1alpha1 "kubeform.dev/provider-aws-api/apis/subnet/v1alpha1"
	swfv1alpha1 "kubeform.dev/provider-aws-api/apis/swf/v1alpha1"
	syntheticsv1alpha1 "kubeform.dev/provider-aws-api/apis/synthetics/v1alpha1"
	timestreamwritev1alpha1 "kubeform.dev/provider-aws-api/apis/timestreamwrite/v1alpha1"
	transferv1alpha1 "kubeform.dev/provider-aws-api/apis/transfer/v1alpha1"
	volumev1alpha1 "kubeform.dev/provider-aws-api/apis/volume/v1alpha1"
	vpcv1alpha1 "kubeform.dev/provider-aws-api/apis/vpc/v1alpha1"
	vpnv1alpha1 "kubeform.dev/provider-aws-api/apis/vpn/v1alpha1"
	wafv1alpha1 "kubeform.dev/provider-aws-api/apis/waf/v1alpha1"
	wafregionalv1alpha1 "kubeform.dev/provider-aws-api/apis/wafregional/v1alpha1"
	wafv2v1alpha1 "kubeform.dev/provider-aws-api/apis/wafv2/v1alpha1"
	worklinkv1alpha1 "kubeform.dev/provider-aws-api/apis/worklink/v1alpha1"
	workspacesv1alpha1 "kubeform.dev/provider-aws-api/apis/workspaces/v1alpha1"
	xrayv1alpha1 "kubeform.dev/provider-aws-api/apis/xray/v1alpha1"

	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
)

// GenericInformer is type of SharedIndexInformer which will locate and delegate to other
// sharedInformers based on type
type GenericInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() cache.GenericLister
}

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {
	switch resource {
	// Group=accessanalyzer.aws.kubeform.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("analyzers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accessanalyzer().V1alpha1().Analyzers().Informer()}, nil

		// Group=acm.aws.kubeform.com, Version=v1alpha1
	case acmv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Acm().V1alpha1().Certificates().Informer()}, nil
	case acmv1alpha1.SchemeGroupVersion.WithResource("certificatevalidations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Acm().V1alpha1().CertificateValidations().Informer()}, nil

		// Group=acmpca.aws.kubeform.com, Version=v1alpha1
	case acmpcav1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Acmpca().V1alpha1().Certificates().Informer()}, nil
	case acmpcav1alpha1.SchemeGroupVersion.WithResource("certificateauthorities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Acmpca().V1alpha1().CertificateAuthorities().Informer()}, nil
	case acmpcav1alpha1.SchemeGroupVersion.WithResource("certificateauthoritycertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Acmpca().V1alpha1().CertificateAuthorityCertificates().Informer()}, nil

		// Group=alb.aws.kubeform.com, Version=v1alpha1
	case albv1alpha1.SchemeGroupVersion.WithResource("albs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().Albs().Informer()}, nil
	case albv1alpha1.SchemeGroupVersion.WithResource("listeners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().Listeners().Informer()}, nil
	case albv1alpha1.SchemeGroupVersion.WithResource("listenercertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().ListenerCertificates().Informer()}, nil
	case albv1alpha1.SchemeGroupVersion.WithResource("listenerrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().ListenerRules().Informer()}, nil
	case albv1alpha1.SchemeGroupVersion.WithResource("targetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().TargetGroups().Informer()}, nil
	case albv1alpha1.SchemeGroupVersion.WithResource("targetgroupattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alb().V1alpha1().TargetGroupAttachments().Informer()}, nil

		// Group=ami.aws.kubeform.com, Version=v1alpha1
	case amiv1alpha1.SchemeGroupVersion.WithResource("amis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ami().V1alpha1().Amis().Informer()}, nil
	case amiv1alpha1.SchemeGroupVersion.WithResource("copies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ami().V1alpha1().Copies().Informer()}, nil
	case amiv1alpha1.SchemeGroupVersion.WithResource("frominstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ami().V1alpha1().FromInstances().Informer()}, nil
	case amiv1alpha1.SchemeGroupVersion.WithResource("launchpermissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ami().V1alpha1().LaunchPermissions().Informer()}, nil

		// Group=amplify.aws.kubeform.com, Version=v1alpha1
	case amplifyv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amplify().V1alpha1().Apps().Informer()}, nil
	case amplifyv1alpha1.SchemeGroupVersion.WithResource("backendenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amplify().V1alpha1().BackendEnvironments().Informer()}, nil
	case amplifyv1alpha1.SchemeGroupVersion.WithResource("branches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amplify().V1alpha1().Branches().Informer()}, nil
	case amplifyv1alpha1.SchemeGroupVersion.WithResource("domainassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amplify().V1alpha1().DomainAssociations().Informer()}, nil
	case amplifyv1alpha1.SchemeGroupVersion.WithResource("webhooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amplify().V1alpha1().Webhooks().Informer()}, nil

		// Group=apigateway.aws.kubeform.com, Version=v1alpha1
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Accounts().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("apikeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().ApiKeys().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("apigatewayresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().ApigatewayResources().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("authorizers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Authorizers().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("basepathmappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().BasePathMappings().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("clientcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().ClientCertificates().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("deployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Deployments().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("documentationparts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().DocumentationParts().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("documentationversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().DocumentationVersions().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("domainnames"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().DomainNames().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("gatewayresponses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().GatewayResponses().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("integrations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Integrations().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("integrationresponses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().IntegrationResponses().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("methods"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Methods().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("methodresponses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().MethodResponses().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("methodsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().MethodSettingses().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("models"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Models().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("requestvalidators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().RequestValidators().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("restapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().RestAPIs().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("restapipolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().RestAPIPolicies().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("stages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Stages().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("usageplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().UsagePlans().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("usageplankeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().UsagePlanKeys().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("vpclinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().VpcLinks().Informer()}, nil

		// Group=apigatewayv2.aws.kubeform.com, Version=v1alpha1
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("apis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Apis().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("apimappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().ApiMappings().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("authorizers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Authorizers().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("deployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Deployments().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("domainnames"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().DomainNames().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("integrations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Integrations().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("integrationresponses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().IntegrationResponses().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("models"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Models().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Routes().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("routeresponses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().RouteResponses().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("stages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().Stages().Informer()}, nil
	case apigatewayv2v1alpha1.SchemeGroupVersion.WithResource("vpclinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigatewayv2().V1alpha1().VpcLinks().Informer()}, nil

		// Group=app.aws.kubeform.com, Version=v1alpha1
	case appv1alpha1.SchemeGroupVersion.WithResource("cookiestickinesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().CookieStickinessPolicies().Informer()}, nil

		// Group=appautoscaling.aws.kubeform.com, Version=v1alpha1
	case appautoscalingv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appautoscaling().V1alpha1().Policies().Informer()}, nil
	case appautoscalingv1alpha1.SchemeGroupVersion.WithResource("scheduledactions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appautoscaling().V1alpha1().ScheduledActions().Informer()}, nil
	case appautoscalingv1alpha1.SchemeGroupVersion.WithResource("targets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appautoscaling().V1alpha1().Targets().Informer()}, nil

		// Group=appmesh.aws.kubeform.com, Version=v1alpha1
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("gatewayroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().GatewayRoutes().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("meshes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().Meshes().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().Routes().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("virtualgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().VirtualGateways().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("virtualnodes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().VirtualNodes().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("virtualrouters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().VirtualRouters().Informer()}, nil
	case appmeshv1alpha1.SchemeGroupVersion.WithResource("virtualservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appmesh().V1alpha1().VirtualServices().Informer()}, nil

		// Group=apprunner.aws.kubeform.com, Version=v1alpha1
	case apprunnerv1alpha1.SchemeGroupVersion.WithResource("autoscalingconfigurationversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apprunner().V1alpha1().AutoScalingConfigurationVersions().Informer()}, nil
	case apprunnerv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apprunner().V1alpha1().Connections().Informer()}, nil
	case apprunnerv1alpha1.SchemeGroupVersion.WithResource("customdomainassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apprunner().V1alpha1().CustomDomainAssociations().Informer()}, nil
	case apprunnerv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apprunner().V1alpha1().Services().Informer()}, nil

		// Group=appsync.aws.kubeform.com, Version=v1alpha1
	case appsyncv1alpha1.SchemeGroupVersion.WithResource("apikeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appsync().V1alpha1().ApiKeys().Informer()}, nil
	case appsyncv1alpha1.SchemeGroupVersion.WithResource("datasources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appsync().V1alpha1().Datasources().Informer()}, nil
	case appsyncv1alpha1.SchemeGroupVersion.WithResource("functions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appsync().V1alpha1().Functions().Informer()}, nil
	case appsyncv1alpha1.SchemeGroupVersion.WithResource("graphqlapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appsync().V1alpha1().GraphqlAPIs().Informer()}, nil
	case appsyncv1alpha1.SchemeGroupVersion.WithResource("resolvers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appsync().V1alpha1().Resolvers().Informer()}, nil

		// Group=athena.aws.kubeform.com, Version=v1alpha1
	case athenav1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Athena().V1alpha1().Databases().Informer()}, nil
	case athenav1alpha1.SchemeGroupVersion.WithResource("namedqueries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Athena().V1alpha1().NamedQueries().Informer()}, nil
	case athenav1alpha1.SchemeGroupVersion.WithResource("workgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Athena().V1alpha1().Workgroups().Informer()}, nil

		// Group=autoscaling.aws.kubeform.com, Version=v1alpha1
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().Attachments().Informer()}, nil
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().Groups().Informer()}, nil
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("lifecyclehooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().LifecycleHooks().Informer()}, nil
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("notifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().Notifications().Informer()}, nil
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().Policies().Informer()}, nil
	case autoscalingv1alpha1.SchemeGroupVersion.WithResource("schedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscaling().V1alpha1().Schedules().Informer()}, nil

		// Group=autoscalingplans.aws.kubeform.com, Version=v1alpha1
	case autoscalingplansv1alpha1.SchemeGroupVersion.WithResource("scalingplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Autoscalingplans().V1alpha1().ScalingPlans().Informer()}, nil

		// Group=backup.aws.kubeform.com, Version=v1alpha1
	case backupv1alpha1.SchemeGroupVersion.WithResource("globalsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().GlobalSettingses().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("plans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().Plans().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("regionsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().RegionSettingses().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("selections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().Selections().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("vaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().Vaults().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("vaultnotificationses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().VaultNotificationses().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("vaultpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().VaultPolicies().Informer()}, nil

		// Group=batch.aws.kubeform.com, Version=v1alpha1
	case batchv1alpha1.SchemeGroupVersion.WithResource("computeenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().ComputeEnvironments().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("jobdefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().JobDefinitions().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("jobqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().JobQueues().Informer()}, nil

		// Group=budgets.aws.kubeform.com, Version=v1alpha1
	case budgetsv1alpha1.SchemeGroupVersion.WithResource("budgets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Budgets().V1alpha1().Budgets().Informer()}, nil
	case budgetsv1alpha1.SchemeGroupVersion.WithResource("budgetactions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Budgets().V1alpha1().BudgetActions().Informer()}, nil

		// Group=cloud9.aws.kubeform.com, Version=v1alpha1
	case cloud9v1alpha1.SchemeGroupVersion.WithResource("environmentec2s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud9().V1alpha1().EnvironmentEc2s().Informer()}, nil

		// Group=cloudformationstack.aws.kubeform.com, Version=v1alpha1
	case cloudformationstackv1alpha1.SchemeGroupVersion.WithResource("cloudformationstacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudformationstack().V1alpha1().CloudformationStacks().Informer()}, nil
	case cloudformationstackv1alpha1.SchemeGroupVersion.WithResource("sets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudformationstack().V1alpha1().Sets().Informer()}, nil
	case cloudformationstackv1alpha1.SchemeGroupVersion.WithResource("setinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudformationstack().V1alpha1().SetInstances().Informer()}, nil

		// Group=cloudformationtype.aws.kubeform.com, Version=v1alpha1
	case cloudformationtypev1alpha1.SchemeGroupVersion.WithResource("cloudformationtypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudformationtype().V1alpha1().CloudformationTypes().Informer()}, nil

		// Group=cloudfront.aws.kubeform.com, Version=v1alpha1
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("cachepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().CachePolicies().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("distributions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().Distributions().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("functions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().Functions().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("keygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().KeyGroups().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("originaccessidentities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().OriginAccessIdentities().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("originrequestpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().OriginRequestPolicies().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("publickeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().PublicKeys().Informer()}, nil
	case cloudfrontv1alpha1.SchemeGroupVersion.WithResource("realtimelogconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfront().V1alpha1().RealtimeLogConfigs().Informer()}, nil

		// Group=cloudhsmv2.aws.kubeform.com, Version=v1alpha1
	case cloudhsmv2v1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudhsmv2().V1alpha1().Clusters().Informer()}, nil
	case cloudhsmv2v1alpha1.SchemeGroupVersion.WithResource("hsms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudhsmv2().V1alpha1().Hsms().Informer()}, nil

		// Group=cloudtrail.aws.kubeform.com, Version=v1alpha1
	case cloudtrailv1alpha1.SchemeGroupVersion.WithResource("cloudtrails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudtrail().V1alpha1().Cloudtrails().Informer()}, nil

		// Group=cloudwatch.aws.kubeform.com, Version=v1alpha1
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("compositealarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().CompositeAlarms().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("dashboards"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().Dashboards().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventapidestinations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventAPIDestinations().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventarchives"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventArchives().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventbuses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventBuses().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventbuspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventBusPolicies().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventConnections().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventpermissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventPermissions().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventRules().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("eventtargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().EventTargets().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logdestinations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogDestinations().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logdestinationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogDestinationPolicies().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("loggroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogGroups().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logmetricfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogMetricFilters().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logresourcepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogResourcePolicies().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logstreams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogStreams().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("logsubscriptionfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().LogSubscriptionFilters().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("metricalarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().MetricAlarms().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("metricstreams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().MetricStreams().Informer()}, nil
	case cloudwatchv1alpha1.SchemeGroupVersion.WithResource("querydefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudwatch().V1alpha1().QueryDefinitions().Informer()}, nil

		// Group=codeartifact.aws.kubeform.com, Version=v1alpha1
	case codeartifactv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codeartifact().V1alpha1().Domains().Informer()}, nil
	case codeartifactv1alpha1.SchemeGroupVersion.WithResource("domainpermissionspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codeartifact().V1alpha1().DomainPermissionsPolicies().Informer()}, nil
	case codeartifactv1alpha1.SchemeGroupVersion.WithResource("repositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codeartifact().V1alpha1().Repositories().Informer()}, nil
	case codeartifactv1alpha1.SchemeGroupVersion.WithResource("repositorypermissionspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codeartifact().V1alpha1().RepositoryPermissionsPolicies().Informer()}, nil

		// Group=codebuild.aws.kubeform.com, Version=v1alpha1
	case codebuildv1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codebuild().V1alpha1().Projects().Informer()}, nil
	case codebuildv1alpha1.SchemeGroupVersion.WithResource("reportgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codebuild().V1alpha1().ReportGroups().Informer()}, nil
	case codebuildv1alpha1.SchemeGroupVersion.WithResource("sourcecredentials"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codebuild().V1alpha1().SourceCredentials().Informer()}, nil
	case codebuildv1alpha1.SchemeGroupVersion.WithResource("webhooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codebuild().V1alpha1().Webhooks().Informer()}, nil

		// Group=codecommit.aws.kubeform.com, Version=v1alpha1
	case codecommitv1alpha1.SchemeGroupVersion.WithResource("repositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codecommit().V1alpha1().Repositories().Informer()}, nil
	case codecommitv1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codecommit().V1alpha1().Triggers().Informer()}, nil

		// Group=codedeploy.aws.kubeform.com, Version=v1alpha1
	case codedeployv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codedeploy().V1alpha1().Apps().Informer()}, nil
	case codedeployv1alpha1.SchemeGroupVersion.WithResource("deploymentconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codedeploy().V1alpha1().DeploymentConfigs().Informer()}, nil
	case codedeployv1alpha1.SchemeGroupVersion.WithResource("deploymentgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codedeploy().V1alpha1().DeploymentGroups().Informer()}, nil

		// Group=codepipeline.aws.kubeform.com, Version=v1alpha1
	case codepipelinev1alpha1.SchemeGroupVersion.WithResource("codepipelines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codepipeline().V1alpha1().Codepipelines().Informer()}, nil
	case codepipelinev1alpha1.SchemeGroupVersion.WithResource("webhooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codepipeline().V1alpha1().Webhooks().Informer()}, nil

		// Group=codestarconnections.aws.kubeform.com, Version=v1alpha1
	case codestarconnectionsv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codestarconnections().V1alpha1().Connections().Informer()}, nil
	case codestarconnectionsv1alpha1.SchemeGroupVersion.WithResource("hosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codestarconnections().V1alpha1().Hosts().Informer()}, nil

		// Group=codestarnotifications.aws.kubeform.com, Version=v1alpha1
	case codestarnotificationsv1alpha1.SchemeGroupVersion.WithResource("notificationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Codestarnotifications().V1alpha1().NotificationRules().Informer()}, nil

		// Group=cognito.aws.kubeform.com, Version=v1alpha1
	case cognitov1alpha1.SchemeGroupVersion.WithResource("identitypools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().IdentityPools().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("identitypoolrolesattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().IdentityPoolRolesAttachments().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("identityproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().IdentityProviders().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("resourceservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().ResourceServers().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("usergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().UserGroups().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("userpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().UserPools().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("userpoolclients"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().UserPoolClients().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("userpooldomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().UserPoolDomains().Informer()}, nil
	case cognitov1alpha1.SchemeGroupVersion.WithResource("userpooluicustomizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognito().V1alpha1().UserPoolUiCustomizations().Informer()}, nil

		// Group=config.aws.kubeform.com, Version=v1alpha1
	case configv1alpha1.SchemeGroupVersion.WithResource("aggregateauthorizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().AggregateAuthorizations().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("configrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConfigRules().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("configurationaggregators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConfigurationAggregators().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("configurationrecorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConfigurationRecorders().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("configurationrecorderstatus_s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConfigurationRecorderStatus_s().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("conformancepacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConformancePacks().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("deliverychannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().DeliveryChannels().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("organizationcustomrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().OrganizationCustomRules().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("organizationmanagedrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().OrganizationManagedRules().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("remediationconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().RemediationConfigurations().Informer()}, nil

		// Group=cur.aws.kubeform.com, Version=v1alpha1
	case curv1alpha1.SchemeGroupVersion.WithResource("reportdefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cur().V1alpha1().ReportDefinitions().Informer()}, nil

		// Group=customer.aws.kubeform.com, Version=v1alpha1
	case customerv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Customer().V1alpha1().Gateways().Informer()}, nil

		// Group=datapipeline.aws.kubeform.com, Version=v1alpha1
	case datapipelinev1alpha1.SchemeGroupVersion.WithResource("pipelines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datapipeline().V1alpha1().Pipelines().Informer()}, nil

		// Group=datasync.aws.kubeform.com, Version=v1alpha1
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("agents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().Agents().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("locationefses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().LocationEfses().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("locationfsxwindowsfilesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().LocationFsxWindowsFileSystems().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("locationnfses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().LocationNfses().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("locations3s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().LocationS3s().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("locationsmbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().LocationSmbs().Informer()}, nil
	case datasyncv1alpha1.SchemeGroupVersion.WithResource("tasks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datasync().V1alpha1().Tasks().Informer()}, nil

		// Group=dax.aws.kubeform.com, Version=v1alpha1
	case daxv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dax().V1alpha1().Clusters().Informer()}, nil
	case daxv1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dax().V1alpha1().ParameterGroups().Informer()}, nil
	case daxv1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dax().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=db.aws.kubeform.com, Version=v1alpha1
	case dbv1alpha1.SchemeGroupVersion.WithResource("clustersnapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ClusterSnapshots().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("eventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().EventSubscriptions().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Instances().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("instanceroleassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().InstanceRoleAssociations().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("optiongroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().OptionGroups().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ParameterGroups().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("proxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Proxies().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("proxydefaulttargetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ProxyDefaultTargetGroups().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("proxyendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ProxyEndpoints().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("proxytargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ProxyTargets().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().SecurityGroups().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Snapshots().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=default.aws.kubeform.com, Version=v1alpha1
	case defaultv1alpha1.SchemeGroupVersion.WithResource("networkacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().NetworkACLs().Informer()}, nil
	case defaultv1alpha1.SchemeGroupVersion.WithResource("routetables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().RouteTables().Informer()}, nil
	case defaultv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().SecurityGroups().Informer()}, nil
	case defaultv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().Subnets().Informer()}, nil
	case defaultv1alpha1.SchemeGroupVersion.WithResource("vpcs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().Vpcs().Informer()}, nil
	case defaultv1alpha1.SchemeGroupVersion.WithResource("vpcdhcpoptionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Default().V1alpha1().VpcDHCPOptionses().Informer()}, nil

		// Group=devicefarm.aws.kubeform.com, Version=v1alpha1
	case devicefarmv1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devicefarm().V1alpha1().Projects().Informer()}, nil

		// Group=directoryservice.aws.kubeform.com, Version=v1alpha1
	case directoryservicev1alpha1.SchemeGroupVersion.WithResource("conditionalforwarders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Directoryservice().V1alpha1().ConditionalForwarders().Informer()}, nil
	case directoryservicev1alpha1.SchemeGroupVersion.WithResource("directories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Directoryservice().V1alpha1().Directories().Informer()}, nil
	case directoryservicev1alpha1.SchemeGroupVersion.WithResource("logsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Directoryservice().V1alpha1().LogSubscriptions().Informer()}, nil

		// Group=dlm.aws.kubeform.com, Version=v1alpha1
	case dlmv1alpha1.SchemeGroupVersion.WithResource("lifecyclepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dlm().V1alpha1().LifecyclePolicies().Informer()}, nil

		// Group=dms.aws.kubeform.com, Version=v1alpha1
	case dmsv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().Certificates().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().Endpoints().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("eventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().EventSubscriptions().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("replicationinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().ReplicationInstances().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("replicationsubnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().ReplicationSubnetGroups().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("replicationtasks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().ReplicationTasks().Informer()}, nil

		// Group=docdb.aws.kubeform.com, Version=v1alpha1
	case docdbv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Docdb().V1alpha1().Clusters().Informer()}, nil
	case docdbv1alpha1.SchemeGroupVersion.WithResource("clusterinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Docdb().V1alpha1().ClusterInstances().Informer()}, nil
	case docdbv1alpha1.SchemeGroupVersion.WithResource("clusterparametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Docdb().V1alpha1().ClusterParameterGroups().Informer()}, nil
	case docdbv1alpha1.SchemeGroupVersion.WithResource("clustersnapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Docdb().V1alpha1().ClusterSnapshots().Informer()}, nil
	case docdbv1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Docdb().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=dx.aws.kubeform.com, Version=v1alpha1
	case dxv1alpha1.SchemeGroupVersion.WithResource("bgppeers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().BgpPeers().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().Connections().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("connectionassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().ConnectionAssociations().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().Gateways().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("gatewayassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().GatewayAssociations().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("gatewayassociationproposals"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().GatewayAssociationProposals().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedprivatevirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedPrivateVirtualInterfaces().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedprivatevirtualinterfaceaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedPrivateVirtualInterfaceAccepters().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedpublicvirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedPublicVirtualInterfaces().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedpublicvirtualinterfaceaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedPublicVirtualInterfaceAccepters().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedtransitvirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedTransitVirtualInterfaces().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("hostedtransitvirtualinterfaceaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().HostedTransitVirtualInterfaceAccepters().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("lags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().Lags().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("privatevirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().PrivateVirtualInterfaces().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("publicvirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().PublicVirtualInterfaces().Informer()}, nil
	case dxv1alpha1.SchemeGroupVersion.WithResource("transitvirtualinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dx().V1alpha1().TransitVirtualInterfaces().Informer()}, nil

		// Group=dynamodb.aws.kubeform.com, Version=v1alpha1
	case dynamodbv1alpha1.SchemeGroupVersion.WithResource("globaltables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dynamodb().V1alpha1().GlobalTables().Informer()}, nil
	case dynamodbv1alpha1.SchemeGroupVersion.WithResource("kinesisstreamingdestinations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dynamodb().V1alpha1().KinesisStreamingDestinations().Informer()}, nil
	case dynamodbv1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dynamodb().V1alpha1().Tables().Informer()}, nil
	case dynamodbv1alpha1.SchemeGroupVersion.WithResource("tableitems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dynamodb().V1alpha1().TableItems().Informer()}, nil

		// Group=ebs.aws.kubeform.com, Version=v1alpha1
	case ebsv1alpha1.SchemeGroupVersion.WithResource("defaultkmskeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ebs().V1alpha1().DefaultKmsKeys().Informer()}, nil
	case ebsv1alpha1.SchemeGroupVersion.WithResource("encryptionbydefaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ebs().V1alpha1().EncryptionByDefaults().Informer()}, nil
	case ebsv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ebs().V1alpha1().Snapshots().Informer()}, nil
	case ebsv1alpha1.SchemeGroupVersion.WithResource("snapshotcopies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ebs().V1alpha1().SnapshotCopies().Informer()}, nil
	case ebsv1alpha1.SchemeGroupVersion.WithResource("volumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ebs().V1alpha1().Volumes().Informer()}, nil

		// Group=ec2.aws.kubeform.com, Version=v1alpha1
	case ec2v1alpha1.SchemeGroupVersion.WithResource("availabilityzonegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().AvailabilityZoneGroups().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("capacityreservations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().CapacityReservations().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("carriergateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().CarrierGateways().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("clientvpnauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().ClientVPNAuthorizationRules().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("clientvpnendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().ClientVPNEndpoints().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("clientvpnnetworkassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().ClientVPNNetworkAssociations().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("clientvpnroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().ClientVPNRoutes().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("fleets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().Fleets().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("localgatewayroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().LocalGatewayRoutes().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("localgatewayroutetablevpcassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().LocalGatewayRouteTableVpcAssociations().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("managedprefixlists"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().ManagedPrefixLists().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("tags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().Tags().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("trafficmirrorfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TrafficMirrorFilters().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("trafficmirrorfilterrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TrafficMirrorFilterRules().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("trafficmirrorsessions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TrafficMirrorSessions().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("trafficmirrortargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TrafficMirrorTargets().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGateways().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewaypeeringattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayPeeringAttachments().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewaypeeringattachmentaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayPeeringAttachmentAccepters().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayprefixlistreferences"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayPrefixListReferences().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayRoutes().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayroutetables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayRouteTables().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayroutetableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayRouteTableAssociations().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayroutetablepropagations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayRouteTablePropagations().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayvpcattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayVpcAttachments().Informer()}, nil
	case ec2v1alpha1.SchemeGroupVersion.WithResource("transitgatewayvpcattachmentaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ec2().V1alpha1().TransitGatewayVpcAttachmentAccepters().Informer()}, nil

		// Group=ecr.aws.kubeform.com, Version=v1alpha1
	case ecrv1alpha1.SchemeGroupVersion.WithResource("lifecyclepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecr().V1alpha1().LifecyclePolicies().Informer()}, nil
	case ecrv1alpha1.SchemeGroupVersion.WithResource("registrypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecr().V1alpha1().RegistryPolicies().Informer()}, nil
	case ecrv1alpha1.SchemeGroupVersion.WithResource("replicationconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecr().V1alpha1().ReplicationConfigurations().Informer()}, nil
	case ecrv1alpha1.SchemeGroupVersion.WithResource("repositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecr().V1alpha1().Repositories().Informer()}, nil
	case ecrv1alpha1.SchemeGroupVersion.WithResource("repositorypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecr().V1alpha1().RepositoryPolicies().Informer()}, nil

		// Group=ecrpublic.aws.kubeform.com, Version=v1alpha1
	case ecrpublicv1alpha1.SchemeGroupVersion.WithResource("repositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecrpublic().V1alpha1().Repositories().Informer()}, nil

		// Group=ecs.aws.kubeform.com, Version=v1alpha1
	case ecsv1alpha1.SchemeGroupVersion.WithResource("capacityproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().CapacityProviders().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().Clusters().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().Services().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("taskdefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().TaskDefinitions().Informer()}, nil

		// Group=efs.aws.kubeform.com, Version=v1alpha1
	case efsv1alpha1.SchemeGroupVersion.WithResource("accesspoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Efs().V1alpha1().AccessPoints().Informer()}, nil
	case efsv1alpha1.SchemeGroupVersion.WithResource("backuppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Efs().V1alpha1().BackupPolicies().Informer()}, nil
	case efsv1alpha1.SchemeGroupVersion.WithResource("filesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Efs().V1alpha1().FileSystems().Informer()}, nil
	case efsv1alpha1.SchemeGroupVersion.WithResource("filesystempolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Efs().V1alpha1().FileSystemPolicies().Informer()}, nil
	case efsv1alpha1.SchemeGroupVersion.WithResource("mounttargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Efs().V1alpha1().MountTargets().Informer()}, nil

		// Group=egress.aws.kubeform.com, Version=v1alpha1
	case egressv1alpha1.SchemeGroupVersion.WithResource("onlyinternetgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Egress().V1alpha1().OnlyInternetGateways().Informer()}, nil

		// Group=eip.aws.kubeform.com, Version=v1alpha1
	case eipv1alpha1.SchemeGroupVersion.WithResource("associations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eip().V1alpha1().Associations().Informer()}, nil
	case eipv1alpha1.SchemeGroupVersion.WithResource("eips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eip().V1alpha1().Eips().Informer()}, nil

		// Group=eks.aws.kubeform.com, Version=v1alpha1
	case eksv1alpha1.SchemeGroupVersion.WithResource("addons"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eks().V1alpha1().Addons().Informer()}, nil
	case eksv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eks().V1alpha1().Clusters().Informer()}, nil
	case eksv1alpha1.SchemeGroupVersion.WithResource("fargateprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eks().V1alpha1().FargateProfiles().Informer()}, nil
	case eksv1alpha1.SchemeGroupVersion.WithResource("nodegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eks().V1alpha1().NodeGroups().Informer()}, nil

		// Group=elasticache.aws.kubeform.com, Version=v1alpha1
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().Clusters().Informer()}, nil
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("globalreplicationgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().GlobalReplicationGroups().Informer()}, nil
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().ParameterGroups().Informer()}, nil
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("replicationgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().ReplicationGroups().Informer()}, nil
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().SecurityGroups().Informer()}, nil
	case elasticachev1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticache().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=elasticbeanstalk.aws.kubeform.com, Version=v1alpha1
	case elasticbeanstalkv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticbeanstalk().V1alpha1().Applications().Informer()}, nil
	case elasticbeanstalkv1alpha1.SchemeGroupVersion.WithResource("applicationversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticbeanstalk().V1alpha1().ApplicationVersions().Informer()}, nil
	case elasticbeanstalkv1alpha1.SchemeGroupVersion.WithResource("configurationtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticbeanstalk().V1alpha1().ConfigurationTemplates().Informer()}, nil
	case elasticbeanstalkv1alpha1.SchemeGroupVersion.WithResource("environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticbeanstalk().V1alpha1().Environments().Informer()}, nil

		// Group=elasticsearchdomain.aws.kubeform.com, Version=v1alpha1
	case elasticsearchdomainv1alpha1.SchemeGroupVersion.WithResource("elasticsearchdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticsearchdomain().V1alpha1().ElasticsearchDomains().Informer()}, nil
	case elasticsearchdomainv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticsearchdomain().V1alpha1().Policies().Informer()}, nil
	case elasticsearchdomainv1alpha1.SchemeGroupVersion.WithResource("samloptionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticsearchdomain().V1alpha1().SamlOptionses().Informer()}, nil

		// Group=elastictranscoder.aws.kubeform.com, Version=v1alpha1
	case elastictranscoderv1alpha1.SchemeGroupVersion.WithResource("pipelines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elastictranscoder().V1alpha1().Pipelines().Informer()}, nil
	case elastictranscoderv1alpha1.SchemeGroupVersion.WithResource("presets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elastictranscoder().V1alpha1().Presets().Informer()}, nil

		// Group=elb.aws.kubeform.com, Version=v1alpha1
	case elbv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elb().V1alpha1().Attachments().Informer()}, nil
	case elbv1alpha1.SchemeGroupVersion.WithResource("elbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elb().V1alpha1().Elbs().Informer()}, nil

		// Group=emr.aws.kubeform.com, Version=v1alpha1
	case emrv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().Clusters().Informer()}, nil
	case emrv1alpha1.SchemeGroupVersion.WithResource("instancefleets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().InstanceFleets().Informer()}, nil
	case emrv1alpha1.SchemeGroupVersion.WithResource("instancegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().InstanceGroups().Informer()}, nil
	case emrv1alpha1.SchemeGroupVersion.WithResource("managedscalingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().ManagedScalingPolicies().Informer()}, nil
	case emrv1alpha1.SchemeGroupVersion.WithResource("securityconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().SecurityConfigurations().Informer()}, nil

		// Group=flow.aws.kubeform.com, Version=v1alpha1
	case flowv1alpha1.SchemeGroupVersion.WithResource("logs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Flow().V1alpha1().Logs().Informer()}, nil

		// Group=fms.aws.kubeform.com, Version=v1alpha1
	case fmsv1alpha1.SchemeGroupVersion.WithResource("adminaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fms().V1alpha1().AdminAccounts().Informer()}, nil
	case fmsv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fms().V1alpha1().Policies().Informer()}, nil

		// Group=fsx.aws.kubeform.com, Version=v1alpha1
	case fsxv1alpha1.SchemeGroupVersion.WithResource("lustrefilesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fsx().V1alpha1().LustreFileSystems().Informer()}, nil
	case fsxv1alpha1.SchemeGroupVersion.WithResource("windowsfilesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fsx().V1alpha1().WindowsFileSystems().Informer()}, nil

		// Group=gamelift.aws.kubeform.com, Version=v1alpha1
	case gameliftv1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gamelift().V1alpha1().Aliases().Informer()}, nil
	case gameliftv1alpha1.SchemeGroupVersion.WithResource("builds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gamelift().V1alpha1().Builds().Informer()}, nil
	case gameliftv1alpha1.SchemeGroupVersion.WithResource("fleets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gamelift().V1alpha1().Fleets().Informer()}, nil
	case gameliftv1alpha1.SchemeGroupVersion.WithResource("gamesessionqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gamelift().V1alpha1().GameSessionQueues().Informer()}, nil

		// Group=glaciervault.aws.kubeform.com, Version=v1alpha1
	case glaciervaultv1alpha1.SchemeGroupVersion.WithResource("glaciervaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glaciervault().V1alpha1().GlacierVaults().Informer()}, nil
	case glaciervaultv1alpha1.SchemeGroupVersion.WithResource("locks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glaciervault().V1alpha1().Locks().Informer()}, nil

		// Group=globalaccelerator.aws.kubeform.com, Version=v1alpha1
	case globalacceleratorv1alpha1.SchemeGroupVersion.WithResource("accelerators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Globalaccelerator().V1alpha1().Accelerators().Informer()}, nil
	case globalacceleratorv1alpha1.SchemeGroupVersion.WithResource("endpointgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Globalaccelerator().V1alpha1().EndpointGroups().Informer()}, nil
	case globalacceleratorv1alpha1.SchemeGroupVersion.WithResource("listeners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Globalaccelerator().V1alpha1().Listeners().Informer()}, nil

		// Group=glue.aws.kubeform.com, Version=v1alpha1
	case gluev1alpha1.SchemeGroupVersion.WithResource("catalogdatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().CatalogDatabases().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("catalogtables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().CatalogTables().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("classifiers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Classifiers().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Connections().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("crawlers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Crawlers().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("datacatalogencryptionsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().DataCatalogEncryptionSettingses().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("devendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().DevEndpoints().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Jobs().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("mltransforms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().MlTransforms().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("partitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Partitions().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("registries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Registries().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("resourcepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().ResourcePolicies().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("schemas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Schemas().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("securityconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().SecurityConfigurations().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Triggers().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("userdefinedfunctions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().UserDefinedFunctions().Informer()}, nil
	case gluev1alpha1.SchemeGroupVersion.WithResource("workflows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Glue().V1alpha1().Workflows().Informer()}, nil

		// Group=guardduty.aws.kubeform.com, Version=v1alpha1
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("detectors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().Detectors().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("filters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().Filters().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("inviteaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().InviteAccepters().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("ipsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().Ipsets().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("members"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().Members().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("organizationadminaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().OrganizationAdminAccounts().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("organizationconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().OrganizationConfigurations().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("publishingdestinations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().PublishingDestinations().Informer()}, nil
	case guarddutyv1alpha1.SchemeGroupVersion.WithResource("threatintelsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Guardduty().V1alpha1().Threatintelsets().Informer()}, nil

		// Group=iam.aws.kubeform.com, Version=v1alpha1
	case iamv1alpha1.SchemeGroupVersion.WithResource("accesskeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccessKeys().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accountaliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccountAliases().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accountpasswordpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccountPasswordPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().Groups().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("groupmemberships"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().GroupMemberships().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("grouppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().GroupPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("grouppolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().GroupPolicyAttachments().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("instanceprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().InstanceProfiles().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("openidconnectproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().OpenidConnectProviders().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().Policies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("policyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().PolicyAttachments().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("roles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().Roles().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("rolepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().RolePolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("rolepolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().RolePolicyAttachments().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("samlproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().SamlProviders().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("servercertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ServerCertificates().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("servicelinkedroles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ServiceLinkedRoles().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().Users().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("usergroupmemberships"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserGroupMemberships().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("userloginprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserLoginProfiles().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("userpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("userpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserPolicyAttachments().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("usersshkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserSSHKeys().Informer()}, nil

		// Group=imagebuilder.aws.kubeform.com, Version=v1alpha1
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("components"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().Components().Informer()}, nil
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("distributionconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().DistributionConfigurations().Informer()}, nil
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().Images().Informer()}, nil
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("imagepipelines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().ImagePipelines().Informer()}, nil
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("imagerecipes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().ImageRecipes().Informer()}, nil
	case imagebuilderv1alpha1.SchemeGroupVersion.WithResource("infrastructureconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Imagebuilder().V1alpha1().InfrastructureConfigurations().Informer()}, nil

		// Group=inspector.aws.kubeform.com, Version=v1alpha1
	case inspectorv1alpha1.SchemeGroupVersion.WithResource("assessmenttargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Inspector().V1alpha1().AssessmentTargets().Informer()}, nil
	case inspectorv1alpha1.SchemeGroupVersion.WithResource("assessmenttemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Inspector().V1alpha1().AssessmentTemplates().Informer()}, nil
	case inspectorv1alpha1.SchemeGroupVersion.WithResource("resourcegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Inspector().V1alpha1().ResourceGroups().Informer()}, nil

		// Group=instance.aws.kubeform.com, Version=v1alpha1
	case instancev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Instance().V1alpha1().Instances().Informer()}, nil

		// Group=internet.aws.kubeform.com, Version=v1alpha1
	case internetv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Internet().V1alpha1().Gateways().Informer()}, nil

		// Group=iot.aws.kubeform.com, Version=v1alpha1
	case iotv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().Certificates().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().Policies().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("policyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().PolicyAttachments().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("rolealiases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().RoleAliases().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("things"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().Things().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("thingprincipalattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().ThingPrincipalAttachments().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("thingtypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().ThingTypes().Informer()}, nil
	case iotv1alpha1.SchemeGroupVersion.WithResource("topicrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iot().V1alpha1().TopicRules().Informer()}, nil

		// Group=key.aws.kubeform.com, Version=v1alpha1
	case keyv1alpha1.SchemeGroupVersion.WithResource("pairs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Key().V1alpha1().Pairs().Informer()}, nil

		// Group=kinesis.aws.kubeform.com, Version=v1alpha1
	case kinesisv1alpha1.SchemeGroupVersion.WithResource("analyticsapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesis().V1alpha1().AnalyticsApplications().Informer()}, nil
	case kinesisv1alpha1.SchemeGroupVersion.WithResource("firehosedeliverystreams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesis().V1alpha1().FirehoseDeliveryStreams().Informer()}, nil
	case kinesisv1alpha1.SchemeGroupVersion.WithResource("streams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesis().V1alpha1().Streams().Informer()}, nil
	case kinesisv1alpha1.SchemeGroupVersion.WithResource("streamconsumers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesis().V1alpha1().StreamConsumers().Informer()}, nil
	case kinesisv1alpha1.SchemeGroupVersion.WithResource("videostreams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesis().V1alpha1().VideoStreams().Informer()}, nil

		// Group=kinesisanalyticsv2.aws.kubeform.com, Version=v1alpha1
	case kinesisanalyticsv2v1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesisanalyticsv2().V1alpha1().Applications().Informer()}, nil
	case kinesisanalyticsv2v1alpha1.SchemeGroupVersion.WithResource("applicationsnapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kinesisanalyticsv2().V1alpha1().ApplicationSnapshots().Informer()}, nil

		// Group=kms.aws.kubeform.com, Version=v1alpha1
	case kmsv1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Aliases().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("ciphertexts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Ciphertexts().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("externalkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().ExternalKeys().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("grants"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Grants().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Keys().Informer()}, nil

		// Group=lakeformation.aws.kubeform.com, Version=v1alpha1
	case lakeformationv1alpha1.SchemeGroupVersion.WithResource("datalakesettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lakeformation().V1alpha1().DataLakeSettingses().Informer()}, nil
	case lakeformationv1alpha1.SchemeGroupVersion.WithResource("lakeformationresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lakeformation().V1alpha1().LakeformationResources().Informer()}, nil
	case lakeformationv1alpha1.SchemeGroupVersion.WithResource("permissionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lakeformation().V1alpha1().Permissionses().Informer()}, nil

		// Group=lambda.aws.kubeform.com, Version=v1alpha1
	case lambdav1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().Aliases().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("codesigningconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().CodeSigningConfigs().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("eventsourcemappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().EventSourceMappings().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("functions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().Functions().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("functioneventinvokeconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().FunctionEventInvokeConfigs().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("layerversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().LayerVersions().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("permissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().Permissions().Informer()}, nil
	case lambdav1alpha1.SchemeGroupVersion.WithResource("provisionedconcurrencyconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lambda().V1alpha1().ProvisionedConcurrencyConfigs().Informer()}, nil

		// Group=launch.aws.kubeform.com, Version=v1alpha1
	case launchv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Launch().V1alpha1().Configurations().Informer()}, nil
	case launchv1alpha1.SchemeGroupVersion.WithResource("templates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Launch().V1alpha1().Templates().Informer()}, nil

		// Group=lb.aws.kubeform.com, Version=v1alpha1
	case lbv1alpha1.SchemeGroupVersion.WithResource("cookiestickinesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().CookieStickinessPolicies().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("lbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Lbs().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("listeners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Listeners().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("listenercertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().ListenerCertificates().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("listenerrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().ListenerRules().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("sslnegotiationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().SslNegotiationPolicies().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("targetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().TargetGroups().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("targetgroupattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().TargetGroupAttachments().Informer()}, nil

		// Group=lex.aws.kubeform.com, Version=v1alpha1
	case lexv1alpha1.SchemeGroupVersion.WithResource("bots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lex().V1alpha1().Bots().Informer()}, nil
	case lexv1alpha1.SchemeGroupVersion.WithResource("botaliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lex().V1alpha1().BotAliases().Informer()}, nil
	case lexv1alpha1.SchemeGroupVersion.WithResource("intents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lex().V1alpha1().Intents().Informer()}, nil
	case lexv1alpha1.SchemeGroupVersion.WithResource("slottypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lex().V1alpha1().SlotTypes().Informer()}, nil

		// Group=licensemanager.aws.kubeform.com, Version=v1alpha1
	case licensemanagerv1alpha1.SchemeGroupVersion.WithResource("associations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Licensemanager().V1alpha1().Associations().Informer()}, nil
	case licensemanagerv1alpha1.SchemeGroupVersion.WithResource("licenseconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Licensemanager().V1alpha1().LicenseConfigurations().Informer()}, nil

		// Group=lightsail.aws.kubeform.com, Version=v1alpha1
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().Domains().Informer()}, nil
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().Instances().Informer()}, nil
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("instancepublicportses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().InstancePublicPortses().Informer()}, nil
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("keypairs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().KeyPairs().Informer()}, nil
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("staticips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().StaticIPs().Informer()}, nil
	case lightsailv1alpha1.SchemeGroupVersion.WithResource("staticipattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lightsail().V1alpha1().StaticIPAttachments().Informer()}, nil

		// Group=loadbalancer.aws.kubeform.com, Version=v1alpha1
	case loadbalancerv1alpha1.SchemeGroupVersion.WithResource("backendserverpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loadbalancer().V1alpha1().BackendServerPolicies().Informer()}, nil
	case loadbalancerv1alpha1.SchemeGroupVersion.WithResource("listenerpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loadbalancer().V1alpha1().ListenerPolicies().Informer()}, nil
	case loadbalancerv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loadbalancer().V1alpha1().Policies().Informer()}, nil

		// Group=macie.aws.kubeform.com, Version=v1alpha1
	case maciev1alpha1.SchemeGroupVersion.WithResource("memberaccountassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie().V1alpha1().MemberAccountAssociations().Informer()}, nil
	case maciev1alpha1.SchemeGroupVersion.WithResource("s3bucketassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie().V1alpha1().S3BucketAssociations().Informer()}, nil

		// Group=macie2.aws.kubeform.com, Version=v1alpha1
	case macie2v1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().Accounts().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("classificationjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().ClassificationJobs().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("customdataidentifiers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().CustomDataIdentifiers().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("findingsfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().FindingsFilters().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("invitationaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().InvitationAccepters().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("members"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().Members().Informer()}, nil
	case macie2v1alpha1.SchemeGroupVersion.WithResource("organizationadminaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Macie2().V1alpha1().OrganizationAdminAccounts().Informer()}, nil

		// Group=main.aws.kubeform.com, Version=v1alpha1
	case mainv1alpha1.SchemeGroupVersion.WithResource("routetableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Main().V1alpha1().RouteTableAssociations().Informer()}, nil

		// Group=media.aws.kubeform.com, Version=v1alpha1
	case mediav1alpha1.SchemeGroupVersion.WithResource("convertqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().ConvertQueues().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("packagechannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().PackageChannels().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("storecontainers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().StoreContainers().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("storecontainerpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().StoreContainerPolicies().Informer()}, nil

		// Group=mq.aws.kubeform.com, Version=v1alpha1
	case mqv1alpha1.SchemeGroupVersion.WithResource("brokers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mq().V1alpha1().Brokers().Informer()}, nil
	case mqv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mq().V1alpha1().Configurations().Informer()}, nil

		// Group=msk.aws.kubeform.com, Version=v1alpha1
	case mskv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Msk().V1alpha1().Clusters().Informer()}, nil
	case mskv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Msk().V1alpha1().Configurations().Informer()}, nil
	case mskv1alpha1.SchemeGroupVersion.WithResource("scramsecretassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Msk().V1alpha1().ScramSecretAssociations().Informer()}, nil

		// Group=mwaa.aws.kubeform.com, Version=v1alpha1
	case mwaav1alpha1.SchemeGroupVersion.WithResource("environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mwaa().V1alpha1().Environments().Informer()}, nil

		// Group=nat.aws.kubeform.com, Version=v1alpha1
	case natv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nat().V1alpha1().Gateways().Informer()}, nil

		// Group=neptune.aws.kubeform.com, Version=v1alpha1
	case neptunev1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().Clusters().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("clusterendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().ClusterEndpoints().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("clusterinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().ClusterInstances().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("clusterparametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().ClusterParameterGroups().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("clustersnapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().ClusterSnapshots().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("eventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().EventSubscriptions().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().ParameterGroups().Informer()}, nil
	case neptunev1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Neptune().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=network.aws.kubeform.com, Version=v1alpha1
	case networkv1alpha1.SchemeGroupVersion.WithResource("acls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Acls().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("aclrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().AclRules().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Interfaces().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceAttachments().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfacesgattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceSgAttachments().Informer()}, nil

		// Group=networkfirewall.aws.kubeform.com, Version=v1alpha1
	case networkfirewallv1alpha1.SchemeGroupVersion.WithResource("firewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Networkfirewall().V1alpha1().Firewalls().Informer()}, nil
	case networkfirewallv1alpha1.SchemeGroupVersion.WithResource("firewallpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Networkfirewall().V1alpha1().FirewallPolicies().Informer()}, nil
	case networkfirewallv1alpha1.SchemeGroupVersion.WithResource("loggingconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Networkfirewall().V1alpha1().LoggingConfigurations().Informer()}, nil
	case networkfirewallv1alpha1.SchemeGroupVersion.WithResource("resourcepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Networkfirewall().V1alpha1().ResourcePolicies().Informer()}, nil
	case networkfirewallv1alpha1.SchemeGroupVersion.WithResource("rulegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Networkfirewall().V1alpha1().RuleGroups().Informer()}, nil

		// Group=opsworks.aws.kubeform.com, Version=v1alpha1
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().Applications().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("customlayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().CustomLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("ganglialayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().GangliaLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("haproxylayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().HaproxyLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().Instances().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("javaapplayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().JavaAppLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("memcachedlayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().MemcachedLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("mysqllayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().MysqlLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("nodejsapplayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().NodejsAppLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("permissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().Permissions().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("phpapplayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().PhpAppLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("railsapplayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().RailsAppLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("rdsdbinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().RdsDbInstances().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("stacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().Stacks().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("staticweblayers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().StaticWebLayers().Informer()}, nil
	case opsworksv1alpha1.SchemeGroupVersion.WithResource("userprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Opsworks().V1alpha1().UserProfiles().Informer()}, nil

		// Group=organizations.aws.kubeform.com, Version=v1alpha1
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().Accounts().Informer()}, nil
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("delegatedadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().DelegatedAdministrators().Informer()}, nil
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("organizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().Organizations().Informer()}, nil
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("organizationalunits"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().OrganizationalUnits().Informer()}, nil
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().Policies().Informer()}, nil
	case organizationsv1alpha1.SchemeGroupVersion.WithResource("policyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organizations().V1alpha1().PolicyAttachments().Informer()}, nil

		// Group=pinpoint.aws.kubeform.com, Version=v1alpha1
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("admchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().AdmChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("apnschannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().ApnsChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("apnssandboxchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().ApnsSandboxChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("apnsvoipchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().ApnsVoipChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("apnsvoipsandboxchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().ApnsVoipSandboxChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().Apps().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("baiduchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().BaiduChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("emailchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().EmailChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("eventstreams"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().EventStreams().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("gcmchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().GcmChannels().Informer()}, nil
	case pinpointv1alpha1.SchemeGroupVersion.WithResource("smschannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pinpoint().V1alpha1().SmsChannels().Informer()}, nil

		// Group=placement.aws.kubeform.com, Version=v1alpha1
	case placementv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Placement().V1alpha1().Groups().Informer()}, nil

		// Group=prometheus.aws.kubeform.com, Version=v1alpha1
	case prometheusv1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Prometheus().V1alpha1().Workspaces().Informer()}, nil

		// Group=proxy.aws.kubeform.com, Version=v1alpha1
	case proxyv1alpha1.SchemeGroupVersion.WithResource("protocolpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Proxy().V1alpha1().ProtocolPolicies().Informer()}, nil

		// Group=qldb.aws.kubeform.com, Version=v1alpha1
	case qldbv1alpha1.SchemeGroupVersion.WithResource("ledgers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Qldb().V1alpha1().Ledgers().Informer()}, nil

		// Group=quicksight.aws.kubeform.com, Version=v1alpha1
	case quicksightv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quicksight().V1alpha1().Groups().Informer()}, nil
	case quicksightv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quicksight().V1alpha1().Users().Informer()}, nil

		// Group=ram.aws.kubeform.com, Version=v1alpha1
	case ramv1alpha1.SchemeGroupVersion.WithResource("principalassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().PrincipalAssociations().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("resourceassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().ResourceAssociations().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("resourceshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().ResourceShares().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("resourceshareaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().ResourceShareAccepters().Informer()}, nil

		// Group=rds.aws.kubeform.com, Version=v1alpha1
	case rdsv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().Clusters().Informer()}, nil
	case rdsv1alpha1.SchemeGroupVersion.WithResource("clusterendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().ClusterEndpoints().Informer()}, nil
	case rdsv1alpha1.SchemeGroupVersion.WithResource("clusterinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().ClusterInstances().Informer()}, nil
	case rdsv1alpha1.SchemeGroupVersion.WithResource("clusterparametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().ClusterParameterGroups().Informer()}, nil
	case rdsv1alpha1.SchemeGroupVersion.WithResource("globalclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().GlobalClusters().Informer()}, nil

		// Group=redshift.aws.kubeform.com, Version=v1alpha1
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().Clusters().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("eventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().EventSubscriptions().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().ParameterGroups().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().SecurityGroups().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("snapshotcopygrants"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().SnapshotCopyGrants().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("snapshotschedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().SnapshotSchedules().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("snapshotscheduleassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().SnapshotScheduleAssociations().Informer()}, nil
	case redshiftv1alpha1.SchemeGroupVersion.WithResource("subnetgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redshift().V1alpha1().SubnetGroups().Informer()}, nil

		// Group=resourcegroups.aws.kubeform.com, Version=v1alpha1
	case resourcegroupsv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resourcegroups().V1alpha1().Groups().Informer()}, nil

		// Group=route.aws.kubeform.com, Version=v1alpha1
	case routev1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Routes().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Tables().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("tableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().TableAssociations().Informer()}, nil

		// Group=route53.aws.kubeform.com, Version=v1alpha1
	case route53v1alpha1.SchemeGroupVersion.WithResource("delegationsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().DelegationSets().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("healthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().HealthChecks().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("hostedzonednssecs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().HostedZoneDnssecs().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("keysigningkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().KeySigningKeys().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("querylogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().QueryLogs().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("records"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().Records().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverdnssecconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverDnssecConfigs().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverEndpoints().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverfirewallconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverFirewallConfigs().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverfirewalldomainlists"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverFirewallDomainLists().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverfirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverFirewallRules().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverfirewallrulegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverFirewallRuleGroups().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverfirewallrulegroupassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverFirewallRuleGroupAssociations().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverquerylogconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverQueryLogConfigs().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverquerylogconfigassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverQueryLogConfigAssociations().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverRules().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("resolverruleassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ResolverRuleAssociations().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("vpcassociationauthorizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().VpcAssociationAuthorizations().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("zones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().Zones().Informer()}, nil
	case route53v1alpha1.SchemeGroupVersion.WithResource("zoneassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route53().V1alpha1().ZoneAssociations().Informer()}, nil

		// Group=s3.aws.kubeform.com, Version=v1alpha1
	case s3v1alpha1.SchemeGroupVersion.WithResource("accesspoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().AccessPoints().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("accountpublicaccessblocks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().AccountPublicAccessBlocks().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("buckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().Buckets().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketanalyticsconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketAnalyticsConfigurations().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketinventories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketInventories().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketmetrics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketMetrics().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketnotifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketNotifications().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketobjects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketObjects().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketownershipcontrolses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketOwnershipControlses().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketPolicies().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("bucketpublicaccessblocks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().BucketPublicAccessBlocks().Informer()}, nil
	case s3v1alpha1.SchemeGroupVersion.WithResource("objectcopies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3().V1alpha1().ObjectCopies().Informer()}, nil

		// Group=s3control.aws.kubeform.com, Version=v1alpha1
	case s3controlv1alpha1.SchemeGroupVersion.WithResource("buckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3control().V1alpha1().Buckets().Informer()}, nil
	case s3controlv1alpha1.SchemeGroupVersion.WithResource("bucketlifecycleconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3control().V1alpha1().BucketLifecycleConfigurations().Informer()}, nil
	case s3controlv1alpha1.SchemeGroupVersion.WithResource("bucketpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3control().V1alpha1().BucketPolicies().Informer()}, nil

		// Group=s3outposts.aws.kubeform.com, Version=v1alpha1
	case s3outpostsv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.S3outposts().V1alpha1().Endpoints().Informer()}, nil

		// Group=sagemaker.aws.kubeform.com, Version=v1alpha1
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().Apps().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("appimageconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().AppImageConfigs().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("coderepositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().CodeRepositories().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().Domains().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().Endpoints().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("endpointconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().EndpointConfigurations().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("featuregroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().FeatureGroups().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().Images().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("imageversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().ImageVersions().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("models"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().Models().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("modelpackagegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().ModelPackageGroups().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("notebookinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().NotebookInstances().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("notebookinstancelifecycleconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().NotebookInstanceLifecycleConfigurations().Informer()}, nil
	case sagemakerv1alpha1.SchemeGroupVersion.WithResource("userprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sagemaker().V1alpha1().UserProfiles().Informer()}, nil

		// Group=schemas.aws.kubeform.com, Version=v1alpha1
	case schemasv1alpha1.SchemeGroupVersion.WithResource("discoverers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schemas().V1alpha1().Discoverers().Informer()}, nil
	case schemasv1alpha1.SchemeGroupVersion.WithResource("registries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schemas().V1alpha1().Registries().Informer()}, nil
	case schemasv1alpha1.SchemeGroupVersion.WithResource("schemas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schemas().V1alpha1().Schemas().Informer()}, nil

		// Group=secretsmanager.aws.kubeform.com, Version=v1alpha1
	case secretsmanagerv1alpha1.SchemeGroupVersion.WithResource("secrets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secretsmanager().V1alpha1().Secrets().Informer()}, nil
	case secretsmanagerv1alpha1.SchemeGroupVersion.WithResource("secretpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secretsmanager().V1alpha1().SecretPolicies().Informer()}, nil
	case secretsmanagerv1alpha1.SchemeGroupVersion.WithResource("secretrotations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secretsmanager().V1alpha1().SecretRotations().Informer()}, nil
	case secretsmanagerv1alpha1.SchemeGroupVersion.WithResource("secretversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secretsmanager().V1alpha1().SecretVersions().Informer()}, nil

		// Group=security.aws.kubeform.com, Version=v1alpha1
	case securityv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().Groups().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("grouprules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().GroupRules().Informer()}, nil

		// Group=securityhub.aws.kubeform.com, Version=v1alpha1
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().Accounts().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("actiontargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().ActionTargets().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("insights"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().Insights().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("inviteaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().InviteAccepters().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("members"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().Members().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("organizationadminaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().OrganizationAdminAccounts().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("productsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().ProductSubscriptions().Informer()}, nil
	case securityhubv1alpha1.SchemeGroupVersion.WithResource("standardssubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Securityhub().V1alpha1().StandardsSubscriptions().Informer()}, nil

		// Group=serverlessapplicationrepository.aws.kubeform.com, Version=v1alpha1
	case serverlessapplicationrepositoryv1alpha1.SchemeGroupVersion.WithResource("cloudformationstacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Serverlessapplicationrepository().V1alpha1().CloudformationStacks().Informer()}, nil

		// Group=servicecatalog.aws.kubeform.com, Version=v1alpha1
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("budgetresourceassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().BudgetResourceAssociations().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("constraints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().Constraints().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("organizationsaccesses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().OrganizationsAccesses().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("portfolios"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().Portfolios().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("portfolioshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().PortfolioShares().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("principalportfolioassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().PrincipalPortfolioAssociations().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("products"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().Products().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("productportfolioassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().ProductPortfolioAssociations().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("provisioningartifacts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().ProvisioningArtifacts().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("serviceactions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().ServiceActions().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("tagoptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().TagOptions().Informer()}, nil
	case servicecatalogv1alpha1.SchemeGroupVersion.WithResource("tagoptionresourceassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicecatalog().V1alpha1().TagOptionResourceAssociations().Informer()}, nil

		// Group=servicediscovery.aws.kubeform.com, Version=v1alpha1
	case servicediscoveryv1alpha1.SchemeGroupVersion.WithResource("httpnamespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicediscovery().V1alpha1().HttpNamespaces().Informer()}, nil
	case servicediscoveryv1alpha1.SchemeGroupVersion.WithResource("privatednsnamespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicediscovery().V1alpha1().PrivateDNSNamespaces().Informer()}, nil
	case servicediscoveryv1alpha1.SchemeGroupVersion.WithResource("publicdnsnamespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicediscovery().V1alpha1().PublicDNSNamespaces().Informer()}, nil
	case servicediscoveryv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicediscovery().V1alpha1().Services().Informer()}, nil

		// Group=servicequotas.aws.kubeform.com, Version=v1alpha1
	case servicequotasv1alpha1.SchemeGroupVersion.WithResource("servicequotas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicequotas().V1alpha1().ServiceQuotas().Informer()}, nil

		// Group=ses.aws.kubeform.com, Version=v1alpha1
	case sesv1alpha1.SchemeGroupVersion.WithResource("activereceiptrulesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().ActiveReceiptRuleSets().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("configurationsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().ConfigurationSets().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("domaindkims"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().DomainDkims().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("domainidentities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().DomainIdentities().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("domainidentityverifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().DomainIdentityVerifications().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("domainmailfroms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().DomainMailFroms().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("emailidentities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().EmailIdentities().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("eventdestinations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().EventDestinations().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("identitynotificationtopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().IdentityNotificationTopics().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("identitypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().IdentityPolicies().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("receiptfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().ReceiptFilters().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("receiptrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().ReceiptRules().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("receiptrulesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().ReceiptRuleSets().Informer()}, nil
	case sesv1alpha1.SchemeGroupVersion.WithResource("templates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ses().V1alpha1().Templates().Informer()}, nil

		// Group=sfn.aws.kubeform.com, Version=v1alpha1
	case sfnv1alpha1.SchemeGroupVersion.WithResource("activities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sfn().V1alpha1().Activities().Informer()}, nil
	case sfnv1alpha1.SchemeGroupVersion.WithResource("statemachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sfn().V1alpha1().StateMachines().Informer()}, nil

		// Group=shield.aws.kubeform.com, Version=v1alpha1
	case shieldv1alpha1.SchemeGroupVersion.WithResource("protections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Shield().V1alpha1().Protections().Informer()}, nil

		// Group=signer.aws.kubeform.com, Version=v1alpha1
	case signerv1alpha1.SchemeGroupVersion.WithResource("signingjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Signer().V1alpha1().SigningJobs().Informer()}, nil
	case signerv1alpha1.SchemeGroupVersion.WithResource("signingprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Signer().V1alpha1().SigningProfiles().Informer()}, nil
	case signerv1alpha1.SchemeGroupVersion.WithResource("signingprofilepermissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Signer().V1alpha1().SigningProfilePermissions().Informer()}, nil

		// Group=simpledb.aws.kubeform.com, Version=v1alpha1
	case simpledbv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Simpledb().V1alpha1().Domains().Informer()}, nil

		// Group=snapshot.aws.kubeform.com, Version=v1alpha1
	case snapshotv1alpha1.SchemeGroupVersion.WithResource("createvolumepermissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Snapshot().V1alpha1().CreateVolumePermissions().Informer()}, nil

		// Group=sns.aws.kubeform.com, Version=v1alpha1
	case snsv1alpha1.SchemeGroupVersion.WithResource("platformapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sns().V1alpha1().PlatformApplications().Informer()}, nil
	case snsv1alpha1.SchemeGroupVersion.WithResource("smspreferenceses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sns().V1alpha1().SmsPreferenceses().Informer()}, nil
	case snsv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sns().V1alpha1().Topics().Informer()}, nil
	case snsv1alpha1.SchemeGroupVersion.WithResource("topicpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sns().V1alpha1().TopicPolicies().Informer()}, nil
	case snsv1alpha1.SchemeGroupVersion.WithResource("topicsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sns().V1alpha1().TopicSubscriptions().Informer()}, nil

		// Group=spot.aws.kubeform.com, Version=v1alpha1
	case spotv1alpha1.SchemeGroupVersion.WithResource("datafeedsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spot().V1alpha1().DatafeedSubscriptions().Informer()}, nil
	case spotv1alpha1.SchemeGroupVersion.WithResource("fleetrequests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spot().V1alpha1().FleetRequests().Informer()}, nil
	case spotv1alpha1.SchemeGroupVersion.WithResource("instancerequests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spot().V1alpha1().InstanceRequests().Informer()}, nil

		// Group=sqsqueue.aws.kubeform.com, Version=v1alpha1
	case sqsqueuev1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sqsqueue().V1alpha1().Policies().Informer()}, nil
	case sqsqueuev1alpha1.SchemeGroupVersion.WithResource("sqsqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sqsqueue().V1alpha1().SqsQueues().Informer()}, nil

		// Group=ssm.aws.kubeform.com, Version=v1alpha1
	case ssmv1alpha1.SchemeGroupVersion.WithResource("activations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().Activations().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("associations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().Associations().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("documents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().Documents().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("maintenancewindows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().MaintenanceWindows().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("maintenancewindowtargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().MaintenanceWindowTargets().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("maintenancewindowtasks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().MaintenanceWindowTasks().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("parameters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().Parameters().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("patchbaselines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().PatchBaselines().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("patchgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().PatchGroups().Informer()}, nil
	case ssmv1alpha1.SchemeGroupVersion.WithResource("resourcedatasyncs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssm().V1alpha1().ResourceDataSyncs().Informer()}, nil

		// Group=ssoadmin.aws.kubeform.com, Version=v1alpha1
	case ssoadminv1alpha1.SchemeGroupVersion.WithResource("accountassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssoadmin().V1alpha1().AccountAssignments().Informer()}, nil
	case ssoadminv1alpha1.SchemeGroupVersion.WithResource("managedpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssoadmin().V1alpha1().ManagedPolicyAttachments().Informer()}, nil
	case ssoadminv1alpha1.SchemeGroupVersion.WithResource("permissionsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssoadmin().V1alpha1().PermissionSets().Informer()}, nil
	case ssoadminv1alpha1.SchemeGroupVersion.WithResource("permissionsetinlinepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssoadmin().V1alpha1().PermissionSetInlinePolicies().Informer()}, nil

		// Group=storagegateway.aws.kubeform.com, Version=v1alpha1
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("caches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().Caches().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("cachediscsivolumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().CachedIscsiVolumes().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().Gateways().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("nfsfileshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().NfsFileShares().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("smbfileshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().SmbFileShares().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("storediscsivolumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().StoredIscsiVolumes().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("tapepools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().TapePools().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("uploadbuffers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().UploadBuffers().Informer()}, nil
	case storagegatewayv1alpha1.SchemeGroupVersion.WithResource("workingstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storagegateway().V1alpha1().WorkingStorages().Informer()}, nil

		// Group=subnet.aws.kubeform.com, Version=v1alpha1
	case subnetv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().Subnets().Informer()}, nil

		// Group=swf.aws.kubeform.com, Version=v1alpha1
	case swfv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Swf().V1alpha1().Domains().Informer()}, nil

		// Group=synthetics.aws.kubeform.com, Version=v1alpha1
	case syntheticsv1alpha1.SchemeGroupVersion.WithResource("canaries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synthetics().V1alpha1().Canaries().Informer()}, nil

		// Group=timestreamwrite.aws.kubeform.com, Version=v1alpha1
	case timestreamwritev1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Timestreamwrite().V1alpha1().Databases().Informer()}, nil
	case timestreamwritev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Timestreamwrite().V1alpha1().Tables().Informer()}, nil

		// Group=transfer.aws.kubeform.com, Version=v1alpha1
	case transferv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Transfer().V1alpha1().Servers().Informer()}, nil
	case transferv1alpha1.SchemeGroupVersion.WithResource("sshkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Transfer().V1alpha1().SshKeys().Informer()}, nil
	case transferv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Transfer().V1alpha1().Users().Informer()}, nil

		// Group=volume.aws.kubeform.com, Version=v1alpha1
	case volumev1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Volume().V1alpha1().Attachments().Informer()}, nil

		// Group=vpc.aws.kubeform.com, Version=v1alpha1
	case vpcv1alpha1.SchemeGroupVersion.WithResource("dhcpoptionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().DhcpOptionses().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("dhcpoptionsassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().DhcpOptionsAssociations().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().Endpoints().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpointconnectionnotifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().EndpointConnectionNotifications().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpointroutetableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().EndpointRouteTableAssociations().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpointservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().EndpointServices().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpointserviceallowedprincipals"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().EndpointServiceAllowedPrincipals().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("endpointsubnetassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().EndpointSubnetAssociations().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("ipv4cidrblockassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().Ipv4CIDRBlockAssociations().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("peeringconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().PeeringConnections().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("peeringconnectionaccepters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().PeeringConnectionAccepters().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("peeringconnectionoptionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().PeeringConnectionOptionses().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("vpcs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().Vpcs().Informer()}, nil

		// Group=vpn.aws.kubeform.com, Version=v1alpha1
	case vpnv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Connections().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("connectionroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().ConnectionRoutes().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Gateways().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gatewayattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().GatewayAttachments().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gatewayroutepropagations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().GatewayRoutePropagations().Informer()}, nil

		// Group=waf.aws.kubeform.com, Version=v1alpha1
	case wafv1alpha1.SchemeGroupVersion.WithResource("bytematchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().ByteMatchSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("geomatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().GeoMatchSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("ipsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().Ipsets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("ratebasedrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().RateBasedRules().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("regexmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().RegexMatchSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("regexpatternsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().RegexPatternSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().Rules().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("rulegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().RuleGroups().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("sizeconstraintsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().SizeConstraintSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("sqlinjectionmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().SqlInjectionMatchSets().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("webacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().WebACLs().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("xssmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().XssMatchSets().Informer()}, nil

		// Group=wafregional.aws.kubeform.com, Version=v1alpha1
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("bytematchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().ByteMatchSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("geomatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().GeoMatchSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("ipsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().Ipsets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("ratebasedrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().RateBasedRules().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("regexmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().RegexMatchSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("regexpatternsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().RegexPatternSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().Rules().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("rulegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().RuleGroups().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("sizeconstraintsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().SizeConstraintSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("sqlinjectionmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().SqlInjectionMatchSets().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("webacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().WebACLs().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("webaclassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().WebACLAssociations().Informer()}, nil
	case wafregionalv1alpha1.SchemeGroupVersion.WithResource("xssmatchsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafregional().V1alpha1().XssMatchSets().Informer()}, nil

		// Group=wafv2.aws.kubeform.com, Version=v1alpha1
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("ipsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().IpSets().Informer()}, nil
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("regexpatternsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().RegexPatternSets().Informer()}, nil
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("rulegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().RuleGroups().Informer()}, nil
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("webacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().WebACLs().Informer()}, nil
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("webaclassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().WebACLAssociations().Informer()}, nil
	case wafv2v1alpha1.SchemeGroupVersion.WithResource("webaclloggingconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Wafv2().V1alpha1().WebACLLoggingConfigurations().Informer()}, nil

		// Group=worklink.aws.kubeform.com, Version=v1alpha1
	case worklinkv1alpha1.SchemeGroupVersion.WithResource("fleets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Worklink().V1alpha1().Fleets().Informer()}, nil
	case worklinkv1alpha1.SchemeGroupVersion.WithResource("websitecertificateauthorityassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Worklink().V1alpha1().WebsiteCertificateAuthorityAssociations().Informer()}, nil

		// Group=workspaces.aws.kubeform.com, Version=v1alpha1
	case workspacesv1alpha1.SchemeGroupVersion.WithResource("directories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Workspaces().V1alpha1().Directories().Informer()}, nil
	case workspacesv1alpha1.SchemeGroupVersion.WithResource("ipgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Workspaces().V1alpha1().IpGroups().Informer()}, nil
	case workspacesv1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Workspaces().V1alpha1().Workspaces().Informer()}, nil

		// Group=xray.aws.kubeform.com, Version=v1alpha1
	case xrayv1alpha1.SchemeGroupVersion.WithResource("encryptionconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Xray().V1alpha1().EncryptionConfigs().Informer()}, nil
	case xrayv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Xray().V1alpha1().Groups().Informer()}, nil
	case xrayv1alpha1.SchemeGroupVersion.WithResource("samplingrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Xray().V1alpha1().SamplingRules().Informer()}, nil

	}

	return nil, fmt.Errorf("no informer found for %v", resource)
}
