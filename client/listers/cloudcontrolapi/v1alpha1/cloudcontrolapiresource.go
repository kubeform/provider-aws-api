/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/cloudcontrolapi/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudcontrolapiResourceLister helps list CloudcontrolapiResources.
// All objects returned here must be treated as read-only.
type CloudcontrolapiResourceLister interface {
	// List lists all CloudcontrolapiResources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudcontrolapiResource, err error)
	// CloudcontrolapiResources returns an object that can list and get CloudcontrolapiResources.
	CloudcontrolapiResources(namespace string) CloudcontrolapiResourceNamespaceLister
	CloudcontrolapiResourceListerExpansion
}

// cloudcontrolapiResourceLister implements the CloudcontrolapiResourceLister interface.
type cloudcontrolapiResourceLister struct {
	indexer cache.Indexer
}

// NewCloudcontrolapiResourceLister returns a new CloudcontrolapiResourceLister.
func NewCloudcontrolapiResourceLister(indexer cache.Indexer) CloudcontrolapiResourceLister {
	return &cloudcontrolapiResourceLister{indexer: indexer}
}

// List lists all CloudcontrolapiResources in the indexer.
func (s *cloudcontrolapiResourceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudcontrolapiResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudcontrolapiResource))
	})
	return ret, err
}

// CloudcontrolapiResources returns an object that can list and get CloudcontrolapiResources.
func (s *cloudcontrolapiResourceLister) CloudcontrolapiResources(namespace string) CloudcontrolapiResourceNamespaceLister {
	return cloudcontrolapiResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudcontrolapiResourceNamespaceLister helps list and get CloudcontrolapiResources.
// All objects returned here must be treated as read-only.
type CloudcontrolapiResourceNamespaceLister interface {
	// List lists all CloudcontrolapiResources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudcontrolapiResource, err error)
	// Get retrieves the CloudcontrolapiResource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CloudcontrolapiResource, error)
	CloudcontrolapiResourceNamespaceListerExpansion
}

// cloudcontrolapiResourceNamespaceLister implements the CloudcontrolapiResourceNamespaceLister
// interface.
type cloudcontrolapiResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudcontrolapiResources in the indexer for a given namespace.
func (s cloudcontrolapiResourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudcontrolapiResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudcontrolapiResource))
	})
	return ret, err
}

// Get retrieves the CloudcontrolapiResource from the indexer for a given namespace and name.
func (s cloudcontrolapiResourceNamespaceLister) Get(name string) (*v1alpha1.CloudcontrolapiResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudcontrolapiresource"), name)
	}
	return obj.(*v1alpha1.CloudcontrolapiResource), nil
}
