/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/fsx/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OntapStorageVirtualMachineLister helps list OntapStorageVirtualMachines.
// All objects returned here must be treated as read-only.
type OntapStorageVirtualMachineLister interface {
	// List lists all OntapStorageVirtualMachines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OntapStorageVirtualMachine, err error)
	// OntapStorageVirtualMachines returns an object that can list and get OntapStorageVirtualMachines.
	OntapStorageVirtualMachines(namespace string) OntapStorageVirtualMachineNamespaceLister
	OntapStorageVirtualMachineListerExpansion
}

// ontapStorageVirtualMachineLister implements the OntapStorageVirtualMachineLister interface.
type ontapStorageVirtualMachineLister struct {
	indexer cache.Indexer
}

// NewOntapStorageVirtualMachineLister returns a new OntapStorageVirtualMachineLister.
func NewOntapStorageVirtualMachineLister(indexer cache.Indexer) OntapStorageVirtualMachineLister {
	return &ontapStorageVirtualMachineLister{indexer: indexer}
}

// List lists all OntapStorageVirtualMachines in the indexer.
func (s *ontapStorageVirtualMachineLister) List(selector labels.Selector) (ret []*v1alpha1.OntapStorageVirtualMachine, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OntapStorageVirtualMachine))
	})
	return ret, err
}

// OntapStorageVirtualMachines returns an object that can list and get OntapStorageVirtualMachines.
func (s *ontapStorageVirtualMachineLister) OntapStorageVirtualMachines(namespace string) OntapStorageVirtualMachineNamespaceLister {
	return ontapStorageVirtualMachineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OntapStorageVirtualMachineNamespaceLister helps list and get OntapStorageVirtualMachines.
// All objects returned here must be treated as read-only.
type OntapStorageVirtualMachineNamespaceLister interface {
	// List lists all OntapStorageVirtualMachines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OntapStorageVirtualMachine, err error)
	// Get retrieves the OntapStorageVirtualMachine from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OntapStorageVirtualMachine, error)
	OntapStorageVirtualMachineNamespaceListerExpansion
}

// ontapStorageVirtualMachineNamespaceLister implements the OntapStorageVirtualMachineNamespaceLister
// interface.
type ontapStorageVirtualMachineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OntapStorageVirtualMachines in the indexer for a given namespace.
func (s ontapStorageVirtualMachineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OntapStorageVirtualMachine, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OntapStorageVirtualMachine))
	})
	return ret, err
}

// Get retrieves the OntapStorageVirtualMachine from the indexer for a given namespace and name.
func (s ontapStorageVirtualMachineNamespaceLister) Get(name string) (*v1alpha1.OntapStorageVirtualMachine, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ontapstoragevirtualmachine"), name)
	}
	return obj.(*v1alpha1.OntapStorageVirtualMachine), nil
}
