/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/codecommit/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApprovalRuleTemplateLister helps list ApprovalRuleTemplates.
// All objects returned here must be treated as read-only.
type ApprovalRuleTemplateLister interface {
	// List lists all ApprovalRuleTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApprovalRuleTemplate, err error)
	// ApprovalRuleTemplates returns an object that can list and get ApprovalRuleTemplates.
	ApprovalRuleTemplates(namespace string) ApprovalRuleTemplateNamespaceLister
	ApprovalRuleTemplateListerExpansion
}

// approvalRuleTemplateLister implements the ApprovalRuleTemplateLister interface.
type approvalRuleTemplateLister struct {
	indexer cache.Indexer
}

// NewApprovalRuleTemplateLister returns a new ApprovalRuleTemplateLister.
func NewApprovalRuleTemplateLister(indexer cache.Indexer) ApprovalRuleTemplateLister {
	return &approvalRuleTemplateLister{indexer: indexer}
}

// List lists all ApprovalRuleTemplates in the indexer.
func (s *approvalRuleTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.ApprovalRuleTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApprovalRuleTemplate))
	})
	return ret, err
}

// ApprovalRuleTemplates returns an object that can list and get ApprovalRuleTemplates.
func (s *approvalRuleTemplateLister) ApprovalRuleTemplates(namespace string) ApprovalRuleTemplateNamespaceLister {
	return approvalRuleTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApprovalRuleTemplateNamespaceLister helps list and get ApprovalRuleTemplates.
// All objects returned here must be treated as read-only.
type ApprovalRuleTemplateNamespaceLister interface {
	// List lists all ApprovalRuleTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApprovalRuleTemplate, err error)
	// Get retrieves the ApprovalRuleTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ApprovalRuleTemplate, error)
	ApprovalRuleTemplateNamespaceListerExpansion
}

// approvalRuleTemplateNamespaceLister implements the ApprovalRuleTemplateNamespaceLister
// interface.
type approvalRuleTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApprovalRuleTemplates in the indexer for a given namespace.
func (s approvalRuleTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApprovalRuleTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApprovalRuleTemplate))
	})
	return ret, err
}

// Get retrieves the ApprovalRuleTemplate from the indexer for a given namespace and name.
func (s approvalRuleTemplateNamespaceLister) Get(name string) (*v1alpha1.ApprovalRuleTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("approvalruletemplate"), name)
	}
	return obj.(*v1alpha1.ApprovalRuleTemplate), nil
}
