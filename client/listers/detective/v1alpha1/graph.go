/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/detective/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GraphLister helps list Graphs.
// All objects returned here must be treated as read-only.
type GraphLister interface {
	// List lists all Graphs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Graph, err error)
	// Graphs returns an object that can list and get Graphs.
	Graphs(namespace string) GraphNamespaceLister
	GraphListerExpansion
}

// graphLister implements the GraphLister interface.
type graphLister struct {
	indexer cache.Indexer
}

// NewGraphLister returns a new GraphLister.
func NewGraphLister(indexer cache.Indexer) GraphLister {
	return &graphLister{indexer: indexer}
}

// List lists all Graphs in the indexer.
func (s *graphLister) List(selector labels.Selector) (ret []*v1alpha1.Graph, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Graph))
	})
	return ret, err
}

// Graphs returns an object that can list and get Graphs.
func (s *graphLister) Graphs(namespace string) GraphNamespaceLister {
	return graphNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GraphNamespaceLister helps list and get Graphs.
// All objects returned here must be treated as read-only.
type GraphNamespaceLister interface {
	// List lists all Graphs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Graph, err error)
	// Get retrieves the Graph from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Graph, error)
	GraphNamespaceListerExpansion
}

// graphNamespaceLister implements the GraphNamespaceLister
// interface.
type graphNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Graphs in the indexer for a given namespace.
func (s graphNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Graph, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Graph))
	})
	return ret, err
}

// Get retrieves the Graph from the indexer for a given namespace and name.
func (s graphNamespaceLister) Get(name string) (*v1alpha1.Graph, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("graph"), name)
	}
	return obj.(*v1alpha1.Graph), nil
}
