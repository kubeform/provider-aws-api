/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/chime/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VoiceConnectorStreamingLister helps list VoiceConnectorStreamings.
// All objects returned here must be treated as read-only.
type VoiceConnectorStreamingLister interface {
	// List lists all VoiceConnectorStreamings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VoiceConnectorStreaming, err error)
	// VoiceConnectorStreamings returns an object that can list and get VoiceConnectorStreamings.
	VoiceConnectorStreamings(namespace string) VoiceConnectorStreamingNamespaceLister
	VoiceConnectorStreamingListerExpansion
}

// voiceConnectorStreamingLister implements the VoiceConnectorStreamingLister interface.
type voiceConnectorStreamingLister struct {
	indexer cache.Indexer
}

// NewVoiceConnectorStreamingLister returns a new VoiceConnectorStreamingLister.
func NewVoiceConnectorStreamingLister(indexer cache.Indexer) VoiceConnectorStreamingLister {
	return &voiceConnectorStreamingLister{indexer: indexer}
}

// List lists all VoiceConnectorStreamings in the indexer.
func (s *voiceConnectorStreamingLister) List(selector labels.Selector) (ret []*v1alpha1.VoiceConnectorStreaming, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VoiceConnectorStreaming))
	})
	return ret, err
}

// VoiceConnectorStreamings returns an object that can list and get VoiceConnectorStreamings.
func (s *voiceConnectorStreamingLister) VoiceConnectorStreamings(namespace string) VoiceConnectorStreamingNamespaceLister {
	return voiceConnectorStreamingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VoiceConnectorStreamingNamespaceLister helps list and get VoiceConnectorStreamings.
// All objects returned here must be treated as read-only.
type VoiceConnectorStreamingNamespaceLister interface {
	// List lists all VoiceConnectorStreamings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VoiceConnectorStreaming, err error)
	// Get retrieves the VoiceConnectorStreaming from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VoiceConnectorStreaming, error)
	VoiceConnectorStreamingNamespaceListerExpansion
}

// voiceConnectorStreamingNamespaceLister implements the VoiceConnectorStreamingNamespaceLister
// interface.
type voiceConnectorStreamingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VoiceConnectorStreamings in the indexer for a given namespace.
func (s voiceConnectorStreamingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VoiceConnectorStreaming, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VoiceConnectorStreaming))
	})
	return ret, err
}

// Get retrieves the VoiceConnectorStreaming from the indexer for a given namespace and name.
func (s voiceConnectorStreamingNamespaceLister) Get(name string) (*v1alpha1.VoiceConnectorStreaming, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("voiceconnectorstreaming"), name)
	}
	return obj.(*v1alpha1.VoiceConnectorStreaming), nil
}
