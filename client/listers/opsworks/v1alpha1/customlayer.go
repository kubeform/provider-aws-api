/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/opsworks/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomLayerLister helps list CustomLayers.
// All objects returned here must be treated as read-only.
type CustomLayerLister interface {
	// List lists all CustomLayers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomLayer, err error)
	// CustomLayers returns an object that can list and get CustomLayers.
	CustomLayers(namespace string) CustomLayerNamespaceLister
	CustomLayerListerExpansion
}

// customLayerLister implements the CustomLayerLister interface.
type customLayerLister struct {
	indexer cache.Indexer
}

// NewCustomLayerLister returns a new CustomLayerLister.
func NewCustomLayerLister(indexer cache.Indexer) CustomLayerLister {
	return &customLayerLister{indexer: indexer}
}

// List lists all CustomLayers in the indexer.
func (s *customLayerLister) List(selector labels.Selector) (ret []*v1alpha1.CustomLayer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomLayer))
	})
	return ret, err
}

// CustomLayers returns an object that can list and get CustomLayers.
func (s *customLayerLister) CustomLayers(namespace string) CustomLayerNamespaceLister {
	return customLayerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomLayerNamespaceLister helps list and get CustomLayers.
// All objects returned here must be treated as read-only.
type CustomLayerNamespaceLister interface {
	// List lists all CustomLayers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomLayer, err error)
	// Get retrieves the CustomLayer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomLayer, error)
	CustomLayerNamespaceListerExpansion
}

// customLayerNamespaceLister implements the CustomLayerNamespaceLister
// interface.
type customLayerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomLayers in the indexer for a given namespace.
func (s customLayerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomLayer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomLayer))
	})
	return ret, err
}

// Get retrieves the CustomLayer from the indexer for a given namespace and name.
func (s customLayerNamespaceLister) Get(name string) (*v1alpha1.CustomLayer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customlayer"), name)
	}
	return obj.(*v1alpha1.CustomLayer), nil
}
