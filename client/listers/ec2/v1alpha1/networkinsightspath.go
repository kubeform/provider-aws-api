/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ec2/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkInsightsPathLister helps list NetworkInsightsPaths.
// All objects returned here must be treated as read-only.
type NetworkInsightsPathLister interface {
	// List lists all NetworkInsightsPaths in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInsightsPath, err error)
	// NetworkInsightsPaths returns an object that can list and get NetworkInsightsPaths.
	NetworkInsightsPaths(namespace string) NetworkInsightsPathNamespaceLister
	NetworkInsightsPathListerExpansion
}

// networkInsightsPathLister implements the NetworkInsightsPathLister interface.
type networkInsightsPathLister struct {
	indexer cache.Indexer
}

// NewNetworkInsightsPathLister returns a new NetworkInsightsPathLister.
func NewNetworkInsightsPathLister(indexer cache.Indexer) NetworkInsightsPathLister {
	return &networkInsightsPathLister{indexer: indexer}
}

// List lists all NetworkInsightsPaths in the indexer.
func (s *networkInsightsPathLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInsightsPath, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInsightsPath))
	})
	return ret, err
}

// NetworkInsightsPaths returns an object that can list and get NetworkInsightsPaths.
func (s *networkInsightsPathLister) NetworkInsightsPaths(namespace string) NetworkInsightsPathNamespaceLister {
	return networkInsightsPathNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkInsightsPathNamespaceLister helps list and get NetworkInsightsPaths.
// All objects returned here must be treated as read-only.
type NetworkInsightsPathNamespaceLister interface {
	// List lists all NetworkInsightsPaths in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInsightsPath, err error)
	// Get retrieves the NetworkInsightsPath from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NetworkInsightsPath, error)
	NetworkInsightsPathNamespaceListerExpansion
}

// networkInsightsPathNamespaceLister implements the NetworkInsightsPathNamespaceLister
// interface.
type networkInsightsPathNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkInsightsPaths in the indexer for a given namespace.
func (s networkInsightsPathNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInsightsPath, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInsightsPath))
	})
	return ret, err
}

// Get retrieves the NetworkInsightsPath from the indexer for a given namespace and name.
func (s networkInsightsPathNamespaceLister) Get(name string) (*v1alpha1.NetworkInsightsPath, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkinsightspath"), name)
	}
	return obj.(*v1alpha1.NetworkInsightsPath), nil
}
