/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ec2/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitGatewayMulticastDomainLister helps list TransitGatewayMulticastDomains.
// All objects returned here must be treated as read-only.
type TransitGatewayMulticastDomainLister interface {
	// List lists all TransitGatewayMulticastDomains in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastDomain, err error)
	// TransitGatewayMulticastDomains returns an object that can list and get TransitGatewayMulticastDomains.
	TransitGatewayMulticastDomains(namespace string) TransitGatewayMulticastDomainNamespaceLister
	TransitGatewayMulticastDomainListerExpansion
}

// transitGatewayMulticastDomainLister implements the TransitGatewayMulticastDomainLister interface.
type transitGatewayMulticastDomainLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayMulticastDomainLister returns a new TransitGatewayMulticastDomainLister.
func NewTransitGatewayMulticastDomainLister(indexer cache.Indexer) TransitGatewayMulticastDomainLister {
	return &transitGatewayMulticastDomainLister{indexer: indexer}
}

// List lists all TransitGatewayMulticastDomains in the indexer.
func (s *transitGatewayMulticastDomainLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayMulticastDomain))
	})
	return ret, err
}

// TransitGatewayMulticastDomains returns an object that can list and get TransitGatewayMulticastDomains.
func (s *transitGatewayMulticastDomainLister) TransitGatewayMulticastDomains(namespace string) TransitGatewayMulticastDomainNamespaceLister {
	return transitGatewayMulticastDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayMulticastDomainNamespaceLister helps list and get TransitGatewayMulticastDomains.
// All objects returned here must be treated as read-only.
type TransitGatewayMulticastDomainNamespaceLister interface {
	// List lists all TransitGatewayMulticastDomains in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastDomain, err error)
	// Get retrieves the TransitGatewayMulticastDomain from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TransitGatewayMulticastDomain, error)
	TransitGatewayMulticastDomainNamespaceListerExpansion
}

// transitGatewayMulticastDomainNamespaceLister implements the TransitGatewayMulticastDomainNamespaceLister
// interface.
type transitGatewayMulticastDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayMulticastDomains in the indexer for a given namespace.
func (s transitGatewayMulticastDomainNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayMulticastDomain))
	})
	return ret, err
}

// Get retrieves the TransitGatewayMulticastDomain from the indexer for a given namespace and name.
func (s transitGatewayMulticastDomainNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayMulticastDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewaymulticastdomain"), name)
	}
	return obj.(*v1alpha1.TransitGatewayMulticastDomain), nil
}
