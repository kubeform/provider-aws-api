/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ec2/v1alpha1"
)

// TransitGatewayPeeringAttachmentLister helps list TransitGatewayPeeringAttachments.
// All objects returned here must be treated as read-only.
type TransitGatewayPeeringAttachmentLister interface {
	// List lists all TransitGatewayPeeringAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayPeeringAttachment, err error)
	// TransitGatewayPeeringAttachments returns an object that can list and get TransitGatewayPeeringAttachments.
	TransitGatewayPeeringAttachments(namespace string) TransitGatewayPeeringAttachmentNamespaceLister
	TransitGatewayPeeringAttachmentListerExpansion
}

// transitGatewayPeeringAttachmentLister implements the TransitGatewayPeeringAttachmentLister interface.
type transitGatewayPeeringAttachmentLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayPeeringAttachmentLister returns a new TransitGatewayPeeringAttachmentLister.
func NewTransitGatewayPeeringAttachmentLister(indexer cache.Indexer) TransitGatewayPeeringAttachmentLister {
	return &transitGatewayPeeringAttachmentLister{indexer: indexer}
}

// List lists all TransitGatewayPeeringAttachments in the indexer.
func (s *transitGatewayPeeringAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayPeeringAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayPeeringAttachment))
	})
	return ret, err
}

// TransitGatewayPeeringAttachments returns an object that can list and get TransitGatewayPeeringAttachments.
func (s *transitGatewayPeeringAttachmentLister) TransitGatewayPeeringAttachments(namespace string) TransitGatewayPeeringAttachmentNamespaceLister {
	return transitGatewayPeeringAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayPeeringAttachmentNamespaceLister helps list and get TransitGatewayPeeringAttachments.
// All objects returned here must be treated as read-only.
type TransitGatewayPeeringAttachmentNamespaceLister interface {
	// List lists all TransitGatewayPeeringAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayPeeringAttachment, err error)
	// Get retrieves the TransitGatewayPeeringAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TransitGatewayPeeringAttachment, error)
	TransitGatewayPeeringAttachmentNamespaceListerExpansion
}

// transitGatewayPeeringAttachmentNamespaceLister implements the TransitGatewayPeeringAttachmentNamespaceLister
// interface.
type transitGatewayPeeringAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayPeeringAttachments in the indexer for a given namespace.
func (s transitGatewayPeeringAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayPeeringAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayPeeringAttachment))
	})
	return ret, err
}

// Get retrieves the TransitGatewayPeeringAttachment from the indexer for a given namespace and name.
func (s transitGatewayPeeringAttachmentNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayPeeringAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewaypeeringattachment"), name)
	}
	return obj.(*v1alpha1.TransitGatewayPeeringAttachment), nil
}
