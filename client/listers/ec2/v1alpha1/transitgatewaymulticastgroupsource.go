/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ec2/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitGatewayMulticastGroupSourceLister helps list TransitGatewayMulticastGroupSources.
// All objects returned here must be treated as read-only.
type TransitGatewayMulticastGroupSourceLister interface {
	// List lists all TransitGatewayMulticastGroupSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastGroupSource, err error)
	// TransitGatewayMulticastGroupSources returns an object that can list and get TransitGatewayMulticastGroupSources.
	TransitGatewayMulticastGroupSources(namespace string) TransitGatewayMulticastGroupSourceNamespaceLister
	TransitGatewayMulticastGroupSourceListerExpansion
}

// transitGatewayMulticastGroupSourceLister implements the TransitGatewayMulticastGroupSourceLister interface.
type transitGatewayMulticastGroupSourceLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayMulticastGroupSourceLister returns a new TransitGatewayMulticastGroupSourceLister.
func NewTransitGatewayMulticastGroupSourceLister(indexer cache.Indexer) TransitGatewayMulticastGroupSourceLister {
	return &transitGatewayMulticastGroupSourceLister{indexer: indexer}
}

// List lists all TransitGatewayMulticastGroupSources in the indexer.
func (s *transitGatewayMulticastGroupSourceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastGroupSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayMulticastGroupSource))
	})
	return ret, err
}

// TransitGatewayMulticastGroupSources returns an object that can list and get TransitGatewayMulticastGroupSources.
func (s *transitGatewayMulticastGroupSourceLister) TransitGatewayMulticastGroupSources(namespace string) TransitGatewayMulticastGroupSourceNamespaceLister {
	return transitGatewayMulticastGroupSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayMulticastGroupSourceNamespaceLister helps list and get TransitGatewayMulticastGroupSources.
// All objects returned here must be treated as read-only.
type TransitGatewayMulticastGroupSourceNamespaceLister interface {
	// List lists all TransitGatewayMulticastGroupSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastGroupSource, err error)
	// Get retrieves the TransitGatewayMulticastGroupSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TransitGatewayMulticastGroupSource, error)
	TransitGatewayMulticastGroupSourceNamespaceListerExpansion
}

// transitGatewayMulticastGroupSourceNamespaceLister implements the TransitGatewayMulticastGroupSourceNamespaceLister
// interface.
type transitGatewayMulticastGroupSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayMulticastGroupSources in the indexer for a given namespace.
func (s transitGatewayMulticastGroupSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayMulticastGroupSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayMulticastGroupSource))
	})
	return ret, err
}

// Get retrieves the TransitGatewayMulticastGroupSource from the indexer for a given namespace and name.
func (s transitGatewayMulticastGroupSourceNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayMulticastGroupSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewaymulticastgroupsource"), name)
	}
	return obj.(*v1alpha1.TransitGatewayMulticastGroupSource), nil
}
