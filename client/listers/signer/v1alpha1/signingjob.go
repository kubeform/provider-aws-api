/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/signer/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SigningJobLister helps list SigningJobs.
// All objects returned here must be treated as read-only.
type SigningJobLister interface {
	// List lists all SigningJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SigningJob, err error)
	// SigningJobs returns an object that can list and get SigningJobs.
	SigningJobs(namespace string) SigningJobNamespaceLister
	SigningJobListerExpansion
}

// signingJobLister implements the SigningJobLister interface.
type signingJobLister struct {
	indexer cache.Indexer
}

// NewSigningJobLister returns a new SigningJobLister.
func NewSigningJobLister(indexer cache.Indexer) SigningJobLister {
	return &signingJobLister{indexer: indexer}
}

// List lists all SigningJobs in the indexer.
func (s *signingJobLister) List(selector labels.Selector) (ret []*v1alpha1.SigningJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SigningJob))
	})
	return ret, err
}

// SigningJobs returns an object that can list and get SigningJobs.
func (s *signingJobLister) SigningJobs(namespace string) SigningJobNamespaceLister {
	return signingJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SigningJobNamespaceLister helps list and get SigningJobs.
// All objects returned here must be treated as read-only.
type SigningJobNamespaceLister interface {
	// List lists all SigningJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SigningJob, err error)
	// Get retrieves the SigningJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SigningJob, error)
	SigningJobNamespaceListerExpansion
}

// signingJobNamespaceLister implements the SigningJobNamespaceLister
// interface.
type signingJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SigningJobs in the indexer for a given namespace.
func (s signingJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SigningJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SigningJob))
	})
	return ret, err
}

// Get retrieves the SigningJob from the indexer for a given namespace and name.
func (s signingJobNamespaceLister) Get(name string) (*v1alpha1.SigningJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("signingjob"), name)
	}
	return obj.(*v1alpha1.SigningJob), nil
}
