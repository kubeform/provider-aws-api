/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/autoscaling/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GroupTagLister helps list GroupTags.
// All objects returned here must be treated as read-only.
type GroupTagLister interface {
	// List lists all GroupTags in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GroupTag, err error)
	// GroupTags returns an object that can list and get GroupTags.
	GroupTags(namespace string) GroupTagNamespaceLister
	GroupTagListerExpansion
}

// groupTagLister implements the GroupTagLister interface.
type groupTagLister struct {
	indexer cache.Indexer
}

// NewGroupTagLister returns a new GroupTagLister.
func NewGroupTagLister(indexer cache.Indexer) GroupTagLister {
	return &groupTagLister{indexer: indexer}
}

// List lists all GroupTags in the indexer.
func (s *groupTagLister) List(selector labels.Selector) (ret []*v1alpha1.GroupTag, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupTag))
	})
	return ret, err
}

// GroupTags returns an object that can list and get GroupTags.
func (s *groupTagLister) GroupTags(namespace string) GroupTagNamespaceLister {
	return groupTagNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GroupTagNamespaceLister helps list and get GroupTags.
// All objects returned here must be treated as read-only.
type GroupTagNamespaceLister interface {
	// List lists all GroupTags in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GroupTag, err error)
	// Get retrieves the GroupTag from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GroupTag, error)
	GroupTagNamespaceListerExpansion
}

// groupTagNamespaceLister implements the GroupTagNamespaceLister
// interface.
type groupTagNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GroupTags in the indexer for a given namespace.
func (s groupTagNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GroupTag, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupTag))
	})
	return ret, err
}

// Get retrieves the GroupTag from the indexer for a given namespace and name.
func (s groupTagNamespaceLister) Get(name string) (*v1alpha1.GroupTag, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("grouptag"), name)
	}
	return obj.(*v1alpha1.GroupTag), nil
}
