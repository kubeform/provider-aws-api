/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/route53/v1alpha1"
)

// QueryLogLister helps list QueryLogs.
// All objects returned here must be treated as read-only.
type QueryLogLister interface {
	// List lists all QueryLogs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.QueryLog, err error)
	// QueryLogs returns an object that can list and get QueryLogs.
	QueryLogs(namespace string) QueryLogNamespaceLister
	QueryLogListerExpansion
}

// queryLogLister implements the QueryLogLister interface.
type queryLogLister struct {
	indexer cache.Indexer
}

// NewQueryLogLister returns a new QueryLogLister.
func NewQueryLogLister(indexer cache.Indexer) QueryLogLister {
	return &queryLogLister{indexer: indexer}
}

// List lists all QueryLogs in the indexer.
func (s *queryLogLister) List(selector labels.Selector) (ret []*v1alpha1.QueryLog, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QueryLog))
	})
	return ret, err
}

// QueryLogs returns an object that can list and get QueryLogs.
func (s *queryLogLister) QueryLogs(namespace string) QueryLogNamespaceLister {
	return queryLogNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// QueryLogNamespaceLister helps list and get QueryLogs.
// All objects returned here must be treated as read-only.
type QueryLogNamespaceLister interface {
	// List lists all QueryLogs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.QueryLog, err error)
	// Get retrieves the QueryLog from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.QueryLog, error)
	QueryLogNamespaceListerExpansion
}

// queryLogNamespaceLister implements the QueryLogNamespaceLister
// interface.
type queryLogNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all QueryLogs in the indexer for a given namespace.
func (s queryLogNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.QueryLog, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QueryLog))
	})
	return ret, err
}

// Get retrieves the QueryLog from the indexer for a given namespace and name.
func (s queryLogNamespaceLister) Get(name string) (*v1alpha1.QueryLog, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("querylog"), name)
	}
	return obj.(*v1alpha1.QueryLog), nil
}
