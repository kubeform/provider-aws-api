/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/route53/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ZoneAssociationLister helps list ZoneAssociations.
// All objects returned here must be treated as read-only.
type ZoneAssociationLister interface {
	// List lists all ZoneAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZoneAssociation, err error)
	// ZoneAssociations returns an object that can list and get ZoneAssociations.
	ZoneAssociations(namespace string) ZoneAssociationNamespaceLister
	ZoneAssociationListerExpansion
}

// zoneAssociationLister implements the ZoneAssociationLister interface.
type zoneAssociationLister struct {
	indexer cache.Indexer
}

// NewZoneAssociationLister returns a new ZoneAssociationLister.
func NewZoneAssociationLister(indexer cache.Indexer) ZoneAssociationLister {
	return &zoneAssociationLister{indexer: indexer}
}

// List lists all ZoneAssociations in the indexer.
func (s *zoneAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.ZoneAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZoneAssociation))
	})
	return ret, err
}

// ZoneAssociations returns an object that can list and get ZoneAssociations.
func (s *zoneAssociationLister) ZoneAssociations(namespace string) ZoneAssociationNamespaceLister {
	return zoneAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ZoneAssociationNamespaceLister helps list and get ZoneAssociations.
// All objects returned here must be treated as read-only.
type ZoneAssociationNamespaceLister interface {
	// List lists all ZoneAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZoneAssociation, err error)
	// Get retrieves the ZoneAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ZoneAssociation, error)
	ZoneAssociationNamespaceListerExpansion
}

// zoneAssociationNamespaceLister implements the ZoneAssociationNamespaceLister
// interface.
type zoneAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ZoneAssociations in the indexer for a given namespace.
func (s zoneAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ZoneAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZoneAssociation))
	})
	return ret, err
}

// Get retrieves the ZoneAssociation from the indexer for a given namespace and name.
func (s zoneAssociationNamespaceLister) Get(name string) (*v1alpha1.ZoneAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("zoneassociation"), name)
	}
	return obj.(*v1alpha1.ZoneAssociation), nil
}
