/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ami/v1alpha1"
)

// CopyLister helps list Copies.
// All objects returned here must be treated as read-only.
type CopyLister interface {
	// List lists all Copies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Copy, err error)
	// Copies returns an object that can list and get Copies.
	Copies(namespace string) CopyNamespaceLister
	CopyListerExpansion
}

// copyLister implements the CopyLister interface.
type copyLister struct {
	indexer cache.Indexer
}

// NewCopyLister returns a new CopyLister.
func NewCopyLister(indexer cache.Indexer) CopyLister {
	return &copyLister{indexer: indexer}
}

// List lists all Copies in the indexer.
func (s *copyLister) List(selector labels.Selector) (ret []*v1alpha1.Copy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Copy))
	})
	return ret, err
}

// Copies returns an object that can list and get Copies.
func (s *copyLister) Copies(namespace string) CopyNamespaceLister {
	return copyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CopyNamespaceLister helps list and get Copies.
// All objects returned here must be treated as read-only.
type CopyNamespaceLister interface {
	// List lists all Copies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Copy, err error)
	// Get retrieves the Copy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Copy, error)
	CopyNamespaceListerExpansion
}

// copyNamespaceLister implements the CopyNamespaceLister
// interface.
type copyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Copies in the indexer for a given namespace.
func (s copyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Copy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Copy))
	})
	return ret, err
}

// Get retrieves the Copy from the indexer for a given namespace and name.
func (s copyNamespaceLister) Get(name string) (*v1alpha1.Copy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("copy"), name)
	}
	return obj.(*v1alpha1.Copy), nil
}
