/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/config/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OrganizationCustomRuleLister helps list OrganizationCustomRules.
// All objects returned here must be treated as read-only.
type OrganizationCustomRuleLister interface {
	// List lists all OrganizationCustomRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationCustomRule, err error)
	// OrganizationCustomRules returns an object that can list and get OrganizationCustomRules.
	OrganizationCustomRules(namespace string) OrganizationCustomRuleNamespaceLister
	OrganizationCustomRuleListerExpansion
}

// organizationCustomRuleLister implements the OrganizationCustomRuleLister interface.
type organizationCustomRuleLister struct {
	indexer cache.Indexer
}

// NewOrganizationCustomRuleLister returns a new OrganizationCustomRuleLister.
func NewOrganizationCustomRuleLister(indexer cache.Indexer) OrganizationCustomRuleLister {
	return &organizationCustomRuleLister{indexer: indexer}
}

// List lists all OrganizationCustomRules in the indexer.
func (s *organizationCustomRuleLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationCustomRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationCustomRule))
	})
	return ret, err
}

// OrganizationCustomRules returns an object that can list and get OrganizationCustomRules.
func (s *organizationCustomRuleLister) OrganizationCustomRules(namespace string) OrganizationCustomRuleNamespaceLister {
	return organizationCustomRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrganizationCustomRuleNamespaceLister helps list and get OrganizationCustomRules.
// All objects returned here must be treated as read-only.
type OrganizationCustomRuleNamespaceLister interface {
	// List lists all OrganizationCustomRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationCustomRule, err error)
	// Get retrieves the OrganizationCustomRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OrganizationCustomRule, error)
	OrganizationCustomRuleNamespaceListerExpansion
}

// organizationCustomRuleNamespaceLister implements the OrganizationCustomRuleNamespaceLister
// interface.
type organizationCustomRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrganizationCustomRules in the indexer for a given namespace.
func (s organizationCustomRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationCustomRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationCustomRule))
	})
	return ret, err
}

// Get retrieves the OrganizationCustomRule from the indexer for a given namespace and name.
func (s organizationCustomRuleNamespaceLister) Get(name string) (*v1alpha1.OrganizationCustomRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("organizationcustomrule"), name)
	}
	return obj.(*v1alpha1.OrganizationCustomRule), nil
}
