/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/connect/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// QuickConnectLister helps list QuickConnects.
// All objects returned here must be treated as read-only.
type QuickConnectLister interface {
	// List lists all QuickConnects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.QuickConnect, err error)
	// QuickConnects returns an object that can list and get QuickConnects.
	QuickConnects(namespace string) QuickConnectNamespaceLister
	QuickConnectListerExpansion
}

// quickConnectLister implements the QuickConnectLister interface.
type quickConnectLister struct {
	indexer cache.Indexer
}

// NewQuickConnectLister returns a new QuickConnectLister.
func NewQuickConnectLister(indexer cache.Indexer) QuickConnectLister {
	return &quickConnectLister{indexer: indexer}
}

// List lists all QuickConnects in the indexer.
func (s *quickConnectLister) List(selector labels.Selector) (ret []*v1alpha1.QuickConnect, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QuickConnect))
	})
	return ret, err
}

// QuickConnects returns an object that can list and get QuickConnects.
func (s *quickConnectLister) QuickConnects(namespace string) QuickConnectNamespaceLister {
	return quickConnectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// QuickConnectNamespaceLister helps list and get QuickConnects.
// All objects returned here must be treated as read-only.
type QuickConnectNamespaceLister interface {
	// List lists all QuickConnects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.QuickConnect, err error)
	// Get retrieves the QuickConnect from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.QuickConnect, error)
	QuickConnectNamespaceListerExpansion
}

// quickConnectNamespaceLister implements the QuickConnectNamespaceLister
// interface.
type quickConnectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all QuickConnects in the indexer for a given namespace.
func (s quickConnectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.QuickConnect, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QuickConnect))
	})
	return ret, err
}

// Get retrieves the QuickConnect from the indexer for a given namespace and name.
func (s quickConnectNamespaceLister) Get(name string) (*v1alpha1.QuickConnect, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("quickconnect"), name)
	}
	return obj.(*v1alpha1.QuickConnect), nil
}
