/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/connect/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContactFlowLister helps list ContactFlows.
// All objects returned here must be treated as read-only.
type ContactFlowLister interface {
	// List lists all ContactFlows in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContactFlow, err error)
	// ContactFlows returns an object that can list and get ContactFlows.
	ContactFlows(namespace string) ContactFlowNamespaceLister
	ContactFlowListerExpansion
}

// contactFlowLister implements the ContactFlowLister interface.
type contactFlowLister struct {
	indexer cache.Indexer
}

// NewContactFlowLister returns a new ContactFlowLister.
func NewContactFlowLister(indexer cache.Indexer) ContactFlowLister {
	return &contactFlowLister{indexer: indexer}
}

// List lists all ContactFlows in the indexer.
func (s *contactFlowLister) List(selector labels.Selector) (ret []*v1alpha1.ContactFlow, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContactFlow))
	})
	return ret, err
}

// ContactFlows returns an object that can list and get ContactFlows.
func (s *contactFlowLister) ContactFlows(namespace string) ContactFlowNamespaceLister {
	return contactFlowNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContactFlowNamespaceLister helps list and get ContactFlows.
// All objects returned here must be treated as read-only.
type ContactFlowNamespaceLister interface {
	// List lists all ContactFlows in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContactFlow, err error)
	// Get retrieves the ContactFlow from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ContactFlow, error)
	ContactFlowNamespaceListerExpansion
}

// contactFlowNamespaceLister implements the ContactFlowNamespaceLister
// interface.
type contactFlowNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContactFlows in the indexer for a given namespace.
func (s contactFlowNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ContactFlow, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContactFlow))
	})
	return ret, err
}

// Get retrieves the ContactFlow from the indexer for a given namespace and name.
func (s contactFlowNamespaceLister) Get(name string) (*v1alpha1.ContactFlow, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("contactflow"), name)
	}
	return obj.(*v1alpha1.ContactFlow), nil
}
