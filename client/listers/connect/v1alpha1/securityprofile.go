/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/connect/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecurityProfileLister helps list SecurityProfiles.
// All objects returned here must be treated as read-only.
type SecurityProfileLister interface {
	// List lists all SecurityProfiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityProfile, err error)
	// SecurityProfiles returns an object that can list and get SecurityProfiles.
	SecurityProfiles(namespace string) SecurityProfileNamespaceLister
	SecurityProfileListerExpansion
}

// securityProfileLister implements the SecurityProfileLister interface.
type securityProfileLister struct {
	indexer cache.Indexer
}

// NewSecurityProfileLister returns a new SecurityProfileLister.
func NewSecurityProfileLister(indexer cache.Indexer) SecurityProfileLister {
	return &securityProfileLister{indexer: indexer}
}

// List lists all SecurityProfiles in the indexer.
func (s *securityProfileLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityProfile, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityProfile))
	})
	return ret, err
}

// SecurityProfiles returns an object that can list and get SecurityProfiles.
func (s *securityProfileLister) SecurityProfiles(namespace string) SecurityProfileNamespaceLister {
	return securityProfileNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecurityProfileNamespaceLister helps list and get SecurityProfiles.
// All objects returned here must be treated as read-only.
type SecurityProfileNamespaceLister interface {
	// List lists all SecurityProfiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityProfile, err error)
	// Get retrieves the SecurityProfile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SecurityProfile, error)
	SecurityProfileNamespaceListerExpansion
}

// securityProfileNamespaceLister implements the SecurityProfileNamespaceLister
// interface.
type securityProfileNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecurityProfiles in the indexer for a given namespace.
func (s securityProfileNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityProfile, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityProfile))
	})
	return ret, err
}

// Get retrieves the SecurityProfile from the indexer for a given namespace and name.
func (s securityProfileNamespaceLister) Get(name string) (*v1alpha1.SecurityProfile, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("securityprofile"), name)
	}
	return obj.(*v1alpha1.SecurityProfile), nil
}
