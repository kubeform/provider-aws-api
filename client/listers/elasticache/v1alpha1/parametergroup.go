/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/elasticache/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ParameterGroupLister helps list ParameterGroups.
// All objects returned here must be treated as read-only.
type ParameterGroupLister interface {
	// List lists all ParameterGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ParameterGroup, err error)
	// ParameterGroups returns an object that can list and get ParameterGroups.
	ParameterGroups(namespace string) ParameterGroupNamespaceLister
	ParameterGroupListerExpansion
}

// parameterGroupLister implements the ParameterGroupLister interface.
type parameterGroupLister struct {
	indexer cache.Indexer
}

// NewParameterGroupLister returns a new ParameterGroupLister.
func NewParameterGroupLister(indexer cache.Indexer) ParameterGroupLister {
	return &parameterGroupLister{indexer: indexer}
}

// List lists all ParameterGroups in the indexer.
func (s *parameterGroupLister) List(selector labels.Selector) (ret []*v1alpha1.ParameterGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ParameterGroup))
	})
	return ret, err
}

// ParameterGroups returns an object that can list and get ParameterGroups.
func (s *parameterGroupLister) ParameterGroups(namespace string) ParameterGroupNamespaceLister {
	return parameterGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ParameterGroupNamespaceLister helps list and get ParameterGroups.
// All objects returned here must be treated as read-only.
type ParameterGroupNamespaceLister interface {
	// List lists all ParameterGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ParameterGroup, err error)
	// Get retrieves the ParameterGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ParameterGroup, error)
	ParameterGroupNamespaceListerExpansion
}

// parameterGroupNamespaceLister implements the ParameterGroupNamespaceLister
// interface.
type parameterGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ParameterGroups in the indexer for a given namespace.
func (s parameterGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ParameterGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ParameterGroup))
	})
	return ret, err
}

// Get retrieves the ParameterGroup from the indexer for a given namespace and name.
func (s parameterGroupNamespaceLister) Get(name string) (*v1alpha1.ParameterGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("parametergroup"), name)
	}
	return obj.(*v1alpha1.ParameterGroup), nil
}
