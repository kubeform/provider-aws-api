/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/redshift/v1alpha1"
)

// SnapshotCopyGrantLister helps list SnapshotCopyGrants.
// All objects returned here must be treated as read-only.
type SnapshotCopyGrantLister interface {
	// List lists all SnapshotCopyGrants in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopyGrant, err error)
	// SnapshotCopyGrants returns an object that can list and get SnapshotCopyGrants.
	SnapshotCopyGrants(namespace string) SnapshotCopyGrantNamespaceLister
	SnapshotCopyGrantListerExpansion
}

// snapshotCopyGrantLister implements the SnapshotCopyGrantLister interface.
type snapshotCopyGrantLister struct {
	indexer cache.Indexer
}

// NewSnapshotCopyGrantLister returns a new SnapshotCopyGrantLister.
func NewSnapshotCopyGrantLister(indexer cache.Indexer) SnapshotCopyGrantLister {
	return &snapshotCopyGrantLister{indexer: indexer}
}

// List lists all SnapshotCopyGrants in the indexer.
func (s *snapshotCopyGrantLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopyGrant, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotCopyGrant))
	})
	return ret, err
}

// SnapshotCopyGrants returns an object that can list and get SnapshotCopyGrants.
func (s *snapshotCopyGrantLister) SnapshotCopyGrants(namespace string) SnapshotCopyGrantNamespaceLister {
	return snapshotCopyGrantNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SnapshotCopyGrantNamespaceLister helps list and get SnapshotCopyGrants.
// All objects returned here must be treated as read-only.
type SnapshotCopyGrantNamespaceLister interface {
	// List lists all SnapshotCopyGrants in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopyGrant, err error)
	// Get retrieves the SnapshotCopyGrant from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SnapshotCopyGrant, error)
	SnapshotCopyGrantNamespaceListerExpansion
}

// snapshotCopyGrantNamespaceLister implements the SnapshotCopyGrantNamespaceLister
// interface.
type snapshotCopyGrantNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SnapshotCopyGrants in the indexer for a given namespace.
func (s snapshotCopyGrantNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopyGrant, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotCopyGrant))
	})
	return ret, err
}

// Get retrieves the SnapshotCopyGrant from the indexer for a given namespace and name.
func (s snapshotCopyGrantNamespaceLister) Get(name string) (*v1alpha1.SnapshotCopyGrant, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("snapshotcopygrant"), name)
	}
	return obj.(*v1alpha1.SnapshotCopyGrant), nil
}
