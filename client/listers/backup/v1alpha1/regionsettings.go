/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/backup/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RegionSettingsLister helps list RegionSettingses.
// All objects returned here must be treated as read-only.
type RegionSettingsLister interface {
	// List lists all RegionSettingses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionSettings, err error)
	// RegionSettingses returns an object that can list and get RegionSettingses.
	RegionSettingses(namespace string) RegionSettingsNamespaceLister
	RegionSettingsListerExpansion
}

// regionSettingsLister implements the RegionSettingsLister interface.
type regionSettingsLister struct {
	indexer cache.Indexer
}

// NewRegionSettingsLister returns a new RegionSettingsLister.
func NewRegionSettingsLister(indexer cache.Indexer) RegionSettingsLister {
	return &regionSettingsLister{indexer: indexer}
}

// List lists all RegionSettingses in the indexer.
func (s *regionSettingsLister) List(selector labels.Selector) (ret []*v1alpha1.RegionSettings, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionSettings))
	})
	return ret, err
}

// RegionSettingses returns an object that can list and get RegionSettingses.
func (s *regionSettingsLister) RegionSettingses(namespace string) RegionSettingsNamespaceLister {
	return regionSettingsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RegionSettingsNamespaceLister helps list and get RegionSettingses.
// All objects returned here must be treated as read-only.
type RegionSettingsNamespaceLister interface {
	// List lists all RegionSettingses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionSettings, err error)
	// Get retrieves the RegionSettings from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RegionSettings, error)
	RegionSettingsNamespaceListerExpansion
}

// regionSettingsNamespaceLister implements the RegionSettingsNamespaceLister
// interface.
type regionSettingsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RegionSettingses in the indexer for a given namespace.
func (s regionSettingsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RegionSettings, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionSettings))
	})
	return ret, err
}

// Get retrieves the RegionSettings from the indexer for a given namespace and name.
func (s regionSettingsNamespaceLister) Get(name string) (*v1alpha1.RegionSettings, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("regionsettings"), name)
	}
	return obj.(*v1alpha1.RegionSettings), nil
}
