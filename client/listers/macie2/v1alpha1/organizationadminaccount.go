/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/macie2/v1alpha1"
)

// OrganizationAdminAccountLister helps list OrganizationAdminAccounts.
// All objects returned here must be treated as read-only.
type OrganizationAdminAccountLister interface {
	// List lists all OrganizationAdminAccounts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationAdminAccount, err error)
	// OrganizationAdminAccounts returns an object that can list and get OrganizationAdminAccounts.
	OrganizationAdminAccounts(namespace string) OrganizationAdminAccountNamespaceLister
	OrganizationAdminAccountListerExpansion
}

// organizationAdminAccountLister implements the OrganizationAdminAccountLister interface.
type organizationAdminAccountLister struct {
	indexer cache.Indexer
}

// NewOrganizationAdminAccountLister returns a new OrganizationAdminAccountLister.
func NewOrganizationAdminAccountLister(indexer cache.Indexer) OrganizationAdminAccountLister {
	return &organizationAdminAccountLister{indexer: indexer}
}

// List lists all OrganizationAdminAccounts in the indexer.
func (s *organizationAdminAccountLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationAdminAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationAdminAccount))
	})
	return ret, err
}

// OrganizationAdminAccounts returns an object that can list and get OrganizationAdminAccounts.
func (s *organizationAdminAccountLister) OrganizationAdminAccounts(namespace string) OrganizationAdminAccountNamespaceLister {
	return organizationAdminAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrganizationAdminAccountNamespaceLister helps list and get OrganizationAdminAccounts.
// All objects returned here must be treated as read-only.
type OrganizationAdminAccountNamespaceLister interface {
	// List lists all OrganizationAdminAccounts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationAdminAccount, err error)
	// Get retrieves the OrganizationAdminAccount from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OrganizationAdminAccount, error)
	OrganizationAdminAccountNamespaceListerExpansion
}

// organizationAdminAccountNamespaceLister implements the OrganizationAdminAccountNamespaceLister
// interface.
type organizationAdminAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrganizationAdminAccounts in the indexer for a given namespace.
func (s organizationAdminAccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationAdminAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationAdminAccount))
	})
	return ret, err
}

// Get retrieves the OrganizationAdminAccount from the indexer for a given namespace and name.
func (s organizationAdminAccountNamespaceLister) Get(name string) (*v1alpha1.OrganizationAdminAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("organizationadminaccount"), name)
	}
	return obj.(*v1alpha1.OrganizationAdminAccount), nil
}
