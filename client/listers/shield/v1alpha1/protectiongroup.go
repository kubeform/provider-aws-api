/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/shield/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ProtectionGroupLister helps list ProtectionGroups.
// All objects returned here must be treated as read-only.
type ProtectionGroupLister interface {
	// List lists all ProtectionGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionGroup, err error)
	// ProtectionGroups returns an object that can list and get ProtectionGroups.
	ProtectionGroups(namespace string) ProtectionGroupNamespaceLister
	ProtectionGroupListerExpansion
}

// protectionGroupLister implements the ProtectionGroupLister interface.
type protectionGroupLister struct {
	indexer cache.Indexer
}

// NewProtectionGroupLister returns a new ProtectionGroupLister.
func NewProtectionGroupLister(indexer cache.Indexer) ProtectionGroupLister {
	return &protectionGroupLister{indexer: indexer}
}

// List lists all ProtectionGroups in the indexer.
func (s *protectionGroupLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionGroup))
	})
	return ret, err
}

// ProtectionGroups returns an object that can list and get ProtectionGroups.
func (s *protectionGroupLister) ProtectionGroups(namespace string) ProtectionGroupNamespaceLister {
	return protectionGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ProtectionGroupNamespaceLister helps list and get ProtectionGroups.
// All objects returned here must be treated as read-only.
type ProtectionGroupNamespaceLister interface {
	// List lists all ProtectionGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionGroup, err error)
	// Get retrieves the ProtectionGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ProtectionGroup, error)
	ProtectionGroupNamespaceListerExpansion
}

// protectionGroupNamespaceLister implements the ProtectionGroupNamespaceLister
// interface.
type protectionGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ProtectionGroups in the indexer for a given namespace.
func (s protectionGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionGroup))
	})
	return ret, err
}

// Get retrieves the ProtectionGroup from the indexer for a given namespace and name.
func (s protectionGroupNamespaceLister) Get(name string) (*v1alpha1.ProtectionGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("protectiongroup"), name)
	}
	return obj.(*v1alpha1.ProtectionGroup), nil
}
