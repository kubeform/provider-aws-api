/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ram/v1alpha1"
)

// ResourceAssociationLister helps list ResourceAssociations.
// All objects returned here must be treated as read-only.
type ResourceAssociationLister interface {
	// List lists all ResourceAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceAssociation, err error)
	// ResourceAssociations returns an object that can list and get ResourceAssociations.
	ResourceAssociations(namespace string) ResourceAssociationNamespaceLister
	ResourceAssociationListerExpansion
}

// resourceAssociationLister implements the ResourceAssociationLister interface.
type resourceAssociationLister struct {
	indexer cache.Indexer
}

// NewResourceAssociationLister returns a new ResourceAssociationLister.
func NewResourceAssociationLister(indexer cache.Indexer) ResourceAssociationLister {
	return &resourceAssociationLister{indexer: indexer}
}

// List lists all ResourceAssociations in the indexer.
func (s *resourceAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceAssociation))
	})
	return ret, err
}

// ResourceAssociations returns an object that can list and get ResourceAssociations.
func (s *resourceAssociationLister) ResourceAssociations(namespace string) ResourceAssociationNamespaceLister {
	return resourceAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceAssociationNamespaceLister helps list and get ResourceAssociations.
// All objects returned here must be treated as read-only.
type ResourceAssociationNamespaceLister interface {
	// List lists all ResourceAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceAssociation, err error)
	// Get retrieves the ResourceAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ResourceAssociation, error)
	ResourceAssociationNamespaceListerExpansion
}

// resourceAssociationNamespaceLister implements the ResourceAssociationNamespaceLister
// interface.
type resourceAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceAssociations in the indexer for a given namespace.
func (s resourceAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceAssociation))
	})
	return ret, err
}

// Get retrieves the ResourceAssociation from the indexer for a given namespace and name.
func (s resourceAssociationNamespaceLister) Get(name string) (*v1alpha1.ResourceAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourceassociation"), name)
	}
	return obj.(*v1alpha1.ResourceAssociation), nil
}
