/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/prometheus/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AlertManagerDefinitionLister helps list AlertManagerDefinitions.
// All objects returned here must be treated as read-only.
type AlertManagerDefinitionLister interface {
	// List lists all AlertManagerDefinitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlertManagerDefinition, err error)
	// AlertManagerDefinitions returns an object that can list and get AlertManagerDefinitions.
	AlertManagerDefinitions(namespace string) AlertManagerDefinitionNamespaceLister
	AlertManagerDefinitionListerExpansion
}

// alertManagerDefinitionLister implements the AlertManagerDefinitionLister interface.
type alertManagerDefinitionLister struct {
	indexer cache.Indexer
}

// NewAlertManagerDefinitionLister returns a new AlertManagerDefinitionLister.
func NewAlertManagerDefinitionLister(indexer cache.Indexer) AlertManagerDefinitionLister {
	return &alertManagerDefinitionLister{indexer: indexer}
}

// List lists all AlertManagerDefinitions in the indexer.
func (s *alertManagerDefinitionLister) List(selector labels.Selector) (ret []*v1alpha1.AlertManagerDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlertManagerDefinition))
	})
	return ret, err
}

// AlertManagerDefinitions returns an object that can list and get AlertManagerDefinitions.
func (s *alertManagerDefinitionLister) AlertManagerDefinitions(namespace string) AlertManagerDefinitionNamespaceLister {
	return alertManagerDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AlertManagerDefinitionNamespaceLister helps list and get AlertManagerDefinitions.
// All objects returned here must be treated as read-only.
type AlertManagerDefinitionNamespaceLister interface {
	// List lists all AlertManagerDefinitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlertManagerDefinition, err error)
	// Get retrieves the AlertManagerDefinition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AlertManagerDefinition, error)
	AlertManagerDefinitionNamespaceListerExpansion
}

// alertManagerDefinitionNamespaceLister implements the AlertManagerDefinitionNamespaceLister
// interface.
type alertManagerDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AlertManagerDefinitions in the indexer for a given namespace.
func (s alertManagerDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AlertManagerDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlertManagerDefinition))
	})
	return ret, err
}

// Get retrieves the AlertManagerDefinition from the indexer for a given namespace and name.
func (s alertManagerDefinitionNamespaceLister) Get(name string) (*v1alpha1.AlertManagerDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("alertmanagerdefinition"), name)
	}
	return obj.(*v1alpha1.AlertManagerDefinition), nil
}
