/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/spot/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstanceRequestLister helps list InstanceRequests.
// All objects returned here must be treated as read-only.
type InstanceRequestLister interface {
	// List lists all InstanceRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceRequest, err error)
	// InstanceRequests returns an object that can list and get InstanceRequests.
	InstanceRequests(namespace string) InstanceRequestNamespaceLister
	InstanceRequestListerExpansion
}

// instanceRequestLister implements the InstanceRequestLister interface.
type instanceRequestLister struct {
	indexer cache.Indexer
}

// NewInstanceRequestLister returns a new InstanceRequestLister.
func NewInstanceRequestLister(indexer cache.Indexer) InstanceRequestLister {
	return &instanceRequestLister{indexer: indexer}
}

// List lists all InstanceRequests in the indexer.
func (s *instanceRequestLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceRequest))
	})
	return ret, err
}

// InstanceRequests returns an object that can list and get InstanceRequests.
func (s *instanceRequestLister) InstanceRequests(namespace string) InstanceRequestNamespaceLister {
	return instanceRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceRequestNamespaceLister helps list and get InstanceRequests.
// All objects returned here must be treated as read-only.
type InstanceRequestNamespaceLister interface {
	// List lists all InstanceRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceRequest, err error)
	// Get retrieves the InstanceRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstanceRequest, error)
	InstanceRequestNamespaceListerExpansion
}

// instanceRequestNamespaceLister implements the InstanceRequestNamespaceLister
// interface.
type instanceRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceRequests in the indexer for a given namespace.
func (s instanceRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceRequest))
	})
	return ret, err
}

// Get retrieves the InstanceRequest from the indexer for a given namespace and name.
func (s instanceRequestNamespaceLister) Get(name string) (*v1alpha1.InstanceRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancerequest"), name)
	}
	return obj.(*v1alpha1.InstanceRequest), nil
}
