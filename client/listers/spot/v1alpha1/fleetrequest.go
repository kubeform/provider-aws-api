/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/spot/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FleetRequestLister helps list FleetRequests.
// All objects returned here must be treated as read-only.
type FleetRequestLister interface {
	// List lists all FleetRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FleetRequest, err error)
	// FleetRequests returns an object that can list and get FleetRequests.
	FleetRequests(namespace string) FleetRequestNamespaceLister
	FleetRequestListerExpansion
}

// fleetRequestLister implements the FleetRequestLister interface.
type fleetRequestLister struct {
	indexer cache.Indexer
}

// NewFleetRequestLister returns a new FleetRequestLister.
func NewFleetRequestLister(indexer cache.Indexer) FleetRequestLister {
	return &fleetRequestLister{indexer: indexer}
}

// List lists all FleetRequests in the indexer.
func (s *fleetRequestLister) List(selector labels.Selector) (ret []*v1alpha1.FleetRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FleetRequest))
	})
	return ret, err
}

// FleetRequests returns an object that can list and get FleetRequests.
func (s *fleetRequestLister) FleetRequests(namespace string) FleetRequestNamespaceLister {
	return fleetRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FleetRequestNamespaceLister helps list and get FleetRequests.
// All objects returned here must be treated as read-only.
type FleetRequestNamespaceLister interface {
	// List lists all FleetRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FleetRequest, err error)
	// Get retrieves the FleetRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FleetRequest, error)
	FleetRequestNamespaceListerExpansion
}

// fleetRequestNamespaceLister implements the FleetRequestNamespaceLister
// interface.
type fleetRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FleetRequests in the indexer for a given namespace.
func (s fleetRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FleetRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FleetRequest))
	})
	return ret, err
}

// Get retrieves the FleetRequest from the indexer for a given namespace and name.
func (s fleetRequestNamespaceLister) Get(name string) (*v1alpha1.FleetRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fleetrequest"), name)
	}
	return obj.(*v1alpha1.FleetRequest), nil
}
