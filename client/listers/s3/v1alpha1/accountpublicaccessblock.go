/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/s3/v1alpha1"
)

// AccountPublicAccessBlockLister helps list AccountPublicAccessBlocks.
// All objects returned here must be treated as read-only.
type AccountPublicAccessBlockLister interface {
	// List lists all AccountPublicAccessBlocks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccountPublicAccessBlock, err error)
	// AccountPublicAccessBlocks returns an object that can list and get AccountPublicAccessBlocks.
	AccountPublicAccessBlocks(namespace string) AccountPublicAccessBlockNamespaceLister
	AccountPublicAccessBlockListerExpansion
}

// accountPublicAccessBlockLister implements the AccountPublicAccessBlockLister interface.
type accountPublicAccessBlockLister struct {
	indexer cache.Indexer
}

// NewAccountPublicAccessBlockLister returns a new AccountPublicAccessBlockLister.
func NewAccountPublicAccessBlockLister(indexer cache.Indexer) AccountPublicAccessBlockLister {
	return &accountPublicAccessBlockLister{indexer: indexer}
}

// List lists all AccountPublicAccessBlocks in the indexer.
func (s *accountPublicAccessBlockLister) List(selector labels.Selector) (ret []*v1alpha1.AccountPublicAccessBlock, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccountPublicAccessBlock))
	})
	return ret, err
}

// AccountPublicAccessBlocks returns an object that can list and get AccountPublicAccessBlocks.
func (s *accountPublicAccessBlockLister) AccountPublicAccessBlocks(namespace string) AccountPublicAccessBlockNamespaceLister {
	return accountPublicAccessBlockNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AccountPublicAccessBlockNamespaceLister helps list and get AccountPublicAccessBlocks.
// All objects returned here must be treated as read-only.
type AccountPublicAccessBlockNamespaceLister interface {
	// List lists all AccountPublicAccessBlocks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccountPublicAccessBlock, err error)
	// Get retrieves the AccountPublicAccessBlock from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AccountPublicAccessBlock, error)
	AccountPublicAccessBlockNamespaceListerExpansion
}

// accountPublicAccessBlockNamespaceLister implements the AccountPublicAccessBlockNamespaceLister
// interface.
type accountPublicAccessBlockNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AccountPublicAccessBlocks in the indexer for a given namespace.
func (s accountPublicAccessBlockNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AccountPublicAccessBlock, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccountPublicAccessBlock))
	})
	return ret, err
}

// Get retrieves the AccountPublicAccessBlock from the indexer for a given namespace and name.
func (s accountPublicAccessBlockNamespaceLister) Get(name string) (*v1alpha1.AccountPublicAccessBlock, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("accountpublicaccessblock"), name)
	}
	return obj.(*v1alpha1.AccountPublicAccessBlock), nil
}
