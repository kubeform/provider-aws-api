/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/s3/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BucketServerSideEncryptionConfigurationLister helps list BucketServerSideEncryptionConfigurations.
// All objects returned here must be treated as read-only.
type BucketServerSideEncryptionConfigurationLister interface {
	// List lists all BucketServerSideEncryptionConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BucketServerSideEncryptionConfiguration, err error)
	// BucketServerSideEncryptionConfigurations returns an object that can list and get BucketServerSideEncryptionConfigurations.
	BucketServerSideEncryptionConfigurations(namespace string) BucketServerSideEncryptionConfigurationNamespaceLister
	BucketServerSideEncryptionConfigurationListerExpansion
}

// bucketServerSideEncryptionConfigurationLister implements the BucketServerSideEncryptionConfigurationLister interface.
type bucketServerSideEncryptionConfigurationLister struct {
	indexer cache.Indexer
}

// NewBucketServerSideEncryptionConfigurationLister returns a new BucketServerSideEncryptionConfigurationLister.
func NewBucketServerSideEncryptionConfigurationLister(indexer cache.Indexer) BucketServerSideEncryptionConfigurationLister {
	return &bucketServerSideEncryptionConfigurationLister{indexer: indexer}
}

// List lists all BucketServerSideEncryptionConfigurations in the indexer.
func (s *bucketServerSideEncryptionConfigurationLister) List(selector labels.Selector) (ret []*v1alpha1.BucketServerSideEncryptionConfiguration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BucketServerSideEncryptionConfiguration))
	})
	return ret, err
}

// BucketServerSideEncryptionConfigurations returns an object that can list and get BucketServerSideEncryptionConfigurations.
func (s *bucketServerSideEncryptionConfigurationLister) BucketServerSideEncryptionConfigurations(namespace string) BucketServerSideEncryptionConfigurationNamespaceLister {
	return bucketServerSideEncryptionConfigurationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BucketServerSideEncryptionConfigurationNamespaceLister helps list and get BucketServerSideEncryptionConfigurations.
// All objects returned here must be treated as read-only.
type BucketServerSideEncryptionConfigurationNamespaceLister interface {
	// List lists all BucketServerSideEncryptionConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BucketServerSideEncryptionConfiguration, err error)
	// Get retrieves the BucketServerSideEncryptionConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BucketServerSideEncryptionConfiguration, error)
	BucketServerSideEncryptionConfigurationNamespaceListerExpansion
}

// bucketServerSideEncryptionConfigurationNamespaceLister implements the BucketServerSideEncryptionConfigurationNamespaceLister
// interface.
type bucketServerSideEncryptionConfigurationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BucketServerSideEncryptionConfigurations in the indexer for a given namespace.
func (s bucketServerSideEncryptionConfigurationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BucketServerSideEncryptionConfiguration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BucketServerSideEncryptionConfiguration))
	})
	return ret, err
}

// Get retrieves the BucketServerSideEncryptionConfiguration from the indexer for a given namespace and name.
func (s bucketServerSideEncryptionConfigurationNamespaceLister) Get(name string) (*v1alpha1.BucketServerSideEncryptionConfiguration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bucketserversideencryptionconfiguration"), name)
	}
	return obj.(*v1alpha1.BucketServerSideEncryptionConfiguration), nil
}
