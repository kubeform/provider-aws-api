/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/s3/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ObjectCopyLister helps list ObjectCopies.
// All objects returned here must be treated as read-only.
type ObjectCopyLister interface {
	// List lists all ObjectCopies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ObjectCopy, err error)
	// ObjectCopies returns an object that can list and get ObjectCopies.
	ObjectCopies(namespace string) ObjectCopyNamespaceLister
	ObjectCopyListerExpansion
}

// objectCopyLister implements the ObjectCopyLister interface.
type objectCopyLister struct {
	indexer cache.Indexer
}

// NewObjectCopyLister returns a new ObjectCopyLister.
func NewObjectCopyLister(indexer cache.Indexer) ObjectCopyLister {
	return &objectCopyLister{indexer: indexer}
}

// List lists all ObjectCopies in the indexer.
func (s *objectCopyLister) List(selector labels.Selector) (ret []*v1alpha1.ObjectCopy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObjectCopy))
	})
	return ret, err
}

// ObjectCopies returns an object that can list and get ObjectCopies.
func (s *objectCopyLister) ObjectCopies(namespace string) ObjectCopyNamespaceLister {
	return objectCopyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ObjectCopyNamespaceLister helps list and get ObjectCopies.
// All objects returned here must be treated as read-only.
type ObjectCopyNamespaceLister interface {
	// List lists all ObjectCopies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ObjectCopy, err error)
	// Get retrieves the ObjectCopy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ObjectCopy, error)
	ObjectCopyNamespaceListerExpansion
}

// objectCopyNamespaceLister implements the ObjectCopyNamespaceLister
// interface.
type objectCopyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ObjectCopies in the indexer for a given namespace.
func (s objectCopyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ObjectCopy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObjectCopy))
	})
	return ret, err
}

// Get retrieves the ObjectCopy from the indexer for a given namespace and name.
func (s objectCopyNamespaceLister) Get(name string) (*v1alpha1.ObjectCopy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("objectcopy"), name)
	}
	return obj.(*v1alpha1.ObjectCopy), nil
}
