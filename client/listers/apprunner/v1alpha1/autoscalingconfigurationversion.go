/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/apprunner/v1alpha1"
)

// AutoScalingConfigurationVersionLister helps list AutoScalingConfigurationVersions.
// All objects returned here must be treated as read-only.
type AutoScalingConfigurationVersionLister interface {
	// List lists all AutoScalingConfigurationVersions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AutoScalingConfigurationVersion, err error)
	// AutoScalingConfigurationVersions returns an object that can list and get AutoScalingConfigurationVersions.
	AutoScalingConfigurationVersions(namespace string) AutoScalingConfigurationVersionNamespaceLister
	AutoScalingConfigurationVersionListerExpansion
}

// autoScalingConfigurationVersionLister implements the AutoScalingConfigurationVersionLister interface.
type autoScalingConfigurationVersionLister struct {
	indexer cache.Indexer
}

// NewAutoScalingConfigurationVersionLister returns a new AutoScalingConfigurationVersionLister.
func NewAutoScalingConfigurationVersionLister(indexer cache.Indexer) AutoScalingConfigurationVersionLister {
	return &autoScalingConfigurationVersionLister{indexer: indexer}
}

// List lists all AutoScalingConfigurationVersions in the indexer.
func (s *autoScalingConfigurationVersionLister) List(selector labels.Selector) (ret []*v1alpha1.AutoScalingConfigurationVersion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoScalingConfigurationVersion))
	})
	return ret, err
}

// AutoScalingConfigurationVersions returns an object that can list and get AutoScalingConfigurationVersions.
func (s *autoScalingConfigurationVersionLister) AutoScalingConfigurationVersions(namespace string) AutoScalingConfigurationVersionNamespaceLister {
	return autoScalingConfigurationVersionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AutoScalingConfigurationVersionNamespaceLister helps list and get AutoScalingConfigurationVersions.
// All objects returned here must be treated as read-only.
type AutoScalingConfigurationVersionNamespaceLister interface {
	// List lists all AutoScalingConfigurationVersions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AutoScalingConfigurationVersion, err error)
	// Get retrieves the AutoScalingConfigurationVersion from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AutoScalingConfigurationVersion, error)
	AutoScalingConfigurationVersionNamespaceListerExpansion
}

// autoScalingConfigurationVersionNamespaceLister implements the AutoScalingConfigurationVersionNamespaceLister
// interface.
type autoScalingConfigurationVersionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AutoScalingConfigurationVersions in the indexer for a given namespace.
func (s autoScalingConfigurationVersionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AutoScalingConfigurationVersion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoScalingConfigurationVersion))
	})
	return ret, err
}

// Get retrieves the AutoScalingConfigurationVersion from the indexer for a given namespace and name.
func (s autoScalingConfigurationVersionNamespaceLister) Get(name string) (*v1alpha1.AutoScalingConfigurationVersion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("autoscalingconfigurationversion"), name)
	}
	return obj.(*v1alpha1.AutoScalingConfigurationVersion), nil
}
