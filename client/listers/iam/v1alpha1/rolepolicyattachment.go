/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/iam/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RolePolicyAttachmentLister helps list RolePolicyAttachments.
// All objects returned here must be treated as read-only.
type RolePolicyAttachmentLister interface {
	// List lists all RolePolicyAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RolePolicyAttachment, err error)
	// RolePolicyAttachments returns an object that can list and get RolePolicyAttachments.
	RolePolicyAttachments(namespace string) RolePolicyAttachmentNamespaceLister
	RolePolicyAttachmentListerExpansion
}

// rolePolicyAttachmentLister implements the RolePolicyAttachmentLister interface.
type rolePolicyAttachmentLister struct {
	indexer cache.Indexer
}

// NewRolePolicyAttachmentLister returns a new RolePolicyAttachmentLister.
func NewRolePolicyAttachmentLister(indexer cache.Indexer) RolePolicyAttachmentLister {
	return &rolePolicyAttachmentLister{indexer: indexer}
}

// List lists all RolePolicyAttachments in the indexer.
func (s *rolePolicyAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.RolePolicyAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RolePolicyAttachment))
	})
	return ret, err
}

// RolePolicyAttachments returns an object that can list and get RolePolicyAttachments.
func (s *rolePolicyAttachmentLister) RolePolicyAttachments(namespace string) RolePolicyAttachmentNamespaceLister {
	return rolePolicyAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RolePolicyAttachmentNamespaceLister helps list and get RolePolicyAttachments.
// All objects returned here must be treated as read-only.
type RolePolicyAttachmentNamespaceLister interface {
	// List lists all RolePolicyAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RolePolicyAttachment, err error)
	// Get retrieves the RolePolicyAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RolePolicyAttachment, error)
	RolePolicyAttachmentNamespaceListerExpansion
}

// rolePolicyAttachmentNamespaceLister implements the RolePolicyAttachmentNamespaceLister
// interface.
type rolePolicyAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RolePolicyAttachments in the indexer for a given namespace.
func (s rolePolicyAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RolePolicyAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RolePolicyAttachment))
	})
	return ret, err
}

// Get retrieves the RolePolicyAttachment from the indexer for a given namespace and name.
func (s rolePolicyAttachmentNamespaceLister) Get(name string) (*v1alpha1.RolePolicyAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rolepolicyattachment"), name)
	}
	return obj.(*v1alpha1.RolePolicyAttachment), nil
}
