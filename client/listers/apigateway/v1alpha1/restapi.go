/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/apigateway/v1alpha1"
)

// RestAPILister helps list RestAPIs.
// All objects returned here must be treated as read-only.
type RestAPILister interface {
	// List lists all RestAPIs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RestAPI, err error)
	// RestAPIs returns an object that can list and get RestAPIs.
	RestAPIs(namespace string) RestAPINamespaceLister
	RestAPIListerExpansion
}

// restAPILister implements the RestAPILister interface.
type restAPILister struct {
	indexer cache.Indexer
}

// NewRestAPILister returns a new RestAPILister.
func NewRestAPILister(indexer cache.Indexer) RestAPILister {
	return &restAPILister{indexer: indexer}
}

// List lists all RestAPIs in the indexer.
func (s *restAPILister) List(selector labels.Selector) (ret []*v1alpha1.RestAPI, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RestAPI))
	})
	return ret, err
}

// RestAPIs returns an object that can list and get RestAPIs.
func (s *restAPILister) RestAPIs(namespace string) RestAPINamespaceLister {
	return restAPINamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RestAPINamespaceLister helps list and get RestAPIs.
// All objects returned here must be treated as read-only.
type RestAPINamespaceLister interface {
	// List lists all RestAPIs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RestAPI, err error)
	// Get retrieves the RestAPI from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RestAPI, error)
	RestAPINamespaceListerExpansion
}

// restAPINamespaceLister implements the RestAPINamespaceLister
// interface.
type restAPINamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RestAPIs in the indexer for a given namespace.
func (s restAPINamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RestAPI, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RestAPI))
	})
	return ret, err
}

// Get retrieves the RestAPI from the indexer for a given namespace and name.
func (s restAPINamespaceLister) Get(name string) (*v1alpha1.RestAPI, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("restapi"), name)
	}
	return obj.(*v1alpha1.RestAPI), nil
}
