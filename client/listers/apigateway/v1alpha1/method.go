/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/apigateway/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MethodLister helps list Methods.
// All objects returned here must be treated as read-only.
type MethodLister interface {
	// List lists all Methods in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Method, err error)
	// Methods returns an object that can list and get Methods.
	Methods(namespace string) MethodNamespaceLister
	MethodListerExpansion
}

// methodLister implements the MethodLister interface.
type methodLister struct {
	indexer cache.Indexer
}

// NewMethodLister returns a new MethodLister.
func NewMethodLister(indexer cache.Indexer) MethodLister {
	return &methodLister{indexer: indexer}
}

// List lists all Methods in the indexer.
func (s *methodLister) List(selector labels.Selector) (ret []*v1alpha1.Method, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Method))
	})
	return ret, err
}

// Methods returns an object that can list and get Methods.
func (s *methodLister) Methods(namespace string) MethodNamespaceLister {
	return methodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MethodNamespaceLister helps list and get Methods.
// All objects returned here must be treated as read-only.
type MethodNamespaceLister interface {
	// List lists all Methods in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Method, err error)
	// Get retrieves the Method from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Method, error)
	MethodNamespaceListerExpansion
}

// methodNamespaceLister implements the MethodNamespaceLister
// interface.
type methodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Methods in the indexer for a given namespace.
func (s methodNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Method, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Method))
	})
	return ret, err
}

// Get retrieves the Method from the indexer for a given namespace and name.
func (s methodNamespaceLister) Get(name string) (*v1alpha1.Method, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("method"), name)
	}
	return obj.(*v1alpha1.Method), nil
}
