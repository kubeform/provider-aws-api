/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/kms/v1alpha1"
)

// GrantLister helps list Grants.
// All objects returned here must be treated as read-only.
type GrantLister interface {
	// List lists all Grants in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Grant, err error)
	// Grants returns an object that can list and get Grants.
	Grants(namespace string) GrantNamespaceLister
	GrantListerExpansion
}

// grantLister implements the GrantLister interface.
type grantLister struct {
	indexer cache.Indexer
}

// NewGrantLister returns a new GrantLister.
func NewGrantLister(indexer cache.Indexer) GrantLister {
	return &grantLister{indexer: indexer}
}

// List lists all Grants in the indexer.
func (s *grantLister) List(selector labels.Selector) (ret []*v1alpha1.Grant, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Grant))
	})
	return ret, err
}

// Grants returns an object that can list and get Grants.
func (s *grantLister) Grants(namespace string) GrantNamespaceLister {
	return grantNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GrantNamespaceLister helps list and get Grants.
// All objects returned here must be treated as read-only.
type GrantNamespaceLister interface {
	// List lists all Grants in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Grant, err error)
	// Get retrieves the Grant from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Grant, error)
	GrantNamespaceListerExpansion
}

// grantNamespaceLister implements the GrantNamespaceLister
// interface.
type grantNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Grants in the indexer for a given namespace.
func (s grantNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Grant, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Grant))
	})
	return ret, err
}

// Get retrieves the Grant from the indexer for a given namespace and name.
func (s grantNamespaceLister) Get(name string) (*v1alpha1.Grant, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("grant"), name)
	}
	return obj.(*v1alpha1.Grant), nil
}
