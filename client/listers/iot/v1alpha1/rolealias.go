/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/iot/v1alpha1"
)

// RoleAliasLister helps list RoleAliases.
// All objects returned here must be treated as read-only.
type RoleAliasLister interface {
	// List lists all RoleAliases in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RoleAlias, err error)
	// RoleAliases returns an object that can list and get RoleAliases.
	RoleAliases(namespace string) RoleAliasNamespaceLister
	RoleAliasListerExpansion
}

// roleAliasLister implements the RoleAliasLister interface.
type roleAliasLister struct {
	indexer cache.Indexer
}

// NewRoleAliasLister returns a new RoleAliasLister.
func NewRoleAliasLister(indexer cache.Indexer) RoleAliasLister {
	return &roleAliasLister{indexer: indexer}
}

// List lists all RoleAliases in the indexer.
func (s *roleAliasLister) List(selector labels.Selector) (ret []*v1alpha1.RoleAlias, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RoleAlias))
	})
	return ret, err
}

// RoleAliases returns an object that can list and get RoleAliases.
func (s *roleAliasLister) RoleAliases(namespace string) RoleAliasNamespaceLister {
	return roleAliasNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RoleAliasNamespaceLister helps list and get RoleAliases.
// All objects returned here must be treated as read-only.
type RoleAliasNamespaceLister interface {
	// List lists all RoleAliases in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RoleAlias, err error)
	// Get retrieves the RoleAlias from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RoleAlias, error)
	RoleAliasNamespaceListerExpansion
}

// roleAliasNamespaceLister implements the RoleAliasNamespaceLister
// interface.
type roleAliasNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RoleAliases in the indexer for a given namespace.
func (s roleAliasNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RoleAlias, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RoleAlias))
	})
	return ret, err
}

// Get retrieves the RoleAlias from the indexer for a given namespace and name.
func (s roleAliasNamespaceLister) Get(name string) (*v1alpha1.RoleAlias, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rolealias"), name)
	}
	return obj.(*v1alpha1.RoleAlias), nil
}
