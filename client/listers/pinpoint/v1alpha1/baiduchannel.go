/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/pinpoint/v1alpha1"
)

// BaiduChannelLister helps list BaiduChannels.
// All objects returned here must be treated as read-only.
type BaiduChannelLister interface {
	// List lists all BaiduChannels in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BaiduChannel, err error)
	// BaiduChannels returns an object that can list and get BaiduChannels.
	BaiduChannels(namespace string) BaiduChannelNamespaceLister
	BaiduChannelListerExpansion
}

// baiduChannelLister implements the BaiduChannelLister interface.
type baiduChannelLister struct {
	indexer cache.Indexer
}

// NewBaiduChannelLister returns a new BaiduChannelLister.
func NewBaiduChannelLister(indexer cache.Indexer) BaiduChannelLister {
	return &baiduChannelLister{indexer: indexer}
}

// List lists all BaiduChannels in the indexer.
func (s *baiduChannelLister) List(selector labels.Selector) (ret []*v1alpha1.BaiduChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaiduChannel))
	})
	return ret, err
}

// BaiduChannels returns an object that can list and get BaiduChannels.
func (s *baiduChannelLister) BaiduChannels(namespace string) BaiduChannelNamespaceLister {
	return baiduChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BaiduChannelNamespaceLister helps list and get BaiduChannels.
// All objects returned here must be treated as read-only.
type BaiduChannelNamespaceLister interface {
	// List lists all BaiduChannels in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BaiduChannel, err error)
	// Get retrieves the BaiduChannel from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BaiduChannel, error)
	BaiduChannelNamespaceListerExpansion
}

// baiduChannelNamespaceLister implements the BaiduChannelNamespaceLister
// interface.
type baiduChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BaiduChannels in the indexer for a given namespace.
func (s baiduChannelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BaiduChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaiduChannel))
	})
	return ret, err
}

// Get retrieves the BaiduChannel from the indexer for a given namespace and name.
func (s baiduChannelNamespaceLister) Get(name string) (*v1alpha1.BaiduChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("baiduchannel"), name)
	}
	return obj.(*v1alpha1.BaiduChannel), nil
}
