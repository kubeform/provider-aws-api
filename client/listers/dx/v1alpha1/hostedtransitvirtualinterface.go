/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/dx/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HostedTransitVirtualInterfaceLister helps list HostedTransitVirtualInterfaces.
// All objects returned here must be treated as read-only.
type HostedTransitVirtualInterfaceLister interface {
	// List lists all HostedTransitVirtualInterfaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterface, err error)
	// HostedTransitVirtualInterfaces returns an object that can list and get HostedTransitVirtualInterfaces.
	HostedTransitVirtualInterfaces(namespace string) HostedTransitVirtualInterfaceNamespaceLister
	HostedTransitVirtualInterfaceListerExpansion
}

// hostedTransitVirtualInterfaceLister implements the HostedTransitVirtualInterfaceLister interface.
type hostedTransitVirtualInterfaceLister struct {
	indexer cache.Indexer
}

// NewHostedTransitVirtualInterfaceLister returns a new HostedTransitVirtualInterfaceLister.
func NewHostedTransitVirtualInterfaceLister(indexer cache.Indexer) HostedTransitVirtualInterfaceLister {
	return &hostedTransitVirtualInterfaceLister{indexer: indexer}
}

// List lists all HostedTransitVirtualInterfaces in the indexer.
func (s *hostedTransitVirtualInterfaceLister) List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterface, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedTransitVirtualInterface))
	})
	return ret, err
}

// HostedTransitVirtualInterfaces returns an object that can list and get HostedTransitVirtualInterfaces.
func (s *hostedTransitVirtualInterfaceLister) HostedTransitVirtualInterfaces(namespace string) HostedTransitVirtualInterfaceNamespaceLister {
	return hostedTransitVirtualInterfaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostedTransitVirtualInterfaceNamespaceLister helps list and get HostedTransitVirtualInterfaces.
// All objects returned here must be treated as read-only.
type HostedTransitVirtualInterfaceNamespaceLister interface {
	// List lists all HostedTransitVirtualInterfaces in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterface, err error)
	// Get retrieves the HostedTransitVirtualInterface from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HostedTransitVirtualInterface, error)
	HostedTransitVirtualInterfaceNamespaceListerExpansion
}

// hostedTransitVirtualInterfaceNamespaceLister implements the HostedTransitVirtualInterfaceNamespaceLister
// interface.
type hostedTransitVirtualInterfaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostedTransitVirtualInterfaces in the indexer for a given namespace.
func (s hostedTransitVirtualInterfaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterface, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedTransitVirtualInterface))
	})
	return ret, err
}

// Get retrieves the HostedTransitVirtualInterface from the indexer for a given namespace and name.
func (s hostedTransitVirtualInterfaceNamespaceLister) Get(name string) (*v1alpha1.HostedTransitVirtualInterface, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hostedtransitvirtualinterface"), name)
	}
	return obj.(*v1alpha1.HostedTransitVirtualInterface), nil
}
