/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/dx/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HostedTransitVirtualInterfaceAccepterLister helps list HostedTransitVirtualInterfaceAccepters.
// All objects returned here must be treated as read-only.
type HostedTransitVirtualInterfaceAccepterLister interface {
	// List lists all HostedTransitVirtualInterfaceAccepters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterfaceAccepter, err error)
	// HostedTransitVirtualInterfaceAccepters returns an object that can list and get HostedTransitVirtualInterfaceAccepters.
	HostedTransitVirtualInterfaceAccepters(namespace string) HostedTransitVirtualInterfaceAccepterNamespaceLister
	HostedTransitVirtualInterfaceAccepterListerExpansion
}

// hostedTransitVirtualInterfaceAccepterLister implements the HostedTransitVirtualInterfaceAccepterLister interface.
type hostedTransitVirtualInterfaceAccepterLister struct {
	indexer cache.Indexer
}

// NewHostedTransitVirtualInterfaceAccepterLister returns a new HostedTransitVirtualInterfaceAccepterLister.
func NewHostedTransitVirtualInterfaceAccepterLister(indexer cache.Indexer) HostedTransitVirtualInterfaceAccepterLister {
	return &hostedTransitVirtualInterfaceAccepterLister{indexer: indexer}
}

// List lists all HostedTransitVirtualInterfaceAccepters in the indexer.
func (s *hostedTransitVirtualInterfaceAccepterLister) List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterfaceAccepter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedTransitVirtualInterfaceAccepter))
	})
	return ret, err
}

// HostedTransitVirtualInterfaceAccepters returns an object that can list and get HostedTransitVirtualInterfaceAccepters.
func (s *hostedTransitVirtualInterfaceAccepterLister) HostedTransitVirtualInterfaceAccepters(namespace string) HostedTransitVirtualInterfaceAccepterNamespaceLister {
	return hostedTransitVirtualInterfaceAccepterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostedTransitVirtualInterfaceAccepterNamespaceLister helps list and get HostedTransitVirtualInterfaceAccepters.
// All objects returned here must be treated as read-only.
type HostedTransitVirtualInterfaceAccepterNamespaceLister interface {
	// List lists all HostedTransitVirtualInterfaceAccepters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterfaceAccepter, err error)
	// Get retrieves the HostedTransitVirtualInterfaceAccepter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HostedTransitVirtualInterfaceAccepter, error)
	HostedTransitVirtualInterfaceAccepterNamespaceListerExpansion
}

// hostedTransitVirtualInterfaceAccepterNamespaceLister implements the HostedTransitVirtualInterfaceAccepterNamespaceLister
// interface.
type hostedTransitVirtualInterfaceAccepterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostedTransitVirtualInterfaceAccepters in the indexer for a given namespace.
func (s hostedTransitVirtualInterfaceAccepterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HostedTransitVirtualInterfaceAccepter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedTransitVirtualInterfaceAccepter))
	})
	return ret, err
}

// Get retrieves the HostedTransitVirtualInterfaceAccepter from the indexer for a given namespace and name.
func (s hostedTransitVirtualInterfaceAccepterNamespaceLister) Get(name string) (*v1alpha1.HostedTransitVirtualInterfaceAccepter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hostedtransitvirtualinterfaceaccepter"), name)
	}
	return obj.(*v1alpha1.HostedTransitVirtualInterfaceAccepter), nil
}
