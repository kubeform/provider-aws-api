/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/dx/v1alpha1"
)

// HostedPublicVirtualInterfaceAccepterLister helps list HostedPublicVirtualInterfaceAccepters.
// All objects returned here must be treated as read-only.
type HostedPublicVirtualInterfaceAccepterLister interface {
	// List lists all HostedPublicVirtualInterfaceAccepters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedPublicVirtualInterfaceAccepter, err error)
	// HostedPublicVirtualInterfaceAccepters returns an object that can list and get HostedPublicVirtualInterfaceAccepters.
	HostedPublicVirtualInterfaceAccepters(namespace string) HostedPublicVirtualInterfaceAccepterNamespaceLister
	HostedPublicVirtualInterfaceAccepterListerExpansion
}

// hostedPublicVirtualInterfaceAccepterLister implements the HostedPublicVirtualInterfaceAccepterLister interface.
type hostedPublicVirtualInterfaceAccepterLister struct {
	indexer cache.Indexer
}

// NewHostedPublicVirtualInterfaceAccepterLister returns a new HostedPublicVirtualInterfaceAccepterLister.
func NewHostedPublicVirtualInterfaceAccepterLister(indexer cache.Indexer) HostedPublicVirtualInterfaceAccepterLister {
	return &hostedPublicVirtualInterfaceAccepterLister{indexer: indexer}
}

// List lists all HostedPublicVirtualInterfaceAccepters in the indexer.
func (s *hostedPublicVirtualInterfaceAccepterLister) List(selector labels.Selector) (ret []*v1alpha1.HostedPublicVirtualInterfaceAccepter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedPublicVirtualInterfaceAccepter))
	})
	return ret, err
}

// HostedPublicVirtualInterfaceAccepters returns an object that can list and get HostedPublicVirtualInterfaceAccepters.
func (s *hostedPublicVirtualInterfaceAccepterLister) HostedPublicVirtualInterfaceAccepters(namespace string) HostedPublicVirtualInterfaceAccepterNamespaceLister {
	return hostedPublicVirtualInterfaceAccepterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostedPublicVirtualInterfaceAccepterNamespaceLister helps list and get HostedPublicVirtualInterfaceAccepters.
// All objects returned here must be treated as read-only.
type HostedPublicVirtualInterfaceAccepterNamespaceLister interface {
	// List lists all HostedPublicVirtualInterfaceAccepters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HostedPublicVirtualInterfaceAccepter, err error)
	// Get retrieves the HostedPublicVirtualInterfaceAccepter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HostedPublicVirtualInterfaceAccepter, error)
	HostedPublicVirtualInterfaceAccepterNamespaceListerExpansion
}

// hostedPublicVirtualInterfaceAccepterNamespaceLister implements the HostedPublicVirtualInterfaceAccepterNamespaceLister
// interface.
type hostedPublicVirtualInterfaceAccepterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostedPublicVirtualInterfaceAccepters in the indexer for a given namespace.
func (s hostedPublicVirtualInterfaceAccepterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HostedPublicVirtualInterfaceAccepter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedPublicVirtualInterfaceAccepter))
	})
	return ret, err
}

// Get retrieves the HostedPublicVirtualInterfaceAccepter from the indexer for a given namespace and name.
func (s hostedPublicVirtualInterfaceAccepterNamespaceLister) Get(name string) (*v1alpha1.HostedPublicVirtualInterfaceAccepter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hostedpublicvirtualinterfaceaccepter"), name)
	}
	return obj.(*v1alpha1.HostedPublicVirtualInterfaceAccepter), nil
}
