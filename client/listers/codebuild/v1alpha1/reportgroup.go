/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/codebuild/v1alpha1"
)

// ReportGroupLister helps list ReportGroups.
// All objects returned here must be treated as read-only.
type ReportGroupLister interface {
	// List lists all ReportGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReportGroup, err error)
	// ReportGroups returns an object that can list and get ReportGroups.
	ReportGroups(namespace string) ReportGroupNamespaceLister
	ReportGroupListerExpansion
}

// reportGroupLister implements the ReportGroupLister interface.
type reportGroupLister struct {
	indexer cache.Indexer
}

// NewReportGroupLister returns a new ReportGroupLister.
func NewReportGroupLister(indexer cache.Indexer) ReportGroupLister {
	return &reportGroupLister{indexer: indexer}
}

// List lists all ReportGroups in the indexer.
func (s *reportGroupLister) List(selector labels.Selector) (ret []*v1alpha1.ReportGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReportGroup))
	})
	return ret, err
}

// ReportGroups returns an object that can list and get ReportGroups.
func (s *reportGroupLister) ReportGroups(namespace string) ReportGroupNamespaceLister {
	return reportGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReportGroupNamespaceLister helps list and get ReportGroups.
// All objects returned here must be treated as read-only.
type ReportGroupNamespaceLister interface {
	// List lists all ReportGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReportGroup, err error)
	// Get retrieves the ReportGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ReportGroup, error)
	ReportGroupNamespaceListerExpansion
}

// reportGroupNamespaceLister implements the ReportGroupNamespaceLister
// interface.
type reportGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReportGroups in the indexer for a given namespace.
func (s reportGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReportGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReportGroup))
	})
	return ret, err
}

// Get retrieves the ReportGroup from the indexer for a given namespace and name.
func (s reportGroupNamespaceLister) Get(name string) (*v1alpha1.ReportGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("reportgroup"), name)
	}
	return obj.(*v1alpha1.ReportGroup), nil
}
