/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/cloudformationstack/v1alpha1"
)

// SetInstanceLister helps list SetInstances.
// All objects returned here must be treated as read-only.
type SetInstanceLister interface {
	// List lists all SetInstances in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SetInstance, err error)
	// SetInstances returns an object that can list and get SetInstances.
	SetInstances(namespace string) SetInstanceNamespaceLister
	SetInstanceListerExpansion
}

// setInstanceLister implements the SetInstanceLister interface.
type setInstanceLister struct {
	indexer cache.Indexer
}

// NewSetInstanceLister returns a new SetInstanceLister.
func NewSetInstanceLister(indexer cache.Indexer) SetInstanceLister {
	return &setInstanceLister{indexer: indexer}
}

// List lists all SetInstances in the indexer.
func (s *setInstanceLister) List(selector labels.Selector) (ret []*v1alpha1.SetInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SetInstance))
	})
	return ret, err
}

// SetInstances returns an object that can list and get SetInstances.
func (s *setInstanceLister) SetInstances(namespace string) SetInstanceNamespaceLister {
	return setInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SetInstanceNamespaceLister helps list and get SetInstances.
// All objects returned here must be treated as read-only.
type SetInstanceNamespaceLister interface {
	// List lists all SetInstances in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SetInstance, err error)
	// Get retrieves the SetInstance from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SetInstance, error)
	SetInstanceNamespaceListerExpansion
}

// setInstanceNamespaceLister implements the SetInstanceNamespaceLister
// interface.
type setInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SetInstances in the indexer for a given namespace.
func (s setInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SetInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SetInstance))
	})
	return ret, err
}

// Get retrieves the SetInstance from the indexer for a given namespace and name.
func (s setInstanceNamespaceLister) Get(name string) (*v1alpha1.SetInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("setinstance"), name)
	}
	return obj.(*v1alpha1.SetInstance), nil
}
