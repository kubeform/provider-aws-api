/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/ebs/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SnapshotCopyLister helps list SnapshotCopies.
// All objects returned here must be treated as read-only.
type SnapshotCopyLister interface {
	// List lists all SnapshotCopies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopy, err error)
	// SnapshotCopies returns an object that can list and get SnapshotCopies.
	SnapshotCopies(namespace string) SnapshotCopyNamespaceLister
	SnapshotCopyListerExpansion
}

// snapshotCopyLister implements the SnapshotCopyLister interface.
type snapshotCopyLister struct {
	indexer cache.Indexer
}

// NewSnapshotCopyLister returns a new SnapshotCopyLister.
func NewSnapshotCopyLister(indexer cache.Indexer) SnapshotCopyLister {
	return &snapshotCopyLister{indexer: indexer}
}

// List lists all SnapshotCopies in the indexer.
func (s *snapshotCopyLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotCopy))
	})
	return ret, err
}

// SnapshotCopies returns an object that can list and get SnapshotCopies.
func (s *snapshotCopyLister) SnapshotCopies(namespace string) SnapshotCopyNamespaceLister {
	return snapshotCopyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SnapshotCopyNamespaceLister helps list and get SnapshotCopies.
// All objects returned here must be treated as read-only.
type SnapshotCopyNamespaceLister interface {
	// List lists all SnapshotCopies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopy, err error)
	// Get retrieves the SnapshotCopy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SnapshotCopy, error)
	SnapshotCopyNamespaceListerExpansion
}

// snapshotCopyNamespaceLister implements the SnapshotCopyNamespaceLister
// interface.
type snapshotCopyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SnapshotCopies in the indexer for a given namespace.
func (s snapshotCopyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotCopy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotCopy))
	})
	return ret, err
}

// Get retrieves the SnapshotCopy from the indexer for a given namespace and name.
func (s snapshotCopyNamespaceLister) Get(name string) (*v1alpha1.SnapshotCopy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("snapshotcopy"), name)
	}
	return obj.(*v1alpha1.SnapshotCopy), nil
}
