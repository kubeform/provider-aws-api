/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/media/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ConvertQueueLister helps list ConvertQueues.
// All objects returned here must be treated as read-only.
type ConvertQueueLister interface {
	// List lists all ConvertQueues in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConvertQueue, err error)
	// ConvertQueues returns an object that can list and get ConvertQueues.
	ConvertQueues(namespace string) ConvertQueueNamespaceLister
	ConvertQueueListerExpansion
}

// convertQueueLister implements the ConvertQueueLister interface.
type convertQueueLister struct {
	indexer cache.Indexer
}

// NewConvertQueueLister returns a new ConvertQueueLister.
func NewConvertQueueLister(indexer cache.Indexer) ConvertQueueLister {
	return &convertQueueLister{indexer: indexer}
}

// List lists all ConvertQueues in the indexer.
func (s *convertQueueLister) List(selector labels.Selector) (ret []*v1alpha1.ConvertQueue, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConvertQueue))
	})
	return ret, err
}

// ConvertQueues returns an object that can list and get ConvertQueues.
func (s *convertQueueLister) ConvertQueues(namespace string) ConvertQueueNamespaceLister {
	return convertQueueNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ConvertQueueNamespaceLister helps list and get ConvertQueues.
// All objects returned here must be treated as read-only.
type ConvertQueueNamespaceLister interface {
	// List lists all ConvertQueues in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConvertQueue, err error)
	// Get retrieves the ConvertQueue from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ConvertQueue, error)
	ConvertQueueNamespaceListerExpansion
}

// convertQueueNamespaceLister implements the ConvertQueueNamespaceLister
// interface.
type convertQueueNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ConvertQueues in the indexer for a given namespace.
func (s convertQueueNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ConvertQueue, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConvertQueue))
	})
	return ret, err
}

// Get retrieves the ConvertQueue from the indexer for a given namespace and name.
func (s convertQueueNamespaceLister) Get(name string) (*v1alpha1.ConvertQueue, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("convertqueue"), name)
	}
	return obj.(*v1alpha1.ConvertQueue), nil
}
