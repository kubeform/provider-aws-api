/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/rds/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterRoleAssociationLister helps list ClusterRoleAssociations.
// All objects returned here must be treated as read-only.
type ClusterRoleAssociationLister interface {
	// List lists all ClusterRoleAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterRoleAssociation, err error)
	// ClusterRoleAssociations returns an object that can list and get ClusterRoleAssociations.
	ClusterRoleAssociations(namespace string) ClusterRoleAssociationNamespaceLister
	ClusterRoleAssociationListerExpansion
}

// clusterRoleAssociationLister implements the ClusterRoleAssociationLister interface.
type clusterRoleAssociationLister struct {
	indexer cache.Indexer
}

// NewClusterRoleAssociationLister returns a new ClusterRoleAssociationLister.
func NewClusterRoleAssociationLister(indexer cache.Indexer) ClusterRoleAssociationLister {
	return &clusterRoleAssociationLister{indexer: indexer}
}

// List lists all ClusterRoleAssociations in the indexer.
func (s *clusterRoleAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterRoleAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterRoleAssociation))
	})
	return ret, err
}

// ClusterRoleAssociations returns an object that can list and get ClusterRoleAssociations.
func (s *clusterRoleAssociationLister) ClusterRoleAssociations(namespace string) ClusterRoleAssociationNamespaceLister {
	return clusterRoleAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterRoleAssociationNamespaceLister helps list and get ClusterRoleAssociations.
// All objects returned here must be treated as read-only.
type ClusterRoleAssociationNamespaceLister interface {
	// List lists all ClusterRoleAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterRoleAssociation, err error)
	// Get retrieves the ClusterRoleAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterRoleAssociation, error)
	ClusterRoleAssociationNamespaceListerExpansion
}

// clusterRoleAssociationNamespaceLister implements the ClusterRoleAssociationNamespaceLister
// interface.
type clusterRoleAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterRoleAssociations in the indexer for a given namespace.
func (s clusterRoleAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterRoleAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterRoleAssociation))
	})
	return ret, err
}

// Get retrieves the ClusterRoleAssociation from the indexer for a given namespace and name.
func (s clusterRoleAssociationNamespaceLister) Get(name string) (*v1alpha1.ClusterRoleAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusterroleassociation"), name)
	}
	return obj.(*v1alpha1.ClusterRoleAssociation), nil
}
