/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/rds/v1alpha1"
)

// ClusterEndpointLister helps list ClusterEndpoints.
// All objects returned here must be treated as read-only.
type ClusterEndpointLister interface {
	// List lists all ClusterEndpoints in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterEndpoint, err error)
	// ClusterEndpoints returns an object that can list and get ClusterEndpoints.
	ClusterEndpoints(namespace string) ClusterEndpointNamespaceLister
	ClusterEndpointListerExpansion
}

// clusterEndpointLister implements the ClusterEndpointLister interface.
type clusterEndpointLister struct {
	indexer cache.Indexer
}

// NewClusterEndpointLister returns a new ClusterEndpointLister.
func NewClusterEndpointLister(indexer cache.Indexer) ClusterEndpointLister {
	return &clusterEndpointLister{indexer: indexer}
}

// List lists all ClusterEndpoints in the indexer.
func (s *clusterEndpointLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterEndpoint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterEndpoint))
	})
	return ret, err
}

// ClusterEndpoints returns an object that can list and get ClusterEndpoints.
func (s *clusterEndpointLister) ClusterEndpoints(namespace string) ClusterEndpointNamespaceLister {
	return clusterEndpointNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterEndpointNamespaceLister helps list and get ClusterEndpoints.
// All objects returned here must be treated as read-only.
type ClusterEndpointNamespaceLister interface {
	// List lists all ClusterEndpoints in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterEndpoint, err error)
	// Get retrieves the ClusterEndpoint from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterEndpoint, error)
	ClusterEndpointNamespaceListerExpansion
}

// clusterEndpointNamespaceLister implements the ClusterEndpointNamespaceLister
// interface.
type clusterEndpointNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterEndpoints in the indexer for a given namespace.
func (s clusterEndpointNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterEndpoint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterEndpoint))
	})
	return ret, err
}

// Get retrieves the ClusterEndpoint from the indexer for a given namespace and name.
func (s clusterEndpointNamespaceLister) Get(name string) (*v1alpha1.ClusterEndpoint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusterendpoint"), name)
	}
	return obj.(*v1alpha1.ClusterEndpoint), nil
}
