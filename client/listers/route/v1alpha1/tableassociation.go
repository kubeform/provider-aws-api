/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/route/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TableAssociationLister helps list TableAssociations.
// All objects returned here must be treated as read-only.
type TableAssociationLister interface {
	// List lists all TableAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TableAssociation, err error)
	// TableAssociations returns an object that can list and get TableAssociations.
	TableAssociations(namespace string) TableAssociationNamespaceLister
	TableAssociationListerExpansion
}

// tableAssociationLister implements the TableAssociationLister interface.
type tableAssociationLister struct {
	indexer cache.Indexer
}

// NewTableAssociationLister returns a new TableAssociationLister.
func NewTableAssociationLister(indexer cache.Indexer) TableAssociationLister {
	return &tableAssociationLister{indexer: indexer}
}

// List lists all TableAssociations in the indexer.
func (s *tableAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.TableAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TableAssociation))
	})
	return ret, err
}

// TableAssociations returns an object that can list and get TableAssociations.
func (s *tableAssociationLister) TableAssociations(namespace string) TableAssociationNamespaceLister {
	return tableAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TableAssociationNamespaceLister helps list and get TableAssociations.
// All objects returned here must be treated as read-only.
type TableAssociationNamespaceLister interface {
	// List lists all TableAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TableAssociation, err error)
	// Get retrieves the TableAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TableAssociation, error)
	TableAssociationNamespaceListerExpansion
}

// tableAssociationNamespaceLister implements the TableAssociationNamespaceLister
// interface.
type tableAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TableAssociations in the indexer for a given namespace.
func (s tableAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TableAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TableAssociation))
	})
	return ret, err
}

// Get retrieves the TableAssociation from the indexer for a given namespace and name.
func (s tableAssociationNamespaceLister) Get(name string) (*v1alpha1.TableAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tableassociation"), name)
	}
	return obj.(*v1alpha1.TableAssociation), nil
}
