/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/route53recoveryreadiness/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReadinessCheckLister helps list ReadinessChecks.
// All objects returned here must be treated as read-only.
type ReadinessCheckLister interface {
	// List lists all ReadinessChecks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReadinessCheck, err error)
	// ReadinessChecks returns an object that can list and get ReadinessChecks.
	ReadinessChecks(namespace string) ReadinessCheckNamespaceLister
	ReadinessCheckListerExpansion
}

// readinessCheckLister implements the ReadinessCheckLister interface.
type readinessCheckLister struct {
	indexer cache.Indexer
}

// NewReadinessCheckLister returns a new ReadinessCheckLister.
func NewReadinessCheckLister(indexer cache.Indexer) ReadinessCheckLister {
	return &readinessCheckLister{indexer: indexer}
}

// List lists all ReadinessChecks in the indexer.
func (s *readinessCheckLister) List(selector labels.Selector) (ret []*v1alpha1.ReadinessCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReadinessCheck))
	})
	return ret, err
}

// ReadinessChecks returns an object that can list and get ReadinessChecks.
func (s *readinessCheckLister) ReadinessChecks(namespace string) ReadinessCheckNamespaceLister {
	return readinessCheckNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReadinessCheckNamespaceLister helps list and get ReadinessChecks.
// All objects returned here must be treated as read-only.
type ReadinessCheckNamespaceLister interface {
	// List lists all ReadinessChecks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReadinessCheck, err error)
	// Get retrieves the ReadinessCheck from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ReadinessCheck, error)
	ReadinessCheckNamespaceListerExpansion
}

// readinessCheckNamespaceLister implements the ReadinessCheckNamespaceLister
// interface.
type readinessCheckNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReadinessChecks in the indexer for a given namespace.
func (s readinessCheckNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReadinessCheck, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReadinessCheck))
	})
	return ret, err
}

// Get retrieves the ReadinessCheck from the indexer for a given namespace and name.
func (s readinessCheckNamespaceLister) Get(name string) (*v1alpha1.ReadinessCheck, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("readinesscheck"), name)
	}
	return obj.(*v1alpha1.ReadinessCheck), nil
}
