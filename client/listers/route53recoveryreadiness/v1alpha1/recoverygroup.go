/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-aws-api/apis/route53recoveryreadiness/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryGroupLister helps list RecoveryGroups.
// All objects returned here must be treated as read-only.
type RecoveryGroupLister interface {
	// List lists all RecoveryGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryGroup, err error)
	// RecoveryGroups returns an object that can list and get RecoveryGroups.
	RecoveryGroups(namespace string) RecoveryGroupNamespaceLister
	RecoveryGroupListerExpansion
}

// recoveryGroupLister implements the RecoveryGroupLister interface.
type recoveryGroupLister struct {
	indexer cache.Indexer
}

// NewRecoveryGroupLister returns a new RecoveryGroupLister.
func NewRecoveryGroupLister(indexer cache.Indexer) RecoveryGroupLister {
	return &recoveryGroupLister{indexer: indexer}
}

// List lists all RecoveryGroups in the indexer.
func (s *recoveryGroupLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryGroup))
	})
	return ret, err
}

// RecoveryGroups returns an object that can list and get RecoveryGroups.
func (s *recoveryGroupLister) RecoveryGroups(namespace string) RecoveryGroupNamespaceLister {
	return recoveryGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryGroupNamespaceLister helps list and get RecoveryGroups.
// All objects returned here must be treated as read-only.
type RecoveryGroupNamespaceLister interface {
	// List lists all RecoveryGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryGroup, err error)
	// Get retrieves the RecoveryGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RecoveryGroup, error)
	RecoveryGroupNamespaceListerExpansion
}

// recoveryGroupNamespaceLister implements the RecoveryGroupNamespaceLister
// interface.
type recoveryGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryGroups in the indexer for a given namespace.
func (s recoveryGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryGroup))
	})
	return ret, err
}

// Get retrieves the RecoveryGroup from the indexer for a given namespace and name.
func (s recoveryGroupNamespaceLister) Get(name string) (*v1alpha1.RecoveryGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recoverygroup"), name)
	}
	return obj.(*v1alpha1.RecoveryGroup), nil
}
