/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-aws-api/apis/snapshot/v1alpha1"
)

// CreateVolumePermissionLister helps list CreateVolumePermissions.
// All objects returned here must be treated as read-only.
type CreateVolumePermissionLister interface {
	// List lists all CreateVolumePermissions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CreateVolumePermission, err error)
	// CreateVolumePermissions returns an object that can list and get CreateVolumePermissions.
	CreateVolumePermissions(namespace string) CreateVolumePermissionNamespaceLister
	CreateVolumePermissionListerExpansion
}

// createVolumePermissionLister implements the CreateVolumePermissionLister interface.
type createVolumePermissionLister struct {
	indexer cache.Indexer
}

// NewCreateVolumePermissionLister returns a new CreateVolumePermissionLister.
func NewCreateVolumePermissionLister(indexer cache.Indexer) CreateVolumePermissionLister {
	return &createVolumePermissionLister{indexer: indexer}
}

// List lists all CreateVolumePermissions in the indexer.
func (s *createVolumePermissionLister) List(selector labels.Selector) (ret []*v1alpha1.CreateVolumePermission, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CreateVolumePermission))
	})
	return ret, err
}

// CreateVolumePermissions returns an object that can list and get CreateVolumePermissions.
func (s *createVolumePermissionLister) CreateVolumePermissions(namespace string) CreateVolumePermissionNamespaceLister {
	return createVolumePermissionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CreateVolumePermissionNamespaceLister helps list and get CreateVolumePermissions.
// All objects returned here must be treated as read-only.
type CreateVolumePermissionNamespaceLister interface {
	// List lists all CreateVolumePermissions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CreateVolumePermission, err error)
	// Get retrieves the CreateVolumePermission from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CreateVolumePermission, error)
	CreateVolumePermissionNamespaceListerExpansion
}

// createVolumePermissionNamespaceLister implements the CreateVolumePermissionNamespaceLister
// interface.
type createVolumePermissionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CreateVolumePermissions in the indexer for a given namespace.
func (s createVolumePermissionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CreateVolumePermission, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CreateVolumePermission))
	})
	return ret, err
}

// Get retrieves the CreateVolumePermission from the indexer for a given namespace and name.
func (s createVolumePermissionNamespaceLister) Get(name string) (*v1alpha1.CreateVolumePermission, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("createvolumepermission"), name)
	}
	return obj.(*v1alpha1.CreateVolumePermission), nil
}
