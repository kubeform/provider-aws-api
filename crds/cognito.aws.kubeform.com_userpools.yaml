apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: aws.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: userpools.cognito.aws.kubeform.com
spec:
  group: cognito.aws.kubeform.com
  names:
    kind: UserPool
    listKind: UserPoolList
    plural: userpools
    singular: userpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  accountRecoverySetting:
                    properties:
                      recoveryMechanism:
                        items:
                          properties:
                            name:
                              type: string
                            priority:
                              format: int64
                              type: integer
                          required:
                          - name
                          - priority
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - recoveryMechanism
                    type: object
                  adminCreateUserConfig:
                    properties:
                      allowAdminCreateUserOnly:
                        type: boolean
                      inviteMessageTemplate:
                        properties:
                          emailMessage:
                            type: string
                          emailSubject:
                            type: string
                          smsMessage:
                            type: string
                        type: object
                    type: object
                  aliasAttributes:
                    items:
                      type: string
                    type: array
                  arn:
                    type: string
                  autoVerifiedAttributes:
                    items:
                      type: string
                    type: array
                  creationDate:
                    type: string
                  customDomain:
                    type: string
                  deviceConfiguration:
                    properties:
                      challengeRequiredOnNewDevice:
                        type: boolean
                      deviceOnlyRememberedOnUserPrompt:
                        type: boolean
                    type: object
                  domain:
                    type: string
                  emailConfiguration:
                    properties:
                      configurationSet:
                        type: string
                      emailSendingAccount:
                        type: string
                      fromEmailAddress:
                        type: string
                      replyToEmailAddress:
                        type: string
                      sourceArn:
                        type: string
                    type: object
                  emailVerificationMessage:
                    type: string
                  emailVerificationSubject:
                    type: string
                  endpoint:
                    type: string
                  estimatedNumberOfUsers:
                    format: int64
                    type: integer
                  id:
                    type: string
                  lambdaConfig:
                    properties:
                      createAuthChallenge:
                        type: string
                      customEmailSender:
                        properties:
                          lambdaArn:
                            type: string
                          lambdaVersion:
                            type: string
                        required:
                        - lambdaArn
                        - lambdaVersion
                        type: object
                      customMessage:
                        type: string
                      customSmsSender:
                        properties:
                          lambdaArn:
                            type: string
                          lambdaVersion:
                            type: string
                        required:
                        - lambdaArn
                        - lambdaVersion
                        type: object
                      defineAuthChallenge:
                        type: string
                      kmsKeyID:
                        type: string
                      postAuthentication:
                        type: string
                      postConfirmation:
                        type: string
                      preAuthentication:
                        type: string
                      preSignUp:
                        type: string
                      preTokenGeneration:
                        type: string
                      userMigration:
                        type: string
                      verifyAuthChallengeResponse:
                        type: string
                    type: object
                  lastModifiedDate:
                    type: string
                  mfaConfiguration:
                    type: string
                  name:
                    type: string
                  passwordPolicy:
                    properties:
                      minimumLength:
                        format: int64
                        type: integer
                      requireLowercase:
                        type: boolean
                      requireNumbers:
                        type: boolean
                      requireSymbols:
                        type: boolean
                      requireUppercase:
                        type: boolean
                      temporaryPasswordValidityDays:
                        format: int64
                        type: integer
                    type: object
                  schema:
                    items:
                      properties:
                        attributeDataType:
                          type: string
                        developerOnlyAttribute:
                          type: boolean
                        mutable:
                          type: boolean
                        name:
                          type: string
                        numberAttributeConstraints:
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                          type: object
                        required:
                          type: boolean
                        stringAttributeConstraints:
                          properties:
                            maxLength:
                              type: string
                            minLength:
                              type: string
                          type: object
                      required:
                      - attributeDataType
                      - name
                      type: object
                    maxItems: 50
                    minItems: 1
                    type: array
                  smsAuthenticationMessage:
                    type: string
                  smsConfiguration:
                    properties:
                      externalID:
                        type: string
                      snsCallerArn:
                        type: string
                    required:
                    - externalID
                    - snsCallerArn
                    type: object
                  smsVerificationMessage:
                    type: string
                  softwareTokenMfaConfiguration:
                    properties:
                      enabled:
                        type: boolean
                    required:
                    - enabled
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  userPoolAddOns:
                    properties:
                      advancedSecurityMode:
                        type: string
                    required:
                    - advancedSecurityMode
                    type: object
                  usernameAttributes:
                    items:
                      type: string
                    type: array
                  usernameConfiguration:
                    properties:
                      caseSensitive:
                        type: boolean
                    required:
                    - caseSensitive
                    type: object
                  verificationMessageTemplate:
                    properties:
                      defaultEmailOption:
                        type: string
                      emailMessage:
                        type: string
                      emailMessageByLink:
                        type: string
                      emailSubject:
                        type: string
                      emailSubjectByLink:
                        type: string
                      smsMessage:
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  accountRecoverySetting:
                    properties:
                      recoveryMechanism:
                        items:
                          properties:
                            name:
                              type: string
                            priority:
                              format: int64
                              type: integer
                          required:
                          - name
                          - priority
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - recoveryMechanism
                    type: object
                  adminCreateUserConfig:
                    properties:
                      allowAdminCreateUserOnly:
                        type: boolean
                      inviteMessageTemplate:
                        properties:
                          emailMessage:
                            type: string
                          emailSubject:
                            type: string
                          smsMessage:
                            type: string
                        type: object
                    type: object
                  aliasAttributes:
                    items:
                      type: string
                    type: array
                  arn:
                    type: string
                  autoVerifiedAttributes:
                    items:
                      type: string
                    type: array
                  creationDate:
                    type: string
                  customDomain:
                    type: string
                  deviceConfiguration:
                    properties:
                      challengeRequiredOnNewDevice:
                        type: boolean
                      deviceOnlyRememberedOnUserPrompt:
                        type: boolean
                    type: object
                  domain:
                    type: string
                  emailConfiguration:
                    properties:
                      configurationSet:
                        type: string
                      emailSendingAccount:
                        type: string
                      fromEmailAddress:
                        type: string
                      replyToEmailAddress:
                        type: string
                      sourceArn:
                        type: string
                    type: object
                  emailVerificationMessage:
                    type: string
                  emailVerificationSubject:
                    type: string
                  endpoint:
                    type: string
                  estimatedNumberOfUsers:
                    format: int64
                    type: integer
                  id:
                    type: string
                  lambdaConfig:
                    properties:
                      createAuthChallenge:
                        type: string
                      customEmailSender:
                        properties:
                          lambdaArn:
                            type: string
                          lambdaVersion:
                            type: string
                        required:
                        - lambdaArn
                        - lambdaVersion
                        type: object
                      customMessage:
                        type: string
                      customSmsSender:
                        properties:
                          lambdaArn:
                            type: string
                          lambdaVersion:
                            type: string
                        required:
                        - lambdaArn
                        - lambdaVersion
                        type: object
                      defineAuthChallenge:
                        type: string
                      kmsKeyID:
                        type: string
                      postAuthentication:
                        type: string
                      postConfirmation:
                        type: string
                      preAuthentication:
                        type: string
                      preSignUp:
                        type: string
                      preTokenGeneration:
                        type: string
                      userMigration:
                        type: string
                      verifyAuthChallengeResponse:
                        type: string
                    type: object
                  lastModifiedDate:
                    type: string
                  mfaConfiguration:
                    type: string
                  name:
                    type: string
                  passwordPolicy:
                    properties:
                      minimumLength:
                        format: int64
                        type: integer
                      requireLowercase:
                        type: boolean
                      requireNumbers:
                        type: boolean
                      requireSymbols:
                        type: boolean
                      requireUppercase:
                        type: boolean
                      temporaryPasswordValidityDays:
                        format: int64
                        type: integer
                    type: object
                  schema:
                    items:
                      properties:
                        attributeDataType:
                          type: string
                        developerOnlyAttribute:
                          type: boolean
                        mutable:
                          type: boolean
                        name:
                          type: string
                        numberAttributeConstraints:
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                          type: object
                        required:
                          type: boolean
                        stringAttributeConstraints:
                          properties:
                            maxLength:
                              type: string
                            minLength:
                              type: string
                          type: object
                      required:
                      - attributeDataType
                      - name
                      type: object
                    maxItems: 50
                    minItems: 1
                    type: array
                  smsAuthenticationMessage:
                    type: string
                  smsConfiguration:
                    properties:
                      externalID:
                        type: string
                      snsCallerArn:
                        type: string
                    required:
                    - externalID
                    - snsCallerArn
                    type: object
                  smsVerificationMessage:
                    type: string
                  softwareTokenMfaConfiguration:
                    properties:
                      enabled:
                        type: boolean
                    required:
                    - enabled
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  userPoolAddOns:
                    properties:
                      advancedSecurityMode:
                        type: string
                    required:
                    - advancedSecurityMode
                    type: object
                  usernameAttributes:
                    items:
                      type: string
                    type: array
                  usernameConfiguration:
                    properties:
                      caseSensitive:
                        type: boolean
                    required:
                    - caseSensitive
                    type: object
                  verificationMessageTemplate:
                    properties:
                      defaultEmailOption:
                        type: string
                      emailMessage:
                        type: string
                      emailMessageByLink:
                        type: string
                      emailSubject:
                        type: string
                      emailSubjectByLink:
                        type: string
                      smsMessage:
                        type: string
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
