apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: aws.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: analyticsapplications.kinesis.aws.kubeform.com
spec:
  group: kinesis.aws.kubeform.com
  names:
    kind: AnalyticsApplication
    listKind: AnalyticsApplicationList
    plural: analyticsapplications
    singular: analyticsapplication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  cloudwatchLoggingOptions:
                    properties:
                      ID:
                        type: string
                      logStreamArn:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - logStreamArn
                    - roleArn
                    type: object
                  code:
                    type: string
                  createTimestamp:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  inputs:
                    properties:
                      ID:
                        type: string
                      kinesisFirehose:
                        properties:
                          resourceArn:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - resourceArn
                        - roleArn
                        type: object
                      kinesisStream:
                        properties:
                          resourceArn:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - resourceArn
                        - roleArn
                        type: object
                      namePrefix:
                        type: string
                      parallelism:
                        properties:
                          count:
                            format: int64
                            type: integer
                        type: object
                      processingConfiguration:
                        properties:
                          lambda:
                            properties:
                              resourceArn:
                                type: string
                              roleArn:
                                type: string
                            required:
                            - resourceArn
                            - roleArn
                            type: object
                        required:
                        - lambda
                        type: object
                      schema:
                        properties:
                          recordColumns:
                            items:
                              properties:
                                mapping:
                                  type: string
                                name:
                                  type: string
                                sqlType:
                                  type: string
                              required:
                              - name
                              - sqlType
                              type: object
                            maxItems: 1000
                            type: array
                          recordEncoding:
                            type: string
                          recordFormat:
                            properties:
                              mappingParameters:
                                properties:
                                  csv:
                                    properties:
                                      recordColumnDelimiter:
                                        type: string
                                      recordRowDelimiter:
                                        type: string
                                    required:
                                    - recordColumnDelimiter
                                    - recordRowDelimiter
                                    type: object
                                  json:
                                    properties:
                                      recordRowPath:
                                        type: string
                                    required:
                                    - recordRowPath
                                    type: object
                                type: object
                              recordFormatType:
                                type: string
                            type: object
                        required:
                        - recordColumns
                        - recordFormat
                        type: object
                      startingPositionConfiguration:
                        items:
                          properties:
                            startingPosition:
                              type: string
                          type: object
                        type: array
                      streamNames:
                        items:
                          type: string
                        type: array
                    required:
                    - namePrefix
                    - schema
                    type: object
                  lastUpdateTimestamp:
                    type: string
                  name:
                    type: string
                  outputs:
                    items:
                      properties:
                        ID:
                          type: string
                        kinesisFirehose:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        kinesisStream:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        lambda:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        name:
                          type: string
                        schema:
                          properties:
                            recordFormatType:
                              type: string
                          required:
                          - recordFormatType
                          type: object
                      required:
                      - name
                      - schema
                      type: object
                    maxItems: 3
                    type: array
                  referenceDataSources:
                    properties:
                      ID:
                        type: string
                      s3:
                        properties:
                          bucketArn:
                            type: string
                          fileKey:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - bucketArn
                        - fileKey
                        - roleArn
                        type: object
                      schema:
                        properties:
                          recordColumns:
                            items:
                              properties:
                                mapping:
                                  type: string
                                name:
                                  type: string
                                sqlType:
                                  type: string
                              required:
                              - name
                              - sqlType
                              type: object
                            maxItems: 1000
                            type: array
                          recordEncoding:
                            type: string
                          recordFormat:
                            properties:
                              mappingParameters:
                                properties:
                                  csv:
                                    properties:
                                      recordColumnDelimiter:
                                        type: string
                                      recordRowDelimiter:
                                        type: string
                                    required:
                                    - recordColumnDelimiter
                                    - recordRowDelimiter
                                    type: object
                                  json:
                                    properties:
                                      recordRowPath:
                                        type: string
                                    required:
                                    - recordRowPath
                                    type: object
                                type: object
                              recordFormatType:
                                type: string
                            type: object
                        required:
                        - recordColumns
                        - recordFormat
                        type: object
                      tableName:
                        type: string
                    required:
                    - s3
                    - schema
                    - tableName
                    type: object
                  startApplication:
                    type: boolean
                  status:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  version:
                    format: int64
                    type: integer
                required:
                - name
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  arn:
                    type: string
                  cloudwatchLoggingOptions:
                    properties:
                      ID:
                        type: string
                      logStreamArn:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - logStreamArn
                    - roleArn
                    type: object
                  code:
                    type: string
                  createTimestamp:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  inputs:
                    properties:
                      ID:
                        type: string
                      kinesisFirehose:
                        properties:
                          resourceArn:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - resourceArn
                        - roleArn
                        type: object
                      kinesisStream:
                        properties:
                          resourceArn:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - resourceArn
                        - roleArn
                        type: object
                      namePrefix:
                        type: string
                      parallelism:
                        properties:
                          count:
                            format: int64
                            type: integer
                        type: object
                      processingConfiguration:
                        properties:
                          lambda:
                            properties:
                              resourceArn:
                                type: string
                              roleArn:
                                type: string
                            required:
                            - resourceArn
                            - roleArn
                            type: object
                        required:
                        - lambda
                        type: object
                      schema:
                        properties:
                          recordColumns:
                            items:
                              properties:
                                mapping:
                                  type: string
                                name:
                                  type: string
                                sqlType:
                                  type: string
                              required:
                              - name
                              - sqlType
                              type: object
                            maxItems: 1000
                            type: array
                          recordEncoding:
                            type: string
                          recordFormat:
                            properties:
                              mappingParameters:
                                properties:
                                  csv:
                                    properties:
                                      recordColumnDelimiter:
                                        type: string
                                      recordRowDelimiter:
                                        type: string
                                    required:
                                    - recordColumnDelimiter
                                    - recordRowDelimiter
                                    type: object
                                  json:
                                    properties:
                                      recordRowPath:
                                        type: string
                                    required:
                                    - recordRowPath
                                    type: object
                                type: object
                              recordFormatType:
                                type: string
                            type: object
                        required:
                        - recordColumns
                        - recordFormat
                        type: object
                      startingPositionConfiguration:
                        items:
                          properties:
                            startingPosition:
                              type: string
                          type: object
                        type: array
                      streamNames:
                        items:
                          type: string
                        type: array
                    required:
                    - namePrefix
                    - schema
                    type: object
                  lastUpdateTimestamp:
                    type: string
                  name:
                    type: string
                  outputs:
                    items:
                      properties:
                        ID:
                          type: string
                        kinesisFirehose:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        kinesisStream:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        lambda:
                          properties:
                            resourceArn:
                              type: string
                            roleArn:
                              type: string
                          required:
                          - resourceArn
                          - roleArn
                          type: object
                        name:
                          type: string
                        schema:
                          properties:
                            recordFormatType:
                              type: string
                          required:
                          - recordFormatType
                          type: object
                      required:
                      - name
                      - schema
                      type: object
                    maxItems: 3
                    type: array
                  referenceDataSources:
                    properties:
                      ID:
                        type: string
                      s3:
                        properties:
                          bucketArn:
                            type: string
                          fileKey:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - bucketArn
                        - fileKey
                        - roleArn
                        type: object
                      schema:
                        properties:
                          recordColumns:
                            items:
                              properties:
                                mapping:
                                  type: string
                                name:
                                  type: string
                                sqlType:
                                  type: string
                              required:
                              - name
                              - sqlType
                              type: object
                            maxItems: 1000
                            type: array
                          recordEncoding:
                            type: string
                          recordFormat:
                            properties:
                              mappingParameters:
                                properties:
                                  csv:
                                    properties:
                                      recordColumnDelimiter:
                                        type: string
                                      recordRowDelimiter:
                                        type: string
                                    required:
                                    - recordColumnDelimiter
                                    - recordRowDelimiter
                                    type: object
                                  json:
                                    properties:
                                      recordRowPath:
                                        type: string
                                    required:
                                    - recordRowPath
                                    type: object
                                type: object
                              recordFormatType:
                                type: string
                            type: object
                        required:
                        - recordColumns
                        - recordFormat
                        type: object
                      tableName:
                        type: string
                    required:
                    - s3
                    - schema
                    - tableName
                    type: object
                  startApplication:
                    type: boolean
                  status:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  version:
                    format: int64
                    type: integer
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
